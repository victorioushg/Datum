'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsCompras"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsCompras
    Inherits Global.System.Data.DataSet
    
    Private tabledtComprobantePago As dtComprobantePagoDataTable
    
    Private tabledtListadoCompras As dtListadoComprasDataTable
    
    Private tabledtProveedor As dtProveedorDataTable
    
    Private tabledtMovimientos As dtMovimientosDataTable
    
    Private tabledtVencimientosR As dtVencimientosRDataTable
    
    Private tabledtLibroIVA As dtLibroIVADataTable
    
    Private tabledtRetencionesISLR As dtRetencionesISLRDataTable
    
    Private tabledtRetencionesIVA As dtRetencionesIVADataTable
    
    Private tabledtGrupoSubGrupo As dtGrupoSubGrupoDataTable
    
    Private tabledtListadoComprasItems As dtListadoComprasItemsDataTable
    
    Private tabledtOrdenesDeCompra As dtOrdenesDeCompraDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dtComprobantePago")) Is Nothing) Then
                MyBase.Tables.Add(New dtComprobantePagoDataTable(ds.Tables("dtComprobantePago")))
            End If
            If (Not (ds.Tables("dtListadoCompras")) Is Nothing) Then
                MyBase.Tables.Add(New dtListadoComprasDataTable(ds.Tables("dtListadoCompras")))
            End If
            If (Not (ds.Tables("dtProveedor")) Is Nothing) Then
                MyBase.Tables.Add(New dtProveedorDataTable(ds.Tables("dtProveedor")))
            End If
            If (Not (ds.Tables("dtMovimientos")) Is Nothing) Then
                MyBase.Tables.Add(New dtMovimientosDataTable(ds.Tables("dtMovimientos")))
            End If
            If (Not (ds.Tables("dtVencimientosR")) Is Nothing) Then
                MyBase.Tables.Add(New dtVencimientosRDataTable(ds.Tables("dtVencimientosR")))
            End If
            If (Not (ds.Tables("dtLibroIVA")) Is Nothing) Then
                MyBase.Tables.Add(New dtLibroIVADataTable(ds.Tables("dtLibroIVA")))
            End If
            If (Not (ds.Tables("dtRetencionesISLR")) Is Nothing) Then
                MyBase.Tables.Add(New dtRetencionesISLRDataTable(ds.Tables("dtRetencionesISLR")))
            End If
            If (Not (ds.Tables("dtRetencionesIVA")) Is Nothing) Then
                MyBase.Tables.Add(New dtRetencionesIVADataTable(ds.Tables("dtRetencionesIVA")))
            End If
            If (Not (ds.Tables("dtGrupoSubGrupo")) Is Nothing) Then
                MyBase.Tables.Add(New dtGrupoSubGrupoDataTable(ds.Tables("dtGrupoSubGrupo")))
            End If
            If (Not (ds.Tables("dtListadoComprasItems")) Is Nothing) Then
                MyBase.Tables.Add(New dtListadoComprasItemsDataTable(ds.Tables("dtListadoComprasItems")))
            End If
            If (Not (ds.Tables("dtOrdenesDeCompra")) Is Nothing) Then
                MyBase.Tables.Add(New dtOrdenesDeCompraDataTable(ds.Tables("dtOrdenesDeCompra")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtComprobantePago() As dtComprobantePagoDataTable
        Get
            Return Me.tabledtComprobantePago
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtListadoCompras() As dtListadoComprasDataTable
        Get
            Return Me.tabledtListadoCompras
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtProveedor() As dtProveedorDataTable
        Get
            Return Me.tabledtProveedor
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtMovimientos() As dtMovimientosDataTable
        Get
            Return Me.tabledtMovimientos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtVencimientosR() As dtVencimientosRDataTable
        Get
            Return Me.tabledtVencimientosR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtLibroIVA() As dtLibroIVADataTable
        Get
            Return Me.tabledtLibroIVA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtRetencionesISLR() As dtRetencionesISLRDataTable
        Get
            Return Me.tabledtRetencionesISLR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtRetencionesIVA() As dtRetencionesIVADataTable
        Get
            Return Me.tabledtRetencionesIVA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtGrupoSubGrupo() As dtGrupoSubGrupoDataTable
        Get
            Return Me.tabledtGrupoSubGrupo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtListadoComprasItems() As dtListadoComprasItemsDataTable
        Get
            Return Me.tabledtListadoComprasItems
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtOrdenesDeCompra() As dtOrdenesDeCompraDataTable
        Get
            Return Me.tabledtOrdenesDeCompra
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsCompras = CType(MyBase.Clone,dsCompras)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("dtComprobantePago")) Is Nothing) Then
                MyBase.Tables.Add(New dtComprobantePagoDataTable(ds.Tables("dtComprobantePago")))
            End If
            If (Not (ds.Tables("dtListadoCompras")) Is Nothing) Then
                MyBase.Tables.Add(New dtListadoComprasDataTable(ds.Tables("dtListadoCompras")))
            End If
            If (Not (ds.Tables("dtProveedor")) Is Nothing) Then
                MyBase.Tables.Add(New dtProveedorDataTable(ds.Tables("dtProveedor")))
            End If
            If (Not (ds.Tables("dtMovimientos")) Is Nothing) Then
                MyBase.Tables.Add(New dtMovimientosDataTable(ds.Tables("dtMovimientos")))
            End If
            If (Not (ds.Tables("dtVencimientosR")) Is Nothing) Then
                MyBase.Tables.Add(New dtVencimientosRDataTable(ds.Tables("dtVencimientosR")))
            End If
            If (Not (ds.Tables("dtLibroIVA")) Is Nothing) Then
                MyBase.Tables.Add(New dtLibroIVADataTable(ds.Tables("dtLibroIVA")))
            End If
            If (Not (ds.Tables("dtRetencionesISLR")) Is Nothing) Then
                MyBase.Tables.Add(New dtRetencionesISLRDataTable(ds.Tables("dtRetencionesISLR")))
            End If
            If (Not (ds.Tables("dtRetencionesIVA")) Is Nothing) Then
                MyBase.Tables.Add(New dtRetencionesIVADataTable(ds.Tables("dtRetencionesIVA")))
            End If
            If (Not (ds.Tables("dtGrupoSubGrupo")) Is Nothing) Then
                MyBase.Tables.Add(New dtGrupoSubGrupoDataTable(ds.Tables("dtGrupoSubGrupo")))
            End If
            If (Not (ds.Tables("dtListadoComprasItems")) Is Nothing) Then
                MyBase.Tables.Add(New dtListadoComprasItemsDataTable(ds.Tables("dtListadoComprasItems")))
            End If
            If (Not (ds.Tables("dtOrdenesDeCompra")) Is Nothing) Then
                MyBase.Tables.Add(New dtOrdenesDeCompraDataTable(ds.Tables("dtOrdenesDeCompra")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledtComprobantePago = CType(MyBase.Tables("dtComprobantePago"),dtComprobantePagoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtComprobantePago) Is Nothing) Then
                Me.tabledtComprobantePago.InitVars
            End If
        End If
        Me.tabledtListadoCompras = CType(MyBase.Tables("dtListadoCompras"),dtListadoComprasDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtListadoCompras) Is Nothing) Then
                Me.tabledtListadoCompras.InitVars
            End If
        End If
        Me.tabledtProveedor = CType(MyBase.Tables("dtProveedor"),dtProveedorDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtProveedor) Is Nothing) Then
                Me.tabledtProveedor.InitVars
            End If
        End If
        Me.tabledtMovimientos = CType(MyBase.Tables("dtMovimientos"),dtMovimientosDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtMovimientos) Is Nothing) Then
                Me.tabledtMovimientos.InitVars
            End If
        End If
        Me.tabledtVencimientosR = CType(MyBase.Tables("dtVencimientosR"),dtVencimientosRDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtVencimientosR) Is Nothing) Then
                Me.tabledtVencimientosR.InitVars
            End If
        End If
        Me.tabledtLibroIVA = CType(MyBase.Tables("dtLibroIVA"),dtLibroIVADataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtLibroIVA) Is Nothing) Then
                Me.tabledtLibroIVA.InitVars
            End If
        End If
        Me.tabledtRetencionesISLR = CType(MyBase.Tables("dtRetencionesISLR"),dtRetencionesISLRDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtRetencionesISLR) Is Nothing) Then
                Me.tabledtRetencionesISLR.InitVars
            End If
        End If
        Me.tabledtRetencionesIVA = CType(MyBase.Tables("dtRetencionesIVA"),dtRetencionesIVADataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtRetencionesIVA) Is Nothing) Then
                Me.tabledtRetencionesIVA.InitVars
            End If
        End If
        Me.tabledtGrupoSubGrupo = CType(MyBase.Tables("dtGrupoSubGrupo"),dtGrupoSubGrupoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtGrupoSubGrupo) Is Nothing) Then
                Me.tabledtGrupoSubGrupo.InitVars
            End If
        End If
        Me.tabledtListadoComprasItems = CType(MyBase.Tables("dtListadoComprasItems"),dtListadoComprasItemsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtListadoComprasItems) Is Nothing) Then
                Me.tabledtListadoComprasItems.InitVars
            End If
        End If
        Me.tabledtOrdenesDeCompra = CType(MyBase.Tables("dtOrdenesDeCompra"),dtOrdenesDeCompraDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtOrdenesDeCompra) Is Nothing) Then
                Me.tabledtOrdenesDeCompra.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsCompras"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsCompras.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledtComprobantePago = New dtComprobantePagoDataTable()
        MyBase.Tables.Add(Me.tabledtComprobantePago)
        Me.tabledtListadoCompras = New dtListadoComprasDataTable()
        MyBase.Tables.Add(Me.tabledtListadoCompras)
        Me.tabledtProveedor = New dtProveedorDataTable()
        MyBase.Tables.Add(Me.tabledtProveedor)
        Me.tabledtMovimientos = New dtMovimientosDataTable()
        MyBase.Tables.Add(Me.tabledtMovimientos)
        Me.tabledtVencimientosR = New dtVencimientosRDataTable()
        MyBase.Tables.Add(Me.tabledtVencimientosR)
        Me.tabledtLibroIVA = New dtLibroIVADataTable()
        MyBase.Tables.Add(Me.tabledtLibroIVA)
        Me.tabledtRetencionesISLR = New dtRetencionesISLRDataTable()
        MyBase.Tables.Add(Me.tabledtRetencionesISLR)
        Me.tabledtRetencionesIVA = New dtRetencionesIVADataTable()
        MyBase.Tables.Add(Me.tabledtRetencionesIVA)
        Me.tabledtGrupoSubGrupo = New dtGrupoSubGrupoDataTable()
        MyBase.Tables.Add(Me.tabledtGrupoSubGrupo)
        Me.tabledtListadoComprasItems = New dtListadoComprasItemsDataTable()
        MyBase.Tables.Add(Me.tabledtListadoComprasItems)
        Me.tabledtOrdenesDeCompra = New dtOrdenesDeCompraDataTable()
        MyBase.Tables.Add(Me.tabledtOrdenesDeCompra)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtComprobantePago() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtListadoCompras() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtProveedor() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtMovimientos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtVencimientosR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtLibroIVA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtRetencionesISLR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtRetencionesIVA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtGrupoSubGrupo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtListadoComprasItems() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtOrdenesDeCompra() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsCompras = New dsCompras()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtComprobantePagoRowChangeEventHandler(ByVal sender As Object, ByVal e As dtComprobantePagoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtListadoComprasRowChangeEventHandler(ByVal sender As Object, ByVal e As dtListadoComprasRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtProveedorRowChangeEventHandler(ByVal sender As Object, ByVal e As dtProveedorRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtMovimientosRowChangeEventHandler(ByVal sender As Object, ByVal e As dtMovimientosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtVencimientosRRowChangeEventHandler(ByVal sender As Object, ByVal e As dtVencimientosRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtLibroIVARowChangeEventHandler(ByVal sender As Object, ByVal e As dtLibroIVARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtRetencionesISLRRowChangeEventHandler(ByVal sender As Object, ByVal e As dtRetencionesISLRRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtRetencionesIVARowChangeEventHandler(ByVal sender As Object, ByVal e As dtRetencionesIVARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtGrupoSubGrupoRowChangeEventHandler(ByVal sender As Object, ByVal e As dtGrupoSubGrupoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtListadoComprasItemsRowChangeEventHandler(ByVal sender As Object, ByVal e As dtListadoComprasItemsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtOrdenesDeCompraRowChangeEventHandler(ByVal sender As Object, ByVal e As dtOrdenesDeCompraRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtComprobantePagoDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtComprobantePagoRow)
        
        Private columncomproba As Global.System.Data.DataColumn
        
        Private columnemision As Global.System.Data.DataColumn
        
        Private columncodpro As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnrefer As Global.System.Data.DataColumn
        
        Private columnnummov As Global.System.Data.DataColumn
        
        Private columntipomov As Global.System.Data.DataColumn
        
        Private columnconcepto As Global.System.Data.DataColumn
        
        Private columnsaldos As Global.System.Data.DataColumn
        
        Private columnimporte As Global.System.Data.DataColumn
        
        Private columnid_emp As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnemisiondoc As Global.System.Data.DataColumn
        
        Private columnformapag As Global.System.Data.DataColumn
        
        Private columnnumpag As Global.System.Data.DataColumn
        
        Private columnnompag As Global.System.Data.DataColumn
        
        Private columnbenefic As Global.System.Data.DataColumn
        
        Private columnorigen As Global.System.Data.DataColumn
        
        Private columnzona As Global.System.Data.DataColumn
        
        Private columnnomban As Global.System.Data.DataColumn
        
        Private columnctaban As Global.System.Data.DataColumn
        
        Private columnformato As Global.System.Data.DataColumn
        
        Private columnrenglon As Global.System.Data.DataColumn
        
        Private columncodcon As Global.System.Data.DataColumn
        
        Private columnrefercont As Global.System.Data.DataColumn
        
        Private columnconceptocont As Global.System.Data.DataColumn
        
        Private columnimportecont As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtComprobantePago"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property comprobaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomproba
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodpro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property referColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrefer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nummovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnummov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipomovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipomov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property conceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property saldosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property importeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_empColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_emp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisiondocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemisiondoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property formapagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnformapag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numpagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumpag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nompagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnompag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property beneficColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbenefic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property origenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property zonaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzona
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomban
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ctabanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaban
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property formatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnformato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property renglonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrenglon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codconColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodcon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property refercontColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrefercont
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property conceptocontColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconceptocont
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property importecontColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimportecont
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtComprobantePagoRow
            Get
                Return CType(Me.Rows(index),dtComprobantePagoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtComprobantePagoRowChanging As dtComprobantePagoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtComprobantePagoRowChanged As dtComprobantePagoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtComprobantePagoRowDeleting As dtComprobantePagoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtComprobantePagoRowDeleted As dtComprobantePagoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtComprobantePagoRow(ByVal row As dtComprobantePagoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtComprobantePagoRow( _
                    ByVal comproba As String,  _
                    ByVal emision As Date,  _
                    ByVal codpro As String,  _
                    ByVal nombre As String,  _
                    ByVal refer As String,  _
                    ByVal nummov As String,  _
                    ByVal tipomov As String,  _
                    ByVal concepto As String,  _
                    ByVal saldos As Decimal,  _
                    ByVal importe As Double,  _
                    ByVal id_emp As String,  _
                    ByVal tipo As Long,  _
                    ByVal emisiondoc As Date,  _
                    ByVal formapag As String,  _
                    ByVal numpag As String,  _
                    ByVal nompag As String,  _
                    ByVal benefic As String,  _
                    ByVal origen As String,  _
                    ByVal zona As String,  _
                    ByVal nomban As String,  _
                    ByVal ctaban As String,  _
                    ByVal formato As String,  _
                    ByVal renglon As String,  _
                    ByVal codcon As String,  _
                    ByVal refercont As String,  _
                    ByVal conceptocont As String,  _
                    ByVal importecont As Double) As dtComprobantePagoRow
            Dim rowdtComprobantePagoRow As dtComprobantePagoRow = CType(Me.NewRow,dtComprobantePagoRow)
            Dim columnValuesArray() As Object = New Object() {comproba, emision, codpro, nombre, refer, nummov, tipomov, concepto, saldos, importe, id_emp, tipo, emisiondoc, formapag, numpag, nompag, benefic, origen, zona, nomban, ctaban, formato, renglon, codcon, refercont, conceptocont, importecont}
            rowdtComprobantePagoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtComprobantePagoRow)
            Return rowdtComprobantePagoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByemisioncodpronummovtipomovid_emp(ByVal emision As Date, ByVal codpro As String, ByVal nummov As String, ByVal tipomov As String, ByVal id_emp As String) As dtComprobantePagoRow
            Return CType(Me.Rows.Find(New Object() {emision, codpro, nummov, tipomov, id_emp}),dtComprobantePagoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtComprobantePagoDataTable = CType(MyBase.Clone,dtComprobantePagoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtComprobantePagoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncomproba = MyBase.Columns("comproba")
            Me.columnemision = MyBase.Columns("emision")
            Me.columncodpro = MyBase.Columns("codpro")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnrefer = MyBase.Columns("refer")
            Me.columnnummov = MyBase.Columns("nummov")
            Me.columntipomov = MyBase.Columns("tipomov")
            Me.columnconcepto = MyBase.Columns("concepto")
            Me.columnsaldos = MyBase.Columns("saldos")
            Me.columnimporte = MyBase.Columns("importe")
            Me.columnid_emp = MyBase.Columns("id_emp")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnemisiondoc = MyBase.Columns("emisiondoc")
            Me.columnformapag = MyBase.Columns("formapag")
            Me.columnnumpag = MyBase.Columns("numpag")
            Me.columnnompag = MyBase.Columns("nompag")
            Me.columnbenefic = MyBase.Columns("benefic")
            Me.columnorigen = MyBase.Columns("origen")
            Me.columnzona = MyBase.Columns("zona")
            Me.columnnomban = MyBase.Columns("nomban")
            Me.columnctaban = MyBase.Columns("ctaban")
            Me.columnformato = MyBase.Columns("formato")
            Me.columnrenglon = MyBase.Columns("renglon")
            Me.columncodcon = MyBase.Columns("codcon")
            Me.columnrefercont = MyBase.Columns("refercont")
            Me.columnconceptocont = MyBase.Columns("conceptocont")
            Me.columnimportecont = MyBase.Columns("importecont")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncomproba = New Global.System.Data.DataColumn("comproba", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomproba)
            Me.columnemision = New Global.System.Data.DataColumn("emision", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision)
            Me.columncodpro = New Global.System.Data.DataColumn("codpro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodpro)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnrefer = New Global.System.Data.DataColumn("refer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrefer)
            Me.columnnummov = New Global.System.Data.DataColumn("nummov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnummov)
            Me.columntipomov = New Global.System.Data.DataColumn("tipomov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipomov)
            Me.columnconcepto = New Global.System.Data.DataColumn("concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcepto)
            Me.columnsaldos = New Global.System.Data.DataColumn("saldos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldos)
            Me.columnimporte = New Global.System.Data.DataColumn("importe", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimporte)
            Me.columnid_emp = New Global.System.Data.DataColumn("id_emp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_emp)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnemisiondoc = New Global.System.Data.DataColumn("emisiondoc", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemisiondoc)
            Me.columnformapag = New Global.System.Data.DataColumn("formapag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnformapag)
            Me.columnnumpag = New Global.System.Data.DataColumn("numpag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumpag)
            Me.columnnompag = New Global.System.Data.DataColumn("nompag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnompag)
            Me.columnbenefic = New Global.System.Data.DataColumn("benefic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbenefic)
            Me.columnorigen = New Global.System.Data.DataColumn("origen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigen)
            Me.columnzona = New Global.System.Data.DataColumn("zona", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzona)
            Me.columnnomban = New Global.System.Data.DataColumn("nomban", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomban)
            Me.columnctaban = New Global.System.Data.DataColumn("ctaban", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaban)
            Me.columnformato = New Global.System.Data.DataColumn("formato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnformato)
            Me.columnrenglon = New Global.System.Data.DataColumn("renglon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrenglon)
            Me.columncodcon = New Global.System.Data.DataColumn("codcon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodcon)
            Me.columnrefercont = New Global.System.Data.DataColumn("refercont", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrefercont)
            Me.columnconceptocont = New Global.System.Data.DataColumn("conceptocont", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconceptocont)
            Me.columnimportecont = New Global.System.Data.DataColumn("importecont", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimportecont)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnemision, Me.columncodpro, Me.columnnummov, Me.columntipomov, Me.columnid_emp}, true))
            Me.columncomproba.AllowDBNull = false
            Me.columncomproba.MaxLength = 15
            Me.columnemision.AllowDBNull = false
            Me.columncodpro.AllowDBNull = false
            Me.columncodpro.MaxLength = 15
            Me.columnnombre.MaxLength = 150
            Me.columnrefer.AllowDBNull = false
            Me.columnrefer.MaxLength = 30
            Me.columnnummov.AllowDBNull = false
            Me.columnnummov.MaxLength = 30
            Me.columntipomov.AllowDBNull = false
            Me.columntipomov.MaxLength = 2
            Me.columnconcepto.AllowDBNull = false
            Me.columnsaldos.AllowDBNull = false
            Me.columnimporte.AllowDBNull = false
            Me.columnid_emp.AllowDBNull = false
            Me.columnid_emp.MaxLength = 2
            Me.columntipo.AllowDBNull = false
            Me.columnemisiondoc.AllowDBNull = false
            Me.columnformapag.AllowDBNull = false
            Me.columnformapag.MaxLength = 25
            Me.columnnumpag.AllowDBNull = false
            Me.columnnumpag.MaxLength = 20
            Me.columnnompag.AllowDBNull = false
            Me.columnnompag.MaxLength = 20
            Me.columnbenefic.AllowDBNull = false
            Me.columnbenefic.MaxLength = 250
            Me.columnorigen.AllowDBNull = false
            Me.columnorigen.MaxLength = 3
            Me.columnzona.MaxLength = 5
            Me.columnnomban.MaxLength = 50
            Me.columnctaban.MaxLength = 50
            Me.columnformato.MaxLength = 2
            Me.columnrenglon.MaxLength = 5
            Me.columncodcon.MaxLength = 30
            Me.columnrefercont.MaxLength = 30
            Me.columnconceptocont.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtComprobantePagoRow() As dtComprobantePagoRow
            Return CType(Me.NewRow,dtComprobantePagoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtComprobantePagoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtComprobantePagoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtComprobantePagoRowChangedEvent) Is Nothing) Then
                RaiseEvent dtComprobantePagoRowChanged(Me, New dtComprobantePagoRowChangeEvent(CType(e.Row,dtComprobantePagoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtComprobantePagoRowChangingEvent) Is Nothing) Then
                RaiseEvent dtComprobantePagoRowChanging(Me, New dtComprobantePagoRowChangeEvent(CType(e.Row,dtComprobantePagoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtComprobantePagoRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtComprobantePagoRowDeleted(Me, New dtComprobantePagoRowChangeEvent(CType(e.Row,dtComprobantePagoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtComprobantePagoRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtComprobantePagoRowDeleting(Me, New dtComprobantePagoRowChangeEvent(CType(e.Row,dtComprobantePagoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtComprobantePagoRow(ByVal row As dtComprobantePagoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtComprobantePagoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtListadoComprasDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtListadoComprasRow)
        
        Private columnnumcom As Global.System.Data.DataColumn
        
        Private columnemision As Global.System.Data.DataColumn
        
        Private columncodpro As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columngrupo As Global.System.Data.DataColumn
        
        Private columnsubgrupo As Global.System.Data.DataColumn
        
        Private columncategoriaprov As Global.System.Data.DataColumn
        
        Private columnunidadnegocioprov As Global.System.Data.DataColumn
        
        Private columntot_net As Global.System.Data.DataColumn
        
        Private columndescuen As Global.System.Data.DataColumn
        
        Private columnimp_iva As Global.System.Data.DataColumn
        
        Private columntot_com As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtListadoCompras"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodpro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property grupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property subgrupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubgrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoriaprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoriaprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property unidadnegocioprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunidadnegocioprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tot_netColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntot_net
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property descuenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescuen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property imp_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimp_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tot_comColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntot_com
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtListadoComprasRow
            Get
                Return CType(Me.Rows(index),dtListadoComprasRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtListadoComprasRowChanging As dtListadoComprasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtListadoComprasRowChanged As dtListadoComprasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtListadoComprasRowDeleting As dtListadoComprasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtListadoComprasRowDeleted As dtListadoComprasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtListadoComprasRow(ByVal row As dtListadoComprasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtListadoComprasRow(ByVal numcom As String, ByVal emision As Date, ByVal codpro As String, ByVal nombre As String, ByVal grupo As String, ByVal subgrupo As String, ByVal categoriaprov As String, ByVal unidadnegocioprov As String, ByVal tot_net As Double, ByVal descuen As Double, ByVal imp_iva As Double, ByVal tot_com As Double) As dtListadoComprasRow
            Dim rowdtListadoComprasRow As dtListadoComprasRow = CType(Me.NewRow,dtListadoComprasRow)
            Dim columnValuesArray() As Object = New Object() {numcom, emision, codpro, nombre, grupo, subgrupo, categoriaprov, unidadnegocioprov, tot_net, descuen, imp_iva, tot_com}
            rowdtListadoComprasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtListadoComprasRow)
            Return rowdtListadoComprasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBynumcomcodpro(ByVal numcom As String, ByVal codpro As String) As dtListadoComprasRow
            Return CType(Me.Rows.Find(New Object() {numcom, codpro}),dtListadoComprasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtListadoComprasDataTable = CType(MyBase.Clone,dtListadoComprasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtListadoComprasDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnnumcom = MyBase.Columns("numcom")
            Me.columnemision = MyBase.Columns("emision")
            Me.columncodpro = MyBase.Columns("codpro")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columngrupo = MyBase.Columns("grupo")
            Me.columnsubgrupo = MyBase.Columns("subgrupo")
            Me.columncategoriaprov = MyBase.Columns("categoriaprov")
            Me.columnunidadnegocioprov = MyBase.Columns("unidadnegocioprov")
            Me.columntot_net = MyBase.Columns("tot_net")
            Me.columndescuen = MyBase.Columns("descuen")
            Me.columnimp_iva = MyBase.Columns("imp_iva")
            Me.columntot_com = MyBase.Columns("tot_com")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnnumcom = New Global.System.Data.DataColumn("numcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcom)
            Me.columnemision = New Global.System.Data.DataColumn("emision", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision)
            Me.columncodpro = New Global.System.Data.DataColumn("codpro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodpro)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columngrupo = New Global.System.Data.DataColumn("grupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngrupo)
            Me.columnsubgrupo = New Global.System.Data.DataColumn("subgrupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubgrupo)
            Me.columncategoriaprov = New Global.System.Data.DataColumn("categoriaprov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoriaprov)
            Me.columnunidadnegocioprov = New Global.System.Data.DataColumn("unidadnegocioprov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunidadnegocioprov)
            Me.columntot_net = New Global.System.Data.DataColumn("tot_net", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntot_net)
            Me.columndescuen = New Global.System.Data.DataColumn("descuen", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescuen)
            Me.columnimp_iva = New Global.System.Data.DataColumn("imp_iva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimp_iva)
            Me.columntot_com = New Global.System.Data.DataColumn("tot_com", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntot_com)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnnumcom, Me.columncodpro}, true))
            Me.columnnumcom.AllowDBNull = false
            Me.columnnumcom.MaxLength = 15
            Me.columnemision.AllowDBNull = false
            Me.columncodpro.AllowDBNull = false
            Me.columncodpro.MaxLength = 15
            Me.columnnombre.MaxLength = 150
            Me.columngrupo.MaxLength = 50
            Me.columnsubgrupo.MaxLength = 50
            Me.columncategoriaprov.MaxLength = 50
            Me.columnunidadnegocioprov.MaxLength = 50
            Me.columntot_net.AllowDBNull = false
            Me.columndescuen.AllowDBNull = false
            Me.columnimp_iva.AllowDBNull = false
            Me.columntot_com.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtListadoComprasRow() As dtListadoComprasRow
            Return CType(Me.NewRow,dtListadoComprasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtListadoComprasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtListadoComprasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtListadoComprasRowChangedEvent) Is Nothing) Then
                RaiseEvent dtListadoComprasRowChanged(Me, New dtListadoComprasRowChangeEvent(CType(e.Row,dtListadoComprasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtListadoComprasRowChangingEvent) Is Nothing) Then
                RaiseEvent dtListadoComprasRowChanging(Me, New dtListadoComprasRowChangeEvent(CType(e.Row,dtListadoComprasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtListadoComprasRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtListadoComprasRowDeleted(Me, New dtListadoComprasRowChangeEvent(CType(e.Row,dtListadoComprasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtListadoComprasRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtListadoComprasRowDeleting(Me, New dtListadoComprasRowChangeEvent(CType(e.Row,dtListadoComprasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtListadoComprasRow(ByVal row As dtListadoComprasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtListadoComprasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtProveedorDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtProveedorRow)
        
        Private columncodpro As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnasignado As Global.System.Data.DataColumn
        
        Private columnRIF As Global.System.Data.DataColumn
        
        Private columnNIT As Global.System.Data.DataColumn
        
        Private columnDIRFISCAL As Global.System.Data.DataColumn
        
        Private columndirprove As Global.System.Data.DataColumn
        
        Private columncategoriaprov As Global.System.Data.DataColumn
        
        Private columnunidadnegocioprov As Global.System.Data.DataColumn
        
        Private columnEMAIL1 As Global.System.Data.DataColumn
        
        Private columnEMAIL2 As Global.System.Data.DataColumn
        
        Private columnEMAIL3 As Global.System.Data.DataColumn
        
        Private columnEMAIL4 As Global.System.Data.DataColumn
        
        Private columnemail5 As Global.System.Data.DataColumn
        
        Private columnsitioweb As Global.System.Data.DataColumn
        
        Private columnTELEF1 As Global.System.Data.DataColumn
        
        Private columnTELEF2 As Global.System.Data.DataColumn
        
        Private columntelef3 As Global.System.Data.DataColumn
        
        Private columnfax As Global.System.Data.DataColumn
        
        Private columngerente As Global.System.Data.DataColumn
        
        Private columntelger As Global.System.Data.DataColumn
        
        Private columncontacto As Global.System.Data.DataColumn
        
        Private columntelcon As Global.System.Data.DataColumn
        
        Private columnlimcredito As Global.System.Data.DataColumn
        
        Private columndisponible As Global.System.Data.DataColumn
        
        Private columndesc1 As Global.System.Data.DataColumn
        
        Private columndesc2 As Global.System.Data.DataColumn
        
        Private columndesc3 As Global.System.Data.DataColumn
        
        Private columndias2 As Global.System.Data.DataColumn
        
        Private columndias3 As Global.System.Data.DataColumn
        
        Private columnobservacion As Global.System.Data.DataColumn
        
        Private columnzona As Global.System.Data.DataColumn
        
        Private columnzonanombre As Global.System.Data.DataColumn
        
        Private columncobrador As Global.System.Data.DataColumn
        
        Private columnvendedor As Global.System.Data.DataColumn
        
        Private columnsaldo As Global.System.Data.DataColumn
        
        Private columnultpago As Global.System.Data.DataColumn
        
        Private columnfecultpago As Global.System.Data.DataColumn
        
        Private columnforultpago As Global.System.Data.DataColumn
        
        Private columnregimeniva As Global.System.Data.DataColumn
        
        Private columnformapago As Global.System.Data.DataColumn
        
        Private columnbanco As Global.System.Data.DataColumn
        
        Private columnctabanco As Global.System.Data.DataColumn
        
        Private columnbancodeposito1 As Global.System.Data.DataColumn
        
        Private columnbancodeposito2 As Global.System.Data.DataColumn
        
        Private columnctabancodeposito1 As Global.System.Data.DataColumn
        
        Private columnctabancodeposito2 As Global.System.Data.DataColumn
        
        Private columningreso As Global.System.Data.DataColumn
        
        Private columncodcon As Global.System.Data.DataColumn
        
        Private columnestatus As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnID_EMP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtProveedor"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodpro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property asignadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnasignado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RIFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DIRFISCALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRFISCAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dirproveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirprove
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoriaprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoriaprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property unidadnegocioprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunidadnegocioprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EMAIL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EMAIL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EMAIL3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EMAIL4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property email5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property sitiowebColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsitioweb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEF1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEF1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TELEF2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEF2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telef3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntelef3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property gerenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngerente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telgerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelger
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property contactoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontacto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property telconColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelcon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property limcreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlimcredito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property disponibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndisponible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property desc1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property desc2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property desc3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dias2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndias2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dias3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndias3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property observacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobservacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property zonaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzona
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property zonanombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzonanombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cobradorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncobrador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property vendedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvendedor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property saldoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ultpagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnultpago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fecultpagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecultpago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property forultpagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnforultpago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property regimenivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnregimeniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property formapagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnformapago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property bancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ctabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property bancodeposito1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnbancodeposito1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property bancodeposito2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnbancodeposito2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ctabancodeposito1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnctabancodeposito1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ctabancodeposito2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnctabancodeposito2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ingresoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columningreso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codconColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodcon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_EMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_EMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtProveedorRow
            Get
                Return CType(Me.Rows(index),dtProveedorRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtProveedorRowChanging As dtProveedorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtProveedorRowChanged As dtProveedorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtProveedorRowDeleting As dtProveedorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtProveedorRowDeleted As dtProveedorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtProveedorRow(ByVal row As dtProveedorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtProveedorRow( _
                    ByVal codpro As String,  _
                    ByVal nombre As String,  _
                    ByVal asignado As String,  _
                    ByVal RIF As String,  _
                    ByVal NIT As String,  _
                    ByVal DIRFISCAL As String,  _
                    ByVal dirprove As String,  _
                    ByVal categoriaprov As String,  _
                    ByVal unidadnegocioprov As String,  _
                    ByVal EMAIL1 As String,  _
                    ByVal EMAIL2 As String,  _
                    ByVal EMAIL3 As String,  _
                    ByVal EMAIL4 As String,  _
                    ByVal email5 As String,  _
                    ByVal sitioweb As String,  _
                    ByVal TELEF1 As String,  _
                    ByVal TELEF2 As String,  _
                    ByVal telef3 As String,  _
                    ByVal fax As String,  _
                    ByVal gerente As String,  _
                    ByVal telger As String,  _
                    ByVal contacto As String,  _
                    ByVal telcon As String,  _
                    ByVal limcredito As Double,  _
                    ByVal disponible As Double,  _
                    ByVal desc1 As Double,  _
                    ByVal desc2 As Double,  _
                    ByVal desc3 As Double,  _
                    ByVal dias2 As Integer,  _
                    ByVal dias3 As Integer,  _
                    ByVal observacion As String,  _
                    ByVal zona As String,  _
                    ByVal zonanombre As String,  _
                    ByVal cobrador As String,  _
                    ByVal vendedor As String,  _
                    ByVal saldo As Double,  _
                    ByVal ultpago As Double,  _
                    ByVal fecultpago As Date,  _
                    ByVal forultpago As String,  _
                    ByVal regimeniva As String,  _
                    ByVal formapago As String,  _
                    ByVal banco As String,  _
                    ByVal ctabanco As String,  _
                    ByVal bancodeposito1 As String,  _
                    ByVal bancodeposito2 As String,  _
                    ByVal ctabancodeposito1 As String,  _
                    ByVal ctabancodeposito2 As String,  _
                    ByVal ingreso As Date,  _
                    ByVal codcon As String,  _
                    ByVal estatus As String,  _
                    ByVal tipo As Integer,  _
                    ByVal ID_EMP As String) As dtProveedorRow
            Dim rowdtProveedorRow As dtProveedorRow = CType(Me.NewRow,dtProveedorRow)
            Dim columnValuesArray() As Object = New Object() {codpro, nombre, asignado, RIF, NIT, DIRFISCAL, dirprove, categoriaprov, unidadnegocioprov, EMAIL1, EMAIL2, EMAIL3, EMAIL4, email5, sitioweb, TELEF1, TELEF2, telef3, fax, gerente, telger, contacto, telcon, limcredito, disponible, desc1, desc2, desc3, dias2, dias3, observacion, zona, zonanombre, cobrador, vendedor, saldo, ultpago, fecultpago, forultpago, regimeniva, formapago, banco, ctabanco, bancodeposito1, bancodeposito2, ctabancodeposito1, ctabancodeposito2, ingreso, codcon, estatus, tipo, ID_EMP}
            rowdtProveedorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtProveedorRow)
            Return rowdtProveedorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBycodprotipoID_EMP(ByVal codpro As String, ByVal tipo As Integer, ByVal ID_EMP As String) As dtProveedorRow
            Return CType(Me.Rows.Find(New Object() {codpro, tipo, ID_EMP}),dtProveedorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtProveedorDataTable = CType(MyBase.Clone,dtProveedorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtProveedorDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncodpro = MyBase.Columns("codpro")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnasignado = MyBase.Columns("asignado")
            Me.columnRIF = MyBase.Columns("RIF")
            Me.columnNIT = MyBase.Columns("NIT")
            Me.columnDIRFISCAL = MyBase.Columns("DIRFISCAL")
            Me.columndirprove = MyBase.Columns("dirprove")
            Me.columncategoriaprov = MyBase.Columns("categoriaprov")
            Me.columnunidadnegocioprov = MyBase.Columns("unidadnegocioprov")
            Me.columnEMAIL1 = MyBase.Columns("EMAIL1")
            Me.columnEMAIL2 = MyBase.Columns("EMAIL2")
            Me.columnEMAIL3 = MyBase.Columns("EMAIL3")
            Me.columnEMAIL4 = MyBase.Columns("EMAIL4")
            Me.columnemail5 = MyBase.Columns("email5")
            Me.columnsitioweb = MyBase.Columns("sitioweb")
            Me.columnTELEF1 = MyBase.Columns("TELEF1")
            Me.columnTELEF2 = MyBase.Columns("TELEF2")
            Me.columntelef3 = MyBase.Columns("telef3")
            Me.columnfax = MyBase.Columns("fax")
            Me.columngerente = MyBase.Columns("gerente")
            Me.columntelger = MyBase.Columns("telger")
            Me.columncontacto = MyBase.Columns("contacto")
            Me.columntelcon = MyBase.Columns("telcon")
            Me.columnlimcredito = MyBase.Columns("limcredito")
            Me.columndisponible = MyBase.Columns("disponible")
            Me.columndesc1 = MyBase.Columns("desc1")
            Me.columndesc2 = MyBase.Columns("desc2")
            Me.columndesc3 = MyBase.Columns("desc3")
            Me.columndias2 = MyBase.Columns("dias2")
            Me.columndias3 = MyBase.Columns("dias3")
            Me.columnobservacion = MyBase.Columns("observacion")
            Me.columnzona = MyBase.Columns("zona")
            Me.columnzonanombre = MyBase.Columns("zonanombre")
            Me.columncobrador = MyBase.Columns("cobrador")
            Me.columnvendedor = MyBase.Columns("vendedor")
            Me.columnsaldo = MyBase.Columns("saldo")
            Me.columnultpago = MyBase.Columns("ultpago")
            Me.columnfecultpago = MyBase.Columns("fecultpago")
            Me.columnforultpago = MyBase.Columns("forultpago")
            Me.columnregimeniva = MyBase.Columns("regimeniva")
            Me.columnformapago = MyBase.Columns("formapago")
            Me.columnbanco = MyBase.Columns("banco")
            Me.columnctabanco = MyBase.Columns("ctabanco")
            Me.columnbancodeposito1 = MyBase.Columns("bancodeposito1")
            Me.columnbancodeposito2 = MyBase.Columns("bancodeposito2")
            Me.columnctabancodeposito1 = MyBase.Columns("ctabancodeposito1")
            Me.columnctabancodeposito2 = MyBase.Columns("ctabancodeposito2")
            Me.columningreso = MyBase.Columns("ingreso")
            Me.columncodcon = MyBase.Columns("codcon")
            Me.columnestatus = MyBase.Columns("estatus")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnID_EMP = MyBase.Columns("ID_EMP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncodpro = New Global.System.Data.DataColumn("codpro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodpro)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnasignado = New Global.System.Data.DataColumn("asignado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnasignado)
            Me.columnRIF = New Global.System.Data.DataColumn("RIF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIF)
            Me.columnNIT = New Global.System.Data.DataColumn("NIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIT)
            Me.columnDIRFISCAL = New Global.System.Data.DataColumn("DIRFISCAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRFISCAL)
            Me.columndirprove = New Global.System.Data.DataColumn("dirprove", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirprove)
            Me.columncategoriaprov = New Global.System.Data.DataColumn("categoriaprov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoriaprov)
            Me.columnunidadnegocioprov = New Global.System.Data.DataColumn("unidadnegocioprov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunidadnegocioprov)
            Me.columnEMAIL1 = New Global.System.Data.DataColumn("EMAIL1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL1)
            Me.columnEMAIL2 = New Global.System.Data.DataColumn("EMAIL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL2)
            Me.columnEMAIL3 = New Global.System.Data.DataColumn("EMAIL3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL3)
            Me.columnEMAIL4 = New Global.System.Data.DataColumn("EMAIL4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL4)
            Me.columnemail5 = New Global.System.Data.DataColumn("email5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail5)
            Me.columnsitioweb = New Global.System.Data.DataColumn("sitioweb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsitioweb)
            Me.columnTELEF1 = New Global.System.Data.DataColumn("TELEF1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEF1)
            Me.columnTELEF2 = New Global.System.Data.DataColumn("TELEF2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEF2)
            Me.columntelef3 = New Global.System.Data.DataColumn("telef3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelef3)
            Me.columnfax = New Global.System.Data.DataColumn("fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfax)
            Me.columngerente = New Global.System.Data.DataColumn("gerente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngerente)
            Me.columntelger = New Global.System.Data.DataColumn("telger", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelger)
            Me.columncontacto = New Global.System.Data.DataColumn("contacto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontacto)
            Me.columntelcon = New Global.System.Data.DataColumn("telcon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelcon)
            Me.columnlimcredito = New Global.System.Data.DataColumn("limcredito", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlimcredito)
            Me.columndisponible = New Global.System.Data.DataColumn("disponible", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndisponible)
            Me.columndesc1 = New Global.System.Data.DataColumn("desc1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc1)
            Me.columndesc2 = New Global.System.Data.DataColumn("desc2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc2)
            Me.columndesc3 = New Global.System.Data.DataColumn("desc3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc3)
            Me.columndias2 = New Global.System.Data.DataColumn("dias2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndias2)
            Me.columndias3 = New Global.System.Data.DataColumn("dias3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndias3)
            Me.columnobservacion = New Global.System.Data.DataColumn("observacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobservacion)
            Me.columnzona = New Global.System.Data.DataColumn("zona", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzona)
            Me.columnzonanombre = New Global.System.Data.DataColumn("zonanombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzonanombre)
            Me.columncobrador = New Global.System.Data.DataColumn("cobrador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncobrador)
            Me.columnvendedor = New Global.System.Data.DataColumn("vendedor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvendedor)
            Me.columnsaldo = New Global.System.Data.DataColumn("saldo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo)
            Me.columnultpago = New Global.System.Data.DataColumn("ultpago", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnultpago)
            Me.columnfecultpago = New Global.System.Data.DataColumn("fecultpago", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecultpago)
            Me.columnforultpago = New Global.System.Data.DataColumn("forultpago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnforultpago)
            Me.columnregimeniva = New Global.System.Data.DataColumn("regimeniva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnregimeniva)
            Me.columnformapago = New Global.System.Data.DataColumn("formapago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnformapago)
            Me.columnbanco = New Global.System.Data.DataColumn("banco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbanco)
            Me.columnctabanco = New Global.System.Data.DataColumn("ctabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctabanco)
            Me.columnbancodeposito1 = New Global.System.Data.DataColumn("bancodeposito1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbancodeposito1)
            Me.columnbancodeposito2 = New Global.System.Data.DataColumn("bancodeposito2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbancodeposito2)
            Me.columnctabancodeposito1 = New Global.System.Data.DataColumn("ctabancodeposito1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctabancodeposito1)
            Me.columnctabancodeposito2 = New Global.System.Data.DataColumn("ctabancodeposito2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctabancodeposito2)
            Me.columningreso = New Global.System.Data.DataColumn("ingreso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columningreso)
            Me.columncodcon = New Global.System.Data.DataColumn("codcon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodcon)
            Me.columnestatus = New Global.System.Data.DataColumn("estatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestatus)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnID_EMP = New Global.System.Data.DataColumn("ID_EMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_EMP)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncodpro, Me.columntipo, Me.columnID_EMP}, true))
            Me.columncodpro.AllowDBNull = false
            Me.columncodpro.MaxLength = 15
            Me.columnnombre.AllowDBNull = false
            Me.columnnombre.MaxLength = 150
            Me.columnasignado.AllowDBNull = false
            Me.columnasignado.MaxLength = 15
            Me.columnRIF.AllowDBNull = false
            Me.columnRIF.MaxLength = 20
            Me.columnNIT.AllowDBNull = false
            Me.columnNIT.MaxLength = 20
            Me.columnDIRFISCAL.AllowDBNull = false
            Me.columnDIRFISCAL.MaxLength = 150
            Me.columndirprove.AllowDBNull = false
            Me.columndirprove.MaxLength = 150
            Me.columncategoriaprov.AllowDBNull = false
            Me.columncategoriaprov.MaxLength = 50
            Me.columnunidadnegocioprov.AllowDBNull = false
            Me.columnunidadnegocioprov.MaxLength = 50
            Me.columnEMAIL1.AllowDBNull = false
            Me.columnEMAIL1.MaxLength = 50
            Me.columnEMAIL2.AllowDBNull = false
            Me.columnEMAIL2.MaxLength = 50
            Me.columnEMAIL3.AllowDBNull = false
            Me.columnEMAIL3.MaxLength = 50
            Me.columnEMAIL4.AllowDBNull = false
            Me.columnEMAIL4.MaxLength = 50
            Me.columnemail5.AllowDBNull = false
            Me.columnemail5.MaxLength = 50
            Me.columnsitioweb.AllowDBNull = false
            Me.columnsitioweb.MaxLength = 50
            Me.columnTELEF1.AllowDBNull = false
            Me.columnTELEF1.MaxLength = 15
            Me.columnTELEF2.AllowDBNull = false
            Me.columnTELEF2.MaxLength = 15
            Me.columntelef3.AllowDBNull = false
            Me.columntelef3.MaxLength = 15
            Me.columnfax.AllowDBNull = false
            Me.columnfax.MaxLength = 15
            Me.columngerente.AllowDBNull = false
            Me.columngerente.MaxLength = 50
            Me.columntelger.AllowDBNull = false
            Me.columntelger.MaxLength = 15
            Me.columncontacto.AllowDBNull = false
            Me.columncontacto.MaxLength = 50
            Me.columntelcon.AllowDBNull = false
            Me.columntelcon.MaxLength = 15
            Me.columnlimcredito.AllowDBNull = false
            Me.columndisponible.AllowDBNull = false
            Me.columndesc1.AllowDBNull = false
            Me.columndesc2.AllowDBNull = false
            Me.columndesc3.AllowDBNull = false
            Me.columndias2.AllowDBNull = false
            Me.columndias3.AllowDBNull = false
            Me.columnobservacion.AllowDBNull = false
            Me.columnobservacion.MaxLength = 150
            Me.columnzona.AllowDBNull = false
            Me.columnzona.MaxLength = 5
            Me.columnzonanombre.AllowDBNull = false
            Me.columnzonanombre.MaxLength = 50
            Me.columncobrador.AllowDBNull = false
            Me.columncobrador.MaxLength = 50
            Me.columnvendedor.AllowDBNull = false
            Me.columnvendedor.MaxLength = 50
            Me.columnsaldo.AllowDBNull = false
            Me.columnultpago.AllowDBNull = false
            Me.columnfecultpago.AllowDBNull = false
            Me.columnforultpago.AllowDBNull = false
            Me.columnforultpago.MaxLength = 2
            Me.columnregimeniva.AllowDBNull = false
            Me.columnregimeniva.MaxLength = 1
            Me.columnformapago.AllowDBNull = false
            Me.columnformapago.MaxLength = 2
            Me.columnbanco.AllowDBNull = false
            Me.columnbanco.MaxLength = 5
            Me.columnctabanco.AllowDBNull = false
            Me.columnctabanco.MaxLength = 50
            Me.columnbancodeposito1.AllowDBNull = false
            Me.columnbancodeposito1.MaxLength = 5
            Me.columnbancodeposito2.AllowDBNull = false
            Me.columnbancodeposito2.MaxLength = 5
            Me.columnctabancodeposito1.AllowDBNull = false
            Me.columnctabancodeposito1.MaxLength = 50
            Me.columnctabancodeposito2.AllowDBNull = false
            Me.columnctabancodeposito2.MaxLength = 50
            Me.columningreso.AllowDBNull = false
            Me.columncodcon.AllowDBNull = false
            Me.columncodcon.MaxLength = 30
            Me.columnestatus.AllowDBNull = false
            Me.columnestatus.MaxLength = 1
            Me.columntipo.AllowDBNull = false
            Me.columnID_EMP.AllowDBNull = false
            Me.columnID_EMP.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtProveedorRow() As dtProveedorRow
            Return CType(Me.NewRow,dtProveedorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtProveedorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtProveedorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtProveedorRowChangedEvent) Is Nothing) Then
                RaiseEvent dtProveedorRowChanged(Me, New dtProveedorRowChangeEvent(CType(e.Row,dtProveedorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtProveedorRowChangingEvent) Is Nothing) Then
                RaiseEvent dtProveedorRowChanging(Me, New dtProveedorRowChangeEvent(CType(e.Row,dtProveedorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtProveedorRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtProveedorRowDeleted(Me, New dtProveedorRowChangeEvent(CType(e.Row,dtProveedorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtProveedorRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtProveedorRowDeleting(Me, New dtProveedorRowChangeEvent(CType(e.Row,dtProveedorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtProveedorRow(ByVal row As dtProveedorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtProveedorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtMovimientosDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtMovimientosRow)
        
        Private columncodpro As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnasignado As Global.System.Data.DataColumn
        
        Private columningreso As Global.System.Data.DataColumn
        
        Private columnrif As Global.System.Data.DataColumn
        
        Private columnsaldo As Global.System.Data.DataColumn
        
        Private columnnummov As Global.System.Data.DataColumn
        
        Private columntipomov As Global.System.Data.DataColumn
        
        Private columnemision As Global.System.Data.DataColumn
        
        Private columnhora As Global.System.Data.DataColumn
        
        Private columnconcepto As Global.System.Data.DataColumn
        
        Private columndebitos As Global.System.Data.DataColumn
        
        Private columncreditos As Global.System.Data.DataColumn
        
        Private columnvence As Global.System.Data.DataColumn
        
        Private columnrefer As Global.System.Data.DataColumn
        
        Private columncategoriaprov As Global.System.Data.DataColumn
        
        Private columnunidadnegocioprov As Global.System.Data.DataColumn
        
        Private columnimporte As Global.System.Data.DataColumn
        
        Private columnorigen As Global.System.Data.DataColumn
        
        Private columnnumorg As Global.System.Data.DataColumn
        
        Private columncomproba As Global.System.Data.DataColumn
        
        Private columnformapag As Global.System.Data.DataColumn
        
        Private columnlapso As Global.System.Data.DataColumn
        
        Private columnDE As Global.System.Data.DataColumn
        
        Private columnDV As Global.System.Data.DataColumn
        
        Private columnnumpag As Global.System.Data.DataColumn
        
        Private columnnompag As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtMovimientos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodpro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property asignadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnasignado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ingresoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columningreso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property rifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property saldoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nummovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnummov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipomovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipomov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property horaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property conceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property debitosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndebitos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property creditosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreditos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property venceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property referColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrefer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoriaprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoriaprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property unidadnegocioprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunidadnegocioprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property importeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property origenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numorgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumorg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property comprobaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomproba
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property formapagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnformapag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property lapsoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlapso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numpagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumpag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nompagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnompag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtMovimientosRow
            Get
                Return CType(Me.Rows(index),dtMovimientosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtMovimientosRowChanging As dtMovimientosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtMovimientosRowChanged As dtMovimientosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtMovimientosRowDeleting As dtMovimientosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtMovimientosRowDeleted As dtMovimientosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtMovimientosRow(ByVal row As dtMovimientosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtMovimientosRow( _
                    ByVal codpro As String,  _
                    ByVal nombre As String,  _
                    ByVal asignado As String,  _
                    ByVal ingreso As Date,  _
                    ByVal rif As String,  _
                    ByVal saldo As Double,  _
                    ByVal nummov As String,  _
                    ByVal tipomov As String,  _
                    ByVal emision As Date,  _
                    ByVal hora As String,  _
                    ByVal concepto As String,  _
                    ByVal debitos As Double,  _
                    ByVal creditos As Double,  _
                    ByVal vence As Date,  _
                    ByVal refer As String,  _
                    ByVal categoriaprov As String,  _
                    ByVal unidadnegocioprov As String,  _
                    ByVal importe As Double,  _
                    ByVal origen As String,  _
                    ByVal numorg As String,  _
                    ByVal comproba As String,  _
                    ByVal formapag As String,  _
                    ByVal lapso As String,  _
                    ByVal DE As Long,  _
                    ByVal DV As Long,  _
                    ByVal numpag As String,  _
                    ByVal nompag As String) As dtMovimientosRow
            Dim rowdtMovimientosRow As dtMovimientosRow = CType(Me.NewRow,dtMovimientosRow)
            Dim columnValuesArray() As Object = New Object() {codpro, nombre, asignado, ingreso, rif, saldo, nummov, tipomov, emision, hora, concepto, debitos, creditos, vence, refer, categoriaprov, unidadnegocioprov, importe, origen, numorg, comproba, formapag, lapso, DE, DV, numpag, nompag}
            rowdtMovimientosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtMovimientosRow)
            Return rowdtMovimientosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBycodproemisionhora(ByVal codpro As String, ByVal emision As Date, ByVal hora As String) As dtMovimientosRow
            Return CType(Me.Rows.Find(New Object() {codpro, emision, hora}),dtMovimientosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtMovimientosDataTable = CType(MyBase.Clone,dtMovimientosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtMovimientosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncodpro = MyBase.Columns("codpro")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnasignado = MyBase.Columns("asignado")
            Me.columningreso = MyBase.Columns("ingreso")
            Me.columnrif = MyBase.Columns("rif")
            Me.columnsaldo = MyBase.Columns("saldo")
            Me.columnnummov = MyBase.Columns("nummov")
            Me.columntipomov = MyBase.Columns("tipomov")
            Me.columnemision = MyBase.Columns("emision")
            Me.columnhora = MyBase.Columns("hora")
            Me.columnconcepto = MyBase.Columns("concepto")
            Me.columndebitos = MyBase.Columns("debitos")
            Me.columncreditos = MyBase.Columns("creditos")
            Me.columnvence = MyBase.Columns("vence")
            Me.columnrefer = MyBase.Columns("refer")
            Me.columncategoriaprov = MyBase.Columns("categoriaprov")
            Me.columnunidadnegocioprov = MyBase.Columns("unidadnegocioprov")
            Me.columnimporte = MyBase.Columns("importe")
            Me.columnorigen = MyBase.Columns("origen")
            Me.columnnumorg = MyBase.Columns("numorg")
            Me.columncomproba = MyBase.Columns("comproba")
            Me.columnformapag = MyBase.Columns("formapag")
            Me.columnlapso = MyBase.Columns("lapso")
            Me.columnDE = MyBase.Columns("DE")
            Me.columnDV = MyBase.Columns("DV")
            Me.columnnumpag = MyBase.Columns("numpag")
            Me.columnnompag = MyBase.Columns("nompag")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columncodpro = New Global.System.Data.DataColumn("codpro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodpro)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnasignado = New Global.System.Data.DataColumn("asignado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnasignado)
            Me.columningreso = New Global.System.Data.DataColumn("ingreso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columningreso)
            Me.columnrif = New Global.System.Data.DataColumn("rif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrif)
            Me.columnsaldo = New Global.System.Data.DataColumn("saldo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo)
            Me.columnnummov = New Global.System.Data.DataColumn("nummov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnummov)
            Me.columntipomov = New Global.System.Data.DataColumn("tipomov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipomov)
            Me.columnemision = New Global.System.Data.DataColumn("emision", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision)
            Me.columnhora = New Global.System.Data.DataColumn("hora", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhora)
            Me.columnconcepto = New Global.System.Data.DataColumn("concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcepto)
            Me.columndebitos = New Global.System.Data.DataColumn("debitos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebitos)
            Me.columncreditos = New Global.System.Data.DataColumn("creditos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreditos)
            Me.columnvence = New Global.System.Data.DataColumn("vence", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvence)
            Me.columnrefer = New Global.System.Data.DataColumn("refer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrefer)
            Me.columncategoriaprov = New Global.System.Data.DataColumn("categoriaprov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoriaprov)
            Me.columnunidadnegocioprov = New Global.System.Data.DataColumn("unidadnegocioprov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunidadnegocioprov)
            Me.columnimporte = New Global.System.Data.DataColumn("importe", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimporte)
            Me.columnorigen = New Global.System.Data.DataColumn("origen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigen)
            Me.columnnumorg = New Global.System.Data.DataColumn("numorg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumorg)
            Me.columncomproba = New Global.System.Data.DataColumn("comproba", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomproba)
            Me.columnformapag = New Global.System.Data.DataColumn("formapag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnformapag)
            Me.columnlapso = New Global.System.Data.DataColumn("lapso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlapso)
            Me.columnDE = New Global.System.Data.DataColumn("DE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDE)
            Me.columnDV = New Global.System.Data.DataColumn("DV", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDV)
            Me.columnnumpag = New Global.System.Data.DataColumn("numpag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumpag)
            Me.columnnompag = New Global.System.Data.DataColumn("nompag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnompag)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncodpro, Me.columnemision, Me.columnhora}, true))
            Me.columncodpro.AllowDBNull = false
            Me.columncodpro.MaxLength = 15
            Me.columnnombre.MaxLength = 150
            Me.columnasignado.AllowDBNull = false
            Me.columnasignado.MaxLength = 10
            Me.columnrif.MaxLength = 20
            Me.columnsaldo.AllowDBNull = false
            Me.columnnummov.AllowDBNull = false
            Me.columnnummov.MaxLength = 15
            Me.columntipomov.AllowDBNull = false
            Me.columntipomov.MaxLength = 2
            Me.columnemision.AllowDBNull = false
            Me.columnhora.AllowDBNull = false
            Me.columnhora.MaxLength = 10
            Me.columnconcepto.AllowDBNull = false
            Me.columndebitos.AllowDBNull = false
            Me.columncreditos.AllowDBNull = false
            Me.columnvence.AllowDBNull = false
            Me.columnrefer.AllowDBNull = false
            Me.columnrefer.MaxLength = 30
            Me.columncategoriaprov.AllowDBNull = false
            Me.columncategoriaprov.MaxLength = 5
            Me.columnunidadnegocioprov.AllowDBNull = false
            Me.columnunidadnegocioprov.MaxLength = 5
            Me.columnimporte.AllowDBNull = false
            Me.columnorigen.AllowDBNull = false
            Me.columnorigen.MaxLength = 3
            Me.columnnumorg.AllowDBNull = false
            Me.columnnumorg.MaxLength = 30
            Me.columncomproba.AllowDBNull = false
            Me.columncomproba.MaxLength = 15
            Me.columnformapag.AllowDBNull = false
            Me.columnformapag.MaxLength = 2
            Me.columnlapso.MaxLength = 150
            Me.columnDE.AllowDBNull = false
            Me.columnDV.AllowDBNull = false
            Me.columnnumpag.AllowDBNull = false
            Me.columnnumpag.MaxLength = 20
            Me.columnnompag.AllowDBNull = false
            Me.columnnompag.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtMovimientosRow() As dtMovimientosRow
            Return CType(Me.NewRow,dtMovimientosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtMovimientosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtMovimientosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtMovimientosRowChangedEvent) Is Nothing) Then
                RaiseEvent dtMovimientosRowChanged(Me, New dtMovimientosRowChangeEvent(CType(e.Row,dtMovimientosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtMovimientosRowChangingEvent) Is Nothing) Then
                RaiseEvent dtMovimientosRowChanging(Me, New dtMovimientosRowChangeEvent(CType(e.Row,dtMovimientosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtMovimientosRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtMovimientosRowDeleted(Me, New dtMovimientosRowChangeEvent(CType(e.Row,dtMovimientosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtMovimientosRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtMovimientosRowDeleting(Me, New dtMovimientosRowChangeEvent(CType(e.Row,dtMovimientosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtMovimientosRow(ByVal row As dtMovimientosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtMovimientosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtVencimientosRDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtVencimientosRRow)
        
        Private columnCODPRO As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnsaldo0 As Global.System.Data.DataColumn
        
        Private columnsaldo1 As Global.System.Data.DataColumn
        
        Private columnsaldo2 As Global.System.Data.DataColumn
        
        Private columnsaldo3 As Global.System.Data.DataColumn
        
        Private columnsaldo4 As Global.System.Data.DataColumn
        
        Private columnID_EMP As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtVencimientosR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CODPROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property saldo0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property saldo1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property saldo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property saldo3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property saldo4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_EMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_EMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtVencimientosRRow
            Get
                Return CType(Me.Rows(index),dtVencimientosRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtVencimientosRRowChanging As dtVencimientosRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtVencimientosRRowChanged As dtVencimientosRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtVencimientosRRowDeleting As dtVencimientosRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtVencimientosRRowDeleted As dtVencimientosRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtVencimientosRRow(ByVal row As dtVencimientosRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtVencimientosRRow(ByVal CODPRO As String, ByVal NOMBRE As String, ByVal saldo0 As Decimal, ByVal saldo1 As Decimal, ByVal saldo2 As Decimal, ByVal saldo3 As Decimal, ByVal saldo4 As Decimal, ByVal ID_EMP As String, ByVal tipo As Integer) As dtVencimientosRRow
            Dim rowdtVencimientosRRow As dtVencimientosRRow = CType(Me.NewRow,dtVencimientosRRow)
            Dim columnValuesArray() As Object = New Object() {CODPRO, NOMBRE, saldo0, saldo1, saldo2, saldo3, saldo4, ID_EMP, tipo}
            rowdtVencimientosRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtVencimientosRRow)
            Return rowdtVencimientosRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByCODPROID_EMPtipo(ByVal CODPRO As String, ByVal ID_EMP As String, ByVal tipo As Integer) As dtVencimientosRRow
            Return CType(Me.Rows.Find(New Object() {CODPRO, ID_EMP, tipo}),dtVencimientosRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtVencimientosRDataTable = CType(MyBase.Clone,dtVencimientosRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtVencimientosRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODPRO = MyBase.Columns("CODPRO")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnsaldo0 = MyBase.Columns("saldo0")
            Me.columnsaldo1 = MyBase.Columns("saldo1")
            Me.columnsaldo2 = MyBase.Columns("saldo2")
            Me.columnsaldo3 = MyBase.Columns("saldo3")
            Me.columnsaldo4 = MyBase.Columns("saldo4")
            Me.columnID_EMP = MyBase.Columns("ID_EMP")
            Me.columntipo = MyBase.Columns("tipo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODPRO = New Global.System.Data.DataColumn("CODPRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRO)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnsaldo0 = New Global.System.Data.DataColumn("saldo0", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo0)
            Me.columnsaldo1 = New Global.System.Data.DataColumn("saldo1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo1)
            Me.columnsaldo2 = New Global.System.Data.DataColumn("saldo2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo2)
            Me.columnsaldo3 = New Global.System.Data.DataColumn("saldo3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo3)
            Me.columnsaldo4 = New Global.System.Data.DataColumn("saldo4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo4)
            Me.columnID_EMP = New Global.System.Data.DataColumn("ID_EMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_EMP)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODPRO, Me.columnID_EMP, Me.columntipo}, true))
            Me.columnCODPRO.AllowDBNull = false
            Me.columnCODPRO.MaxLength = 15
            Me.columnNOMBRE.AllowDBNull = false
            Me.columnNOMBRE.MaxLength = 150
            Me.columnsaldo0.AllowDBNull = false
            Me.columnsaldo1.AllowDBNull = false
            Me.columnsaldo2.AllowDBNull = false
            Me.columnsaldo3.AllowDBNull = false
            Me.columnsaldo4.AllowDBNull = false
            Me.columnID_EMP.AllowDBNull = false
            Me.columnID_EMP.MaxLength = 2
            Me.columntipo.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtVencimientosRRow() As dtVencimientosRRow
            Return CType(Me.NewRow,dtVencimientosRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtVencimientosRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtVencimientosRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtVencimientosRRowChangedEvent) Is Nothing) Then
                RaiseEvent dtVencimientosRRowChanged(Me, New dtVencimientosRRowChangeEvent(CType(e.Row,dtVencimientosRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtVencimientosRRowChangingEvent) Is Nothing) Then
                RaiseEvent dtVencimientosRRowChanging(Me, New dtVencimientosRRowChangeEvent(CType(e.Row,dtVencimientosRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtVencimientosRRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtVencimientosRRowDeleted(Me, New dtVencimientosRRowChangeEvent(CType(e.Row,dtVencimientosRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtVencimientosRRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtVencimientosRRowDeleting(Me, New dtVencimientosRRowChangeEvent(CType(e.Row,dtVencimientosRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtVencimientosRRow(ByVal row As dtVencimientosRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtVencimientosRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtLibroIVADataTable
        Inherits Global.System.Data.TypedTableBase(Of dtLibroIVARow)
        
        Private columnemision As Global.System.Data.DataColumn
        
        Private columnrif As Global.System.Data.DataColumn
        
        Private columnnompro As Global.System.Data.DataColumn
        
        Private columnnumcom As Global.System.Data.DataColumn
        
        Private columnnum_control As Global.System.Data.DataColumn
        
        Private columnnumdebito As Global.System.Data.DataColumn
        
        Private columnnumcredito As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnfac_afectada As Global.System.Data.DataColumn
        
        Private columncontroladorregistro As Global.System.Data.DataColumn
        
        Private columntot_imp As Global.System.Data.DataColumn
        
        Private columnimp_nogravado As Global.System.Data.DataColumn
        
        Private columnbaseivaimp As Global.System.Data.DataColumn
        
        Private columnporivaimp As Global.System.Data.DataColumn
        
        Private columnimpivaimp As Global.System.Data.DataColumn
        
        Private columntipoiva As Global.System.Data.DataColumn
        
        Private columntot_com As Global.System.Data.DataColumn
        
        Private columnNogravado As Global.System.Data.DataColumn
        
        Private columnbaseiva As Global.System.Data.DataColumn
        
        Private columnporiva As Global.System.Data.DataColumn
        
        Private columnimpiva As Global.System.Data.DataColumn
        
        Private columnretencion As Global.System.Data.DataColumn
        
        Private columnnum_retencion As Global.System.Data.DataColumn
        
        Private columnfec_retencion As Global.System.Data.DataColumn
        
        Private columnemision1 As Global.System.Data.DataColumn
        
        Private columntipoproveedor As Global.System.Data.DataColumn
        
        Private columnplanillaimportacion As Global.System.Data.DataColumn
        
        Private columnexpedienteimportacion As Global.System.Data.DataColumn
        
        Private columnfec_retencion1 As Global.System.Data.DataColumn
        
        Private columnretenciontercero As Global.System.Data.DataColumn
        
        Private columnanticipoiva As Global.System.Data.DataColumn
        
        Private columnnumSerie As Global.System.Data.DataColumn
        
        Private columnnodeducible As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtLibroIVA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property rifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nomproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnompro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property num_controlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum_control
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numdebitoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumdebito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcredito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fac_afectadaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfac_afectada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property controladorregistroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontroladorregistro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tot_impColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntot_imp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property imp_nogravadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimp_nogravado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseivaimpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseivaimp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property porivaimpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnporivaimp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property impivaimpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpivaimp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tot_comColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntot_com
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NogravadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNogravado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property porivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnporiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property impivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property num_retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum_retencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fec_retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_retencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emision1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoproveedorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoproveedor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property planillaimportacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnplanillaimportacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property expedienteimportacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpedienteimportacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fec_retencion1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_retencion1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property retencionterceroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretenciontercero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property anticipoivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnanticipoiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nodeducibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnodeducible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtLibroIVARow
            Get
                Return CType(Me.Rows(index),dtLibroIVARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtLibroIVARowChanging As dtLibroIVARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtLibroIVARowChanged As dtLibroIVARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtLibroIVARowDeleting As dtLibroIVARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtLibroIVARowDeleted As dtLibroIVARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtLibroIVARow(ByVal row As dtLibroIVARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtLibroIVARow( _
                    ByVal emision As Date,  _
                    ByVal rif As String,  _
                    ByVal nompro As String,  _
                    ByVal numcom As String,  _
                    ByVal num_control As String,  _
                    ByVal numdebito As String,  _
                    ByVal numcredito As String,  _
                    ByVal tipo As String,  _
                    ByVal fac_afectada As String,  _
                    ByVal controladorregistro As String,  _
                    ByVal tot_imp As Decimal,  _
                    ByVal imp_nogravado As Decimal,  _
                    ByVal baseivaimp As Decimal,  _
                    ByVal porivaimp As Decimal,  _
                    ByVal impivaimp As Decimal,  _
                    ByVal tipoiva As String,  _
                    ByVal tot_com As Double,  _
                    ByVal Nogravado As Double,  _
                    ByVal baseiva As Double,  _
                    ByVal poriva As Double,  _
                    ByVal impiva As Double,  _
                    ByVal retencion As Decimal,  _
                    ByVal num_retencion As String,  _
                    ByVal fec_retencion As Date,  _
                    ByVal emision1 As Date,  _
                    ByVal tipoproveedor As String,  _
                    ByVal planillaimportacion As String,  _
                    ByVal expedienteimportacion As String,  _
                    ByVal fec_retencion1 As Date,  _
                    ByVal retenciontercero As Decimal,  _
                    ByVal anticipoiva As Decimal,  _
                    ByVal numSerie As String,  _
                    ByVal nodeducible As Decimal) As dtLibroIVARow
            Dim rowdtLibroIVARow As dtLibroIVARow = CType(Me.NewRow,dtLibroIVARow)
            Dim columnValuesArray() As Object = New Object() {emision, rif, nompro, numcom, num_control, numdebito, numcredito, tipo, fac_afectada, controladorregistro, tot_imp, imp_nogravado, baseivaimp, porivaimp, impivaimp, tipoiva, tot_com, Nogravado, baseiva, poriva, impiva, retencion, num_retencion, fec_retencion, emision1, tipoproveedor, planillaimportacion, expedienteimportacion, fec_retencion1, retenciontercero, anticipoiva, numSerie, nodeducible}
            rowdtLibroIVARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtLibroIVARow)
            Return rowdtLibroIVARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBynumcom(ByVal numcom As String) As dtLibroIVARow
            Return CType(Me.Rows.Find(New Object() {numcom}),dtLibroIVARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtLibroIVADataTable = CType(MyBase.Clone,dtLibroIVADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtLibroIVADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnemision = MyBase.Columns("emision")
            Me.columnrif = MyBase.Columns("rif")
            Me.columnnompro = MyBase.Columns("nompro")
            Me.columnnumcom = MyBase.Columns("numcom")
            Me.columnnum_control = MyBase.Columns("num_control")
            Me.columnnumdebito = MyBase.Columns("numdebito")
            Me.columnnumcredito = MyBase.Columns("numcredito")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnfac_afectada = MyBase.Columns("fac_afectada")
            Me.columncontroladorregistro = MyBase.Columns("controladorregistro")
            Me.columntot_imp = MyBase.Columns("tot_imp")
            Me.columnimp_nogravado = MyBase.Columns("imp_nogravado")
            Me.columnbaseivaimp = MyBase.Columns("baseivaimp")
            Me.columnporivaimp = MyBase.Columns("porivaimp")
            Me.columnimpivaimp = MyBase.Columns("impivaimp")
            Me.columntipoiva = MyBase.Columns("tipoiva")
            Me.columntot_com = MyBase.Columns("tot_com")
            Me.columnNogravado = MyBase.Columns("Nogravado")
            Me.columnbaseiva = MyBase.Columns("baseiva")
            Me.columnporiva = MyBase.Columns("poriva")
            Me.columnimpiva = MyBase.Columns("impiva")
            Me.columnretencion = MyBase.Columns("retencion")
            Me.columnnum_retencion = MyBase.Columns("num_retencion")
            Me.columnfec_retencion = MyBase.Columns("fec_retencion")
            Me.columnemision1 = MyBase.Columns("emision1")
            Me.columntipoproveedor = MyBase.Columns("tipoproveedor")
            Me.columnplanillaimportacion = MyBase.Columns("planillaimportacion")
            Me.columnexpedienteimportacion = MyBase.Columns("expedienteimportacion")
            Me.columnfec_retencion1 = MyBase.Columns("fec_retencion1")
            Me.columnretenciontercero = MyBase.Columns("retenciontercero")
            Me.columnanticipoiva = MyBase.Columns("anticipoiva")
            Me.columnnumSerie = MyBase.Columns("numSerie")
            Me.columnnodeducible = MyBase.Columns("nodeducible")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnemision = New Global.System.Data.DataColumn("emision", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision)
            Me.columnrif = New Global.System.Data.DataColumn("rif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrif)
            Me.columnnompro = New Global.System.Data.DataColumn("nompro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnompro)
            Me.columnnumcom = New Global.System.Data.DataColumn("numcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcom)
            Me.columnnum_control = New Global.System.Data.DataColumn("num_control", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum_control)
            Me.columnnumdebito = New Global.System.Data.DataColumn("numdebito", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumdebito)
            Me.columnnumcredito = New Global.System.Data.DataColumn("numcredito", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcredito)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnfac_afectada = New Global.System.Data.DataColumn("fac_afectada", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfac_afectada)
            Me.columncontroladorregistro = New Global.System.Data.DataColumn("controladorregistro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontroladorregistro)
            Me.columntot_imp = New Global.System.Data.DataColumn("tot_imp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntot_imp)
            Me.columnimp_nogravado = New Global.System.Data.DataColumn("imp_nogravado", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimp_nogravado)
            Me.columnbaseivaimp = New Global.System.Data.DataColumn("baseivaimp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseivaimp)
            Me.columnporivaimp = New Global.System.Data.DataColumn("porivaimp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnporivaimp)
            Me.columnimpivaimp = New Global.System.Data.DataColumn("impivaimp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpivaimp)
            Me.columntipoiva = New Global.System.Data.DataColumn("tipoiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoiva)
            Me.columntot_com = New Global.System.Data.DataColumn("tot_com", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntot_com)
            Me.columnNogravado = New Global.System.Data.DataColumn("Nogravado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNogravado)
            Me.columnbaseiva = New Global.System.Data.DataColumn("baseiva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva)
            Me.columnporiva = New Global.System.Data.DataColumn("poriva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnporiva)
            Me.columnimpiva = New Global.System.Data.DataColumn("impiva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpiva)
            Me.columnretencion = New Global.System.Data.DataColumn("retencion", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretencion)
            Me.columnnum_retencion = New Global.System.Data.DataColumn("num_retencion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum_retencion)
            Me.columnfec_retencion = New Global.System.Data.DataColumn("fec_retencion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_retencion)
            Me.columnemision1 = New Global.System.Data.DataColumn("emision1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision1)
            Me.columntipoproveedor = New Global.System.Data.DataColumn("tipoproveedor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoproveedor)
            Me.columnplanillaimportacion = New Global.System.Data.DataColumn("planillaimportacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnplanillaimportacion)
            Me.columnexpedienteimportacion = New Global.System.Data.DataColumn("expedienteimportacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpedienteimportacion)
            Me.columnfec_retencion1 = New Global.System.Data.DataColumn("fec_retencion1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_retencion1)
            Me.columnretenciontercero = New Global.System.Data.DataColumn("retenciontercero", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretenciontercero)
            Me.columnanticipoiva = New Global.System.Data.DataColumn("anticipoiva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnanticipoiva)
            Me.columnnumSerie = New Global.System.Data.DataColumn("numSerie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumSerie)
            Me.columnnodeducible = New Global.System.Data.DataColumn("nodeducible", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnodeducible)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnnumcom}, true))
            Me.columnemision.AllowDBNull = false
            Me.columnrif.MaxLength = 20
            Me.columnnompro.MaxLength = 150
            Me.columnnumcom.AllowDBNull = false
            Me.columnnumcom.Unique = true
            Me.columnnumcom.MaxLength = 15
            Me.columnnum_control.MaxLength = 30
            Me.columnnumdebito.AllowDBNull = false
            Me.columnnumcredito.AllowDBNull = false
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 2
            Me.columnfac_afectada.AllowDBNull = false
            Me.columncontroladorregistro.AllowDBNull = false
            Me.columntot_imp.AllowDBNull = false
            Me.columnimp_nogravado.AllowDBNull = false
            Me.columnbaseivaimp.AllowDBNull = false
            Me.columnporivaimp.AllowDBNull = false
            Me.columnimpivaimp.AllowDBNull = false
            Me.columntipoiva.AllowDBNull = false
            Me.columntipoiva.MaxLength = 1
            Me.columntot_com.AllowDBNull = false
            Me.columnretencion.AllowDBNull = false
            Me.columnnum_retencion.AllowDBNull = false
            Me.columnfec_retencion.AllowDBNull = false
            Me.columnemision1.AllowDBNull = false
            Me.columnemision1.Caption = "emision"
            Me.columntipoproveedor.AllowDBNull = false
            Me.columntipoproveedor.MaxLength = 2
            Me.columnplanillaimportacion.AllowDBNull = false
            Me.columnplanillaimportacion.MaxLength = 15
            Me.columnexpedienteimportacion.AllowDBNull = false
            Me.columnexpedienteimportacion.MaxLength = 15
            Me.columnfec_retencion1.AllowDBNull = false
            Me.columnfec_retencion1.Caption = "fec_retencion"
            Me.columnretenciontercero.AllowDBNull = false
            Me.columnanticipoiva.AllowDBNull = false
            Me.columnnumSerie.AllowDBNull = false
            Me.columnnumSerie.MaxLength = 5
            Me.columnnodeducible.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtLibroIVARow() As dtLibroIVARow
            Return CType(Me.NewRow,dtLibroIVARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtLibroIVARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtLibroIVARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtLibroIVARowChangedEvent) Is Nothing) Then
                RaiseEvent dtLibroIVARowChanged(Me, New dtLibroIVARowChangeEvent(CType(e.Row,dtLibroIVARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtLibroIVARowChangingEvent) Is Nothing) Then
                RaiseEvent dtLibroIVARowChanging(Me, New dtLibroIVARowChangeEvent(CType(e.Row,dtLibroIVARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtLibroIVARowDeletedEvent) Is Nothing) Then
                RaiseEvent dtLibroIVARowDeleted(Me, New dtLibroIVARowChangeEvent(CType(e.Row,dtLibroIVARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtLibroIVARowDeletingEvent) Is Nothing) Then
                RaiseEvent dtLibroIVARowDeleting(Me, New dtLibroIVARowChangeEvent(CType(e.Row,dtLibroIVARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtLibroIVARow(ByVal row As dtLibroIVARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtLibroIVADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtRetencionesISLRDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtRetencionesISLRRow)
        
        Private columnnumcom As Global.System.Data.DataColumn
        
        Private columnemision As Global.System.Data.DataColumn
        
        Private columncodpro As Global.System.Data.DataColumn
        
        Private columnNOMPRO As Global.System.Data.DataColumn
        
        Private columndirfiscal As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnRIF As Global.System.Data.DataColumn
        
        Private columnnumcredito As Global.System.Data.DataColumn
        
        Private columnconcepto As Global.System.Data.DataColumn
        
        Private columnTOT_COM As Global.System.Data.DataColumn
        
        Private columnmontoexento As Global.System.Data.DataColumn
        
        Private columnTIPOIVA As Global.System.Data.DataColumn
        
        Private columnporislr As Global.System.Data.DataColumn
        
        Private columnBASEimponible As Global.System.Data.DataColumn
        
        Private columnimp_islr As Global.System.Data.DataColumn
        
        Private columnnum_control As Global.System.Data.DataColumn
        
        Private columnretencion As Global.System.Data.DataColumn
        
        Private columnnum_retencion As Global.System.Data.DataColumn
        
        Private columnfec_retencion As Global.System.Data.DataColumn
        
        Private columnemision1 As Global.System.Data.DataColumn
        
        Private columnnumSerie As Global.System.Data.DataColumn
        
        Private columnfec_retencion1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtRetencionesISLR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodpro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMPROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMPRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dirfiscalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirfiscal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RIFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcredito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property conceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TOT_COMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOT_COM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property montoexentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmontoexento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPOIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property porislrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnporislr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BASEimponibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASEimponible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property imp_islrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimp_islr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property num_controlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum_control
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property num_retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum_retencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fec_retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_retencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emision1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fec_retencion1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_retencion1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtRetencionesISLRRow
            Get
                Return CType(Me.Rows(index),dtRetencionesISLRRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtRetencionesISLRRowChanging As dtRetencionesISLRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtRetencionesISLRRowChanged As dtRetencionesISLRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtRetencionesISLRRowDeleting As dtRetencionesISLRRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtRetencionesISLRRowDeleted As dtRetencionesISLRRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtRetencionesISLRRow(ByVal row As dtRetencionesISLRRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtRetencionesISLRRow( _
                    ByVal numcom As String,  _
                    ByVal emision As Date,  _
                    ByVal codpro As String,  _
                    ByVal NOMPRO As String,  _
                    ByVal dirfiscal As String,  _
                    ByVal tipo As String,  _
                    ByVal RIF As String,  _
                    ByVal numcredito As String,  _
                    ByVal concepto As String,  _
                    ByVal TOT_COM As Double,  _
                    ByVal montoexento As Decimal,  _
                    ByVal TIPOIVA As String,  _
                    ByVal porislr As Double,  _
                    ByVal BASEimponible As Double,  _
                    ByVal imp_islr As Double,  _
                    ByVal num_control As String,  _
                    ByVal retencion As Decimal,  _
                    ByVal num_retencion As String,  _
                    ByVal fec_retencion As Date,  _
                    ByVal emision1 As Date,  _
                    ByVal numSerie As String,  _
                    ByVal fec_retencion1 As Date) As dtRetencionesISLRRow
            Dim rowdtRetencionesISLRRow As dtRetencionesISLRRow = CType(Me.NewRow,dtRetencionesISLRRow)
            Dim columnValuesArray() As Object = New Object() {numcom, emision, codpro, NOMPRO, dirfiscal, tipo, RIF, numcredito, concepto, TOT_COM, montoexento, TIPOIVA, porislr, BASEimponible, imp_islr, num_control, retencion, num_retencion, fec_retencion, emision1, numSerie, fec_retencion1}
            rowdtRetencionesISLRRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtRetencionesISLRRow)
            Return rowdtRetencionesISLRRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBynumcomcodproTIPOIVAnum_control(ByVal numcom As String, ByVal codpro As String, ByVal TIPOIVA As String, ByVal num_control As String) As dtRetencionesISLRRow
            Return CType(Me.Rows.Find(New Object() {numcom, codpro, TIPOIVA, num_control}),dtRetencionesISLRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtRetencionesISLRDataTable = CType(MyBase.Clone,dtRetencionesISLRDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtRetencionesISLRDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnnumcom = MyBase.Columns("numcom")
            Me.columnemision = MyBase.Columns("emision")
            Me.columncodpro = MyBase.Columns("codpro")
            Me.columnNOMPRO = MyBase.Columns("NOMPRO")
            Me.columndirfiscal = MyBase.Columns("dirfiscal")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnRIF = MyBase.Columns("RIF")
            Me.columnnumcredito = MyBase.Columns("numcredito")
            Me.columnconcepto = MyBase.Columns("concepto")
            Me.columnTOT_COM = MyBase.Columns("TOT_COM")
            Me.columnmontoexento = MyBase.Columns("montoexento")
            Me.columnTIPOIVA = MyBase.Columns("TIPOIVA")
            Me.columnporislr = MyBase.Columns("porislr")
            Me.columnBASEimponible = MyBase.Columns("BASEimponible")
            Me.columnimp_islr = MyBase.Columns("imp_islr")
            Me.columnnum_control = MyBase.Columns("num_control")
            Me.columnretencion = MyBase.Columns("retencion")
            Me.columnnum_retencion = MyBase.Columns("num_retencion")
            Me.columnfec_retencion = MyBase.Columns("fec_retencion")
            Me.columnemision1 = MyBase.Columns("emision1")
            Me.columnnumSerie = MyBase.Columns("numSerie")
            Me.columnfec_retencion1 = MyBase.Columns("fec_retencion1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnnumcom = New Global.System.Data.DataColumn("numcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcom)
            Me.columnemision = New Global.System.Data.DataColumn("emision", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision)
            Me.columncodpro = New Global.System.Data.DataColumn("codpro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodpro)
            Me.columnNOMPRO = New Global.System.Data.DataColumn("NOMPRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMPRO)
            Me.columndirfiscal = New Global.System.Data.DataColumn("dirfiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirfiscal)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnRIF = New Global.System.Data.DataColumn("RIF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIF)
            Me.columnnumcredito = New Global.System.Data.DataColumn("numcredito", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcredito)
            Me.columnconcepto = New Global.System.Data.DataColumn("concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcepto)
            Me.columnTOT_COM = New Global.System.Data.DataColumn("TOT_COM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_COM)
            Me.columnmontoexento = New Global.System.Data.DataColumn("montoexento", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmontoexento)
            Me.columnTIPOIVA = New Global.System.Data.DataColumn("TIPOIVA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOIVA)
            Me.columnporislr = New Global.System.Data.DataColumn("porislr", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnporislr)
            Me.columnBASEimponible = New Global.System.Data.DataColumn("BASEimponible", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASEimponible)
            Me.columnimp_islr = New Global.System.Data.DataColumn("imp_islr", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimp_islr)
            Me.columnnum_control = New Global.System.Data.DataColumn("num_control", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum_control)
            Me.columnretencion = New Global.System.Data.DataColumn("retencion", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretencion)
            Me.columnnum_retencion = New Global.System.Data.DataColumn("num_retencion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum_retencion)
            Me.columnfec_retencion = New Global.System.Data.DataColumn("fec_retencion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_retencion)
            Me.columnemision1 = New Global.System.Data.DataColumn("emision1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision1)
            Me.columnnumSerie = New Global.System.Data.DataColumn("numSerie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumSerie)
            Me.columnfec_retencion1 = New Global.System.Data.DataColumn("fec_retencion1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_retencion1)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnnumcom, Me.columncodpro, Me.columnTIPOIVA, Me.columnnum_control}, true))
            Me.columnnumcom.AllowDBNull = false
            Me.columnnumcom.MaxLength = 15
            Me.columnemision.AllowDBNull = false
            Me.columncodpro.AllowDBNull = false
            Me.columncodpro.MaxLength = 15
            Me.columnNOMPRO.MaxLength = 150
            Me.columndirfiscal.MaxLength = 150
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 2
            Me.columnRIF.MaxLength = 20
            Me.columnnumcredito.AllowDBNull = false
            Me.columnnumcredito.MaxLength = 12
            Me.columnTOT_COM.AllowDBNull = false
            Me.columnmontoexento.AllowDBNull = false
            Me.columnTIPOIVA.AllowDBNull = false
            Me.columnTIPOIVA.MaxLength = 1
            Me.columnnum_control.AllowDBNull = false
            Me.columnnum_control.MaxLength = 15
            Me.columnretencion.AllowDBNull = false
            Me.columnnum_retencion.AllowDBNull = false
            Me.columnnum_retencion.MaxLength = 25
            Me.columnfec_retencion.AllowDBNull = false
            Me.columnemision1.AllowDBNull = false
            Me.columnemision1.Caption = "emision"
            Me.columnnumSerie.AllowDBNull = false
            Me.columnnumSerie.MaxLength = 5
            Me.columnfec_retencion1.AllowDBNull = false
            Me.columnfec_retencion1.Caption = "fec_retencion"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtRetencionesISLRRow() As dtRetencionesISLRRow
            Return CType(Me.NewRow,dtRetencionesISLRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtRetencionesISLRRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtRetencionesISLRRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtRetencionesISLRRowChangedEvent) Is Nothing) Then
                RaiseEvent dtRetencionesISLRRowChanged(Me, New dtRetencionesISLRRowChangeEvent(CType(e.Row,dtRetencionesISLRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtRetencionesISLRRowChangingEvent) Is Nothing) Then
                RaiseEvent dtRetencionesISLRRowChanging(Me, New dtRetencionesISLRRowChangeEvent(CType(e.Row,dtRetencionesISLRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtRetencionesISLRRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtRetencionesISLRRowDeleted(Me, New dtRetencionesISLRRowChangeEvent(CType(e.Row,dtRetencionesISLRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtRetencionesISLRRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtRetencionesISLRRowDeleting(Me, New dtRetencionesISLRRowChangeEvent(CType(e.Row,dtRetencionesISLRRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtRetencionesISLRRow(ByVal row As dtRetencionesISLRRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtRetencionesISLRDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtRetencionesIVADataTable
        Inherits Global.System.Data.TypedTableBase(Of dtRetencionesIVARow)
        
        Private columnnumcom As Global.System.Data.DataColumn
        
        Private columnemision As Global.System.Data.DataColumn
        
        Private columncodpro As Global.System.Data.DataColumn
        
        Private columnNOMPRO As Global.System.Data.DataColumn
        
        Private columndirfiscal As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnRIF As Global.System.Data.DataColumn
        
        Private columnnumcredito As Global.System.Data.DataColumn
        
        Private columnfac_afectada As Global.System.Data.DataColumn
        
        Private columnTOT_COM As Global.System.Data.DataColumn
        
        Private columnmontoexento As Global.System.Data.DataColumn
        
        Private columnTIPOIVA As Global.System.Data.DataColumn
        
        Private columnPORIVA As Global.System.Data.DataColumn
        
        Private columnBASEIVA As Global.System.Data.DataColumn
        
        Private columnimp_iva As Global.System.Data.DataColumn
        
        Private columnnum_control As Global.System.Data.DataColumn
        
        Private columnretencion As Global.System.Data.DataColumn
        
        Private columnnum_retencion As Global.System.Data.DataColumn
        
        Private columnfec_retencion As Global.System.Data.DataColumn
        
        Private columnret_iva As Global.System.Data.DataColumn
        
        Private columnemision1 As Global.System.Data.DataColumn
        
        Private columnnumdebito As Global.System.Data.DataColumn
        
        Private columnfec_retencion1 As Global.System.Data.DataColumn
        
        Private columnnumSerie As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtRetencionesIVA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodpro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOMPROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMPRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dirfiscalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirfiscal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RIFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcreditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcredito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fac_afectadaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfac_afectada
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TOT_COMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOT_COM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property montoexentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmontoexento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TIPOIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PORIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BASEIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASEIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property imp_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimp_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property num_controlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum_control
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property num_retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum_retencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fec_retencionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_retencion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ret_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnret_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emision1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numdebitoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumdebito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fec_retencion1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_retencion1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numSerieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumSerie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtRetencionesIVARow
            Get
                Return CType(Me.Rows(index),dtRetencionesIVARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtRetencionesIVARowChanging As dtRetencionesIVARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtRetencionesIVARowChanged As dtRetencionesIVARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtRetencionesIVARowDeleting As dtRetencionesIVARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtRetencionesIVARowDeleted As dtRetencionesIVARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtRetencionesIVARow(ByVal row As dtRetencionesIVARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtRetencionesIVARow( _
                    ByVal numcom As String,  _
                    ByVal emision As Date,  _
                    ByVal codpro As String,  _
                    ByVal NOMPRO As String,  _
                    ByVal dirfiscal As String,  _
                    ByVal tipo As String,  _
                    ByVal RIF As String,  _
                    ByVal numcredito As String,  _
                    ByVal fac_afectada As String,  _
                    ByVal TOT_COM As Double,  _
                    ByVal montoexento As Decimal,  _
                    ByVal TIPOIVA As String,  _
                    ByVal PORIVA As Double,  _
                    ByVal BASEIVA As Double,  _
                    ByVal imp_iva As Double,  _
                    ByVal num_control As String,  _
                    ByVal retencion As Decimal,  _
                    ByVal num_retencion As String,  _
                    ByVal fec_retencion As Date,  _
                    ByVal ret_iva As Double,  _
                    ByVal emision1 As Date,  _
                    ByVal numdebito As String,  _
                    ByVal fec_retencion1 As String,  _
                    ByVal numSerie As String) As dtRetencionesIVARow
            Dim rowdtRetencionesIVARow As dtRetencionesIVARow = CType(Me.NewRow,dtRetencionesIVARow)
            Dim columnValuesArray() As Object = New Object() {numcom, emision, codpro, NOMPRO, dirfiscal, tipo, RIF, numcredito, fac_afectada, TOT_COM, montoexento, TIPOIVA, PORIVA, BASEIVA, imp_iva, num_control, retencion, num_retencion, fec_retencion, ret_iva, emision1, numdebito, fec_retencion1, numSerie}
            rowdtRetencionesIVARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtRetencionesIVARow)
            Return rowdtRetencionesIVARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBynumcomcodproTIPOIVAnum_control(ByVal numcom As String, ByVal codpro As String, ByVal TIPOIVA As String, ByVal num_control As String) As dtRetencionesIVARow
            Return CType(Me.Rows.Find(New Object() {numcom, codpro, TIPOIVA, num_control}),dtRetencionesIVARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtRetencionesIVADataTable = CType(MyBase.Clone,dtRetencionesIVADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtRetencionesIVADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnnumcom = MyBase.Columns("numcom")
            Me.columnemision = MyBase.Columns("emision")
            Me.columncodpro = MyBase.Columns("codpro")
            Me.columnNOMPRO = MyBase.Columns("NOMPRO")
            Me.columndirfiscal = MyBase.Columns("dirfiscal")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnRIF = MyBase.Columns("RIF")
            Me.columnnumcredito = MyBase.Columns("numcredito")
            Me.columnfac_afectada = MyBase.Columns("fac_afectada")
            Me.columnTOT_COM = MyBase.Columns("TOT_COM")
            Me.columnmontoexento = MyBase.Columns("montoexento")
            Me.columnTIPOIVA = MyBase.Columns("TIPOIVA")
            Me.columnPORIVA = MyBase.Columns("PORIVA")
            Me.columnBASEIVA = MyBase.Columns("BASEIVA")
            Me.columnimp_iva = MyBase.Columns("imp_iva")
            Me.columnnum_control = MyBase.Columns("num_control")
            Me.columnretencion = MyBase.Columns("retencion")
            Me.columnnum_retencion = MyBase.Columns("num_retencion")
            Me.columnfec_retencion = MyBase.Columns("fec_retencion")
            Me.columnret_iva = MyBase.Columns("ret_iva")
            Me.columnemision1 = MyBase.Columns("emision1")
            Me.columnnumdebito = MyBase.Columns("numdebito")
            Me.columnfec_retencion1 = MyBase.Columns("fec_retencion1")
            Me.columnnumSerie = MyBase.Columns("numSerie")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnnumcom = New Global.System.Data.DataColumn("numcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcom)
            Me.columnemision = New Global.System.Data.DataColumn("emision", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision)
            Me.columncodpro = New Global.System.Data.DataColumn("codpro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodpro)
            Me.columnNOMPRO = New Global.System.Data.DataColumn("NOMPRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMPRO)
            Me.columndirfiscal = New Global.System.Data.DataColumn("dirfiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirfiscal)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnRIF = New Global.System.Data.DataColumn("RIF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIF)
            Me.columnnumcredito = New Global.System.Data.DataColumn("numcredito", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcredito)
            Me.columnfac_afectada = New Global.System.Data.DataColumn("fac_afectada", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfac_afectada)
            Me.columnTOT_COM = New Global.System.Data.DataColumn("TOT_COM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOT_COM)
            Me.columnmontoexento = New Global.System.Data.DataColumn("montoexento", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmontoexento)
            Me.columnTIPOIVA = New Global.System.Data.DataColumn("TIPOIVA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOIVA)
            Me.columnPORIVA = New Global.System.Data.DataColumn("PORIVA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORIVA)
            Me.columnBASEIVA = New Global.System.Data.DataColumn("BASEIVA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASEIVA)
            Me.columnimp_iva = New Global.System.Data.DataColumn("imp_iva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimp_iva)
            Me.columnnum_control = New Global.System.Data.DataColumn("num_control", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum_control)
            Me.columnretencion = New Global.System.Data.DataColumn("retencion", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretencion)
            Me.columnnum_retencion = New Global.System.Data.DataColumn("num_retencion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum_retencion)
            Me.columnfec_retencion = New Global.System.Data.DataColumn("fec_retencion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_retencion)
            Me.columnret_iva = New Global.System.Data.DataColumn("ret_iva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnret_iva)
            Me.columnemision1 = New Global.System.Data.DataColumn("emision1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision1)
            Me.columnnumdebito = New Global.System.Data.DataColumn("numdebito", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumdebito)
            Me.columnfec_retencion1 = New Global.System.Data.DataColumn("fec_retencion1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_retencion1)
            Me.columnnumSerie = New Global.System.Data.DataColumn("numSerie", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumSerie)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnnumcom, Me.columncodpro, Me.columnTIPOIVA, Me.columnnum_control}, true))
            Me.columnnumcom.AllowDBNull = false
            Me.columnnumcom.MaxLength = 15
            Me.columnemision.AllowDBNull = false
            Me.columncodpro.AllowDBNull = false
            Me.columncodpro.MaxLength = 15
            Me.columnNOMPRO.MaxLength = 150
            Me.columndirfiscal.MaxLength = 150
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 2
            Me.columnRIF.MaxLength = 20
            Me.columnnumcredito.AllowDBNull = false
            Me.columnnumcredito.MaxLength = 12
            Me.columnfac_afectada.AllowDBNull = false
            Me.columnfac_afectada.MaxLength = 15
            Me.columnTOT_COM.AllowDBNull = false
            Me.columnmontoexento.AllowDBNull = false
            Me.columnTIPOIVA.AllowDBNull = false
            Me.columnTIPOIVA.MaxLength = 1
            Me.columnPORIVA.AllowDBNull = false
            Me.columnBASEIVA.AllowDBNull = false
            Me.columnimp_iva.AllowDBNull = false
            Me.columnnum_control.AllowDBNull = false
            Me.columnnum_control.MaxLength = 15
            Me.columnretencion.AllowDBNull = false
            Me.columnnum_retencion.AllowDBNull = false
            Me.columnnum_retencion.MaxLength = 25
            Me.columnfec_retencion.AllowDBNull = false
            Me.columnret_iva.AllowDBNull = false
            Me.columnemision1.AllowDBNull = false
            Me.columnemision1.Caption = "emision"
            Me.columnnumdebito.AllowDBNull = false
            Me.columnnumdebito.MaxLength = 12
            Me.columnfec_retencion1.AllowDBNull = false
            Me.columnfec_retencion1.Caption = "fec_retencion"
            Me.columnfec_retencion1.MaxLength = 10
            Me.columnnumSerie.AllowDBNull = false
            Me.columnnumSerie.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtRetencionesIVARow() As dtRetencionesIVARow
            Return CType(Me.NewRow,dtRetencionesIVARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtRetencionesIVARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtRetencionesIVARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtRetencionesIVARowChangedEvent) Is Nothing) Then
                RaiseEvent dtRetencionesIVARowChanged(Me, New dtRetencionesIVARowChangeEvent(CType(e.Row,dtRetencionesIVARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtRetencionesIVARowChangingEvent) Is Nothing) Then
                RaiseEvent dtRetencionesIVARowChanging(Me, New dtRetencionesIVARowChangeEvent(CType(e.Row,dtRetencionesIVARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtRetencionesIVARowDeletedEvent) Is Nothing) Then
                RaiseEvent dtRetencionesIVARowDeleted(Me, New dtRetencionesIVARowChangeEvent(CType(e.Row,dtRetencionesIVARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtRetencionesIVARowDeletingEvent) Is Nothing) Then
                RaiseEvent dtRetencionesIVARowDeleting(Me, New dtRetencionesIVARowChangeEvent(CType(e.Row,dtRetencionesIVARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtRetencionesIVARow(ByVal row As dtRetencionesIVARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtRetencionesIVADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtGrupoSubGrupoDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtGrupoSubGrupoRow)
        
        Private columngrupo As Global.System.Data.DataColumn
        
        Private columnsubgrupo As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnID_EMP As Global.System.Data.DataColumn
        
        Private columnMODULO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtGrupoSubGrupo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property grupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property subgrupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubgrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ID_EMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_EMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MODULOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODULO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtGrupoSubGrupoRow
            Get
                Return CType(Me.Rows(index),dtGrupoSubGrupoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtGrupoSubGrupoRowChanging As dtGrupoSubGrupoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtGrupoSubGrupoRowChanged As dtGrupoSubGrupoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtGrupoSubGrupoRowDeleting As dtGrupoSubGrupoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtGrupoSubGrupoRowDeleted As dtGrupoSubGrupoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtGrupoSubGrupoRow(ByVal row As dtGrupoSubGrupoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtGrupoSubGrupoRow(ByVal grupo As String, ByVal subgrupo As String, ByVal CODIGO As String, ByVal ID_EMP As String, ByVal MODULO As String) As dtGrupoSubGrupoRow
            Dim rowdtGrupoSubGrupoRow As dtGrupoSubGrupoRow = CType(Me.NewRow,dtGrupoSubGrupoRow)
            Dim columnValuesArray() As Object = New Object() {grupo, subgrupo, CODIGO, ID_EMP, MODULO}
            rowdtGrupoSubGrupoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtGrupoSubGrupoRow)
            Return rowdtGrupoSubGrupoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByCODIGOID_EMPMODULO(ByVal CODIGO As String, ByVal ID_EMP As String, ByVal MODULO As String) As dtGrupoSubGrupoRow
            Return CType(Me.Rows.Find(New Object() {CODIGO, ID_EMP, MODULO}),dtGrupoSubGrupoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtGrupoSubGrupoDataTable = CType(MyBase.Clone,dtGrupoSubGrupoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtGrupoSubGrupoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columngrupo = MyBase.Columns("grupo")
            Me.columnsubgrupo = MyBase.Columns("subgrupo")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnID_EMP = MyBase.Columns("ID_EMP")
            Me.columnMODULO = MyBase.Columns("MODULO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columngrupo = New Global.System.Data.DataColumn("grupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngrupo)
            Me.columnsubgrupo = New Global.System.Data.DataColumn("subgrupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubgrupo)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnID_EMP = New Global.System.Data.DataColumn("ID_EMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_EMP)
            Me.columnMODULO = New Global.System.Data.DataColumn("MODULO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODULO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODIGO, Me.columnID_EMP, Me.columnMODULO}, true))
            Me.columngrupo.AllowDBNull = false
            Me.columngrupo.MaxLength = 50
            Me.columnsubgrupo.AllowDBNull = false
            Me.columnsubgrupo.MaxLength = 50
            Me.columnCODIGO.AllowDBNull = false
            Me.columnCODIGO.MaxLength = 5
            Me.columnID_EMP.AllowDBNull = false
            Me.columnID_EMP.MaxLength = 2
            Me.columnMODULO.AllowDBNull = false
            Me.columnMODULO.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtGrupoSubGrupoRow() As dtGrupoSubGrupoRow
            Return CType(Me.NewRow,dtGrupoSubGrupoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtGrupoSubGrupoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtGrupoSubGrupoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtGrupoSubGrupoRowChangedEvent) Is Nothing) Then
                RaiseEvent dtGrupoSubGrupoRowChanged(Me, New dtGrupoSubGrupoRowChangeEvent(CType(e.Row,dtGrupoSubGrupoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtGrupoSubGrupoRowChangingEvent) Is Nothing) Then
                RaiseEvent dtGrupoSubGrupoRowChanging(Me, New dtGrupoSubGrupoRowChangeEvent(CType(e.Row,dtGrupoSubGrupoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtGrupoSubGrupoRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtGrupoSubGrupoRowDeleted(Me, New dtGrupoSubGrupoRowChangeEvent(CType(e.Row,dtGrupoSubGrupoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtGrupoSubGrupoRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtGrupoSubGrupoRowDeleting(Me, New dtGrupoSubGrupoRowChangeEvent(CType(e.Row,dtGrupoSubGrupoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtGrupoSubGrupoRow(ByVal row As dtGrupoSubGrupoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtGrupoSubGrupoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtListadoComprasItemsDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtListadoComprasItemsRow)
        
        Private columnnumcom As Global.System.Data.DataColumn
        
        Private columnemision As Global.System.Data.DataColumn
        
        Private columncodpro As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columngrupo As Global.System.Data.DataColumn
        
        Private columnsubgrupo As Global.System.Data.DataColumn
        
        Private columncategoriaprov As Global.System.Data.DataColumn
        
        Private columnunidadnegocioprov As Global.System.Data.DataColumn
        
        Private columntot_net As Global.System.Data.DataColumn
        
        Private columndescuen As Global.System.Data.DataColumn
        
        Private columnimp_iva As Global.System.Data.DataColumn
        
        Private columntot_com As Global.System.Data.DataColumn
        
        Private columnCOSTOU As Global.System.Data.DataColumn
        
        Private columnvence1 As Global.System.Data.DataColumn
        
        Private columnvence2 As Global.System.Data.DataColumn
        
        Private columnvence3 As Global.System.Data.DataColumn
        
        Private columnvence4 As Global.System.Data.DataColumn
        
        Private columnemisioniva As Global.System.Data.DataColumn
        
        Private columnrif As Global.System.Data.DataColumn
        
        Private columnnit As Global.System.Data.DataColumn
        
        Private columndirfiscal As Global.System.Data.DataColumn
        
        Private columncomen As Global.System.Data.DataColumn
        
        Private columnalmacen As Global.System.Data.DataColumn
        
        Private columnreferencia As Global.System.Data.DataColumn
        
        Private columnresponsable As Global.System.Data.DataColumn
        
        Private columncondicionpago As Global.System.Data.DataColumn
        
        Private columnitems As Global.System.Data.DataColumn
        
        Private columnkilos As Global.System.Data.DataColumn
        
        Private columnexento As Global.System.Data.DataColumn
        
        Private columnbaseiva_a As Global.System.Data.DataColumn
        
        Private columnbaseiva_b As Global.System.Data.DataColumn
        
        Private columnbaseiva_c As Global.System.Data.DataColumn
        
        Private columnbaseiva As Global.System.Data.DataColumn
        
        Private columnimpiva As Global.System.Data.DataColumn
        
        Private columnrenglon As Global.System.Data.DataColumn
        
        Private columnitem As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columncomentario As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columnmonto As Global.System.Data.DataColumn
        
        Private columnunidad As Global.System.Data.DataColumn
        
        Private columncantidad As Global.System.Data.DataColumn
        
        Private columnpeso As Global.System.Data.DataColumn
        
        Private columncausa As Global.System.Data.DataColumn
        
        Private columnnomcausa As Global.System.Data.DataColumn
        
        Private columndes_art As Global.System.Data.DataColumn
        
        Private columndes_pro As Global.System.Data.DataColumn
        
        Private columncostotot As Global.System.Data.DataColumn
        
        Private columnestatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtListadoComprasItems"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodpro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property grupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property subgrupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubgrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property categoriaprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncategoriaprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property unidadnegocioprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunidadnegocioprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tot_netColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntot_net
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property descuenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescuen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property imp_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimp_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tot_comColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntot_com
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COSTOUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property vence1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnvence1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property vence2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnvence2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property vence3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnvence3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property vence4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnvence4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemisioniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property rifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dirfiscalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirfiscal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property comenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property almacenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnalmacen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property referenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property responsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresponsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property condicionpagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncondicionpago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property itemsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitems
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property kilosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkilos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property exentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseiva_aColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva_a
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseiva_bColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva_b
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseiva_cColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva_c
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property impivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property renglonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrenglon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property itemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property comentarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomentario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property montoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property unidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property pesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property causaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncausa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nomcausaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomcausa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property des_artColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndes_art
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property des_proColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndes_pro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property costototColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncostotot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtListadoComprasItemsRow
            Get
                Return CType(Me.Rows(index),dtListadoComprasItemsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtListadoComprasItemsRowChanging As dtListadoComprasItemsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtListadoComprasItemsRowChanged As dtListadoComprasItemsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtListadoComprasItemsRowDeleting As dtListadoComprasItemsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtListadoComprasItemsRowDeleted As dtListadoComprasItemsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtListadoComprasItemsRow(ByVal row As dtListadoComprasItemsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtListadoComprasItemsRow( _
                    ByVal numcom As String,  _
                    ByVal emision As Date,  _
                    ByVal codpro As String,  _
                    ByVal nombre As String,  _
                    ByVal grupo As String,  _
                    ByVal subgrupo As String,  _
                    ByVal categoriaprov As String,  _
                    ByVal unidadnegocioprov As String,  _
                    ByVal tot_net As Double,  _
                    ByVal descuen As Double,  _
                    ByVal imp_iva As Double,  _
                    ByVal tot_com As Double,  _
                    ByVal COSTOU As Double,  _
                    ByVal vence1 As Date,  _
                    ByVal vence2 As Date,  _
                    ByVal vence3 As Date,  _
                    ByVal vence4 As Date,  _
                    ByVal emisioniva As Date,  _
                    ByVal rif As String,  _
                    ByVal nit As String,  _
                    ByVal dirfiscal As String,  _
                    ByVal comen As String,  _
                    ByVal almacen As String,  _
                    ByVal referencia As String,  _
                    ByVal responsable As String,  _
                    ByVal condicionpago As String,  _
                    ByVal items As Integer,  _
                    ByVal kilos As Double,  _
                    ByVal exento As Double,  _
                    ByVal baseiva_a As Double,  _
                    ByVal baseiva_b As Double,  _
                    ByVal baseiva_c As Double,  _
                    ByVal baseiva As Double,  _
                    ByVal impiva As Double,  _
                    ByVal renglon As String,  _
                    ByVal item As String,  _
                    ByVal descrip As String,  _
                    ByVal comentario As String,  _
                    ByVal iva As String,  _
                    ByVal monto As Double,  _
                    ByVal unidad As String,  _
                    ByVal cantidad As Double,  _
                    ByVal peso As Double,  _
                    ByVal causa As String,  _
                    ByVal nomcausa As String,  _
                    ByVal des_art As Double,  _
                    ByVal des_pro As Double,  _
                    ByVal costotot As Double,  _
                    ByVal estatus As String) As dtListadoComprasItemsRow
            Dim rowdtListadoComprasItemsRow As dtListadoComprasItemsRow = CType(Me.NewRow,dtListadoComprasItemsRow)
            Dim columnValuesArray() As Object = New Object() {numcom, emision, codpro, nombre, grupo, subgrupo, categoriaprov, unidadnegocioprov, tot_net, descuen, imp_iva, tot_com, COSTOU, vence1, vence2, vence3, vence4, emisioniva, rif, nit, dirfiscal, comen, almacen, referencia, responsable, condicionpago, items, kilos, exento, baseiva_a, baseiva_b, baseiva_c, baseiva, impiva, renglon, item, descrip, comentario, iva, monto, unidad, cantidad, peso, causa, nomcausa, des_art, des_pro, costotot, estatus}
            rowdtListadoComprasItemsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtListadoComprasItemsRow)
            Return rowdtListadoComprasItemsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindBynumcomcodpro(ByVal numcom As String, ByVal codpro As String) As dtListadoComprasItemsRow
            Return CType(Me.Rows.Find(New Object() {numcom, codpro}),dtListadoComprasItemsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtListadoComprasItemsDataTable = CType(MyBase.Clone,dtListadoComprasItemsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtListadoComprasItemsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnnumcom = MyBase.Columns("numcom")
            Me.columnemision = MyBase.Columns("emision")
            Me.columncodpro = MyBase.Columns("codpro")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columngrupo = MyBase.Columns("grupo")
            Me.columnsubgrupo = MyBase.Columns("subgrupo")
            Me.columncategoriaprov = MyBase.Columns("categoriaprov")
            Me.columnunidadnegocioprov = MyBase.Columns("unidadnegocioprov")
            Me.columntot_net = MyBase.Columns("tot_net")
            Me.columndescuen = MyBase.Columns("descuen")
            Me.columnimp_iva = MyBase.Columns("imp_iva")
            Me.columntot_com = MyBase.Columns("tot_com")
            Me.columnCOSTOU = MyBase.Columns("COSTOU")
            Me.columnvence1 = MyBase.Columns("vence1")
            Me.columnvence2 = MyBase.Columns("vence2")
            Me.columnvence3 = MyBase.Columns("vence3")
            Me.columnvence4 = MyBase.Columns("vence4")
            Me.columnemisioniva = MyBase.Columns("emisioniva")
            Me.columnrif = MyBase.Columns("rif")
            Me.columnnit = MyBase.Columns("nit")
            Me.columndirfiscal = MyBase.Columns("dirfiscal")
            Me.columncomen = MyBase.Columns("comen")
            Me.columnalmacen = MyBase.Columns("almacen")
            Me.columnreferencia = MyBase.Columns("referencia")
            Me.columnresponsable = MyBase.Columns("responsable")
            Me.columncondicionpago = MyBase.Columns("condicionpago")
            Me.columnitems = MyBase.Columns("items")
            Me.columnkilos = MyBase.Columns("kilos")
            Me.columnexento = MyBase.Columns("exento")
            Me.columnbaseiva_a = MyBase.Columns("baseiva_a")
            Me.columnbaseiva_b = MyBase.Columns("baseiva_b")
            Me.columnbaseiva_c = MyBase.Columns("baseiva_c")
            Me.columnbaseiva = MyBase.Columns("baseiva")
            Me.columnimpiva = MyBase.Columns("impiva")
            Me.columnrenglon = MyBase.Columns("renglon")
            Me.columnitem = MyBase.Columns("item")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columncomentario = MyBase.Columns("comentario")
            Me.columniva = MyBase.Columns("iva")
            Me.columnmonto = MyBase.Columns("monto")
            Me.columnunidad = MyBase.Columns("unidad")
            Me.columncantidad = MyBase.Columns("cantidad")
            Me.columnpeso = MyBase.Columns("peso")
            Me.columncausa = MyBase.Columns("causa")
            Me.columnnomcausa = MyBase.Columns("nomcausa")
            Me.columndes_art = MyBase.Columns("des_art")
            Me.columndes_pro = MyBase.Columns("des_pro")
            Me.columncostotot = MyBase.Columns("costotot")
            Me.columnestatus = MyBase.Columns("estatus")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnnumcom = New Global.System.Data.DataColumn("numcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcom)
            Me.columnemision = New Global.System.Data.DataColumn("emision", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision)
            Me.columncodpro = New Global.System.Data.DataColumn("codpro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodpro)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columngrupo = New Global.System.Data.DataColumn("grupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngrupo)
            Me.columnsubgrupo = New Global.System.Data.DataColumn("subgrupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubgrupo)
            Me.columncategoriaprov = New Global.System.Data.DataColumn("categoriaprov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncategoriaprov)
            Me.columnunidadnegocioprov = New Global.System.Data.DataColumn("unidadnegocioprov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunidadnegocioprov)
            Me.columntot_net = New Global.System.Data.DataColumn("tot_net", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntot_net)
            Me.columndescuen = New Global.System.Data.DataColumn("descuen", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescuen)
            Me.columnimp_iva = New Global.System.Data.DataColumn("imp_iva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimp_iva)
            Me.columntot_com = New Global.System.Data.DataColumn("tot_com", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntot_com)
            Me.columnCOSTOU = New Global.System.Data.DataColumn("COSTOU", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOU)
            Me.columnvence1 = New Global.System.Data.DataColumn("vence1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvence1)
            Me.columnvence2 = New Global.System.Data.DataColumn("vence2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvence2)
            Me.columnvence3 = New Global.System.Data.DataColumn("vence3", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvence3)
            Me.columnvence4 = New Global.System.Data.DataColumn("vence4", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvence4)
            Me.columnemisioniva = New Global.System.Data.DataColumn("emisioniva", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemisioniva)
            Me.columnrif = New Global.System.Data.DataColumn("rif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrif)
            Me.columnnit = New Global.System.Data.DataColumn("nit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnit)
            Me.columndirfiscal = New Global.System.Data.DataColumn("dirfiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirfiscal)
            Me.columncomen = New Global.System.Data.DataColumn("comen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomen)
            Me.columnalmacen = New Global.System.Data.DataColumn("almacen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnalmacen)
            Me.columnreferencia = New Global.System.Data.DataColumn("referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreferencia)
            Me.columnresponsable = New Global.System.Data.DataColumn("responsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresponsable)
            Me.columncondicionpago = New Global.System.Data.DataColumn("condicionpago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncondicionpago)
            Me.columnitems = New Global.System.Data.DataColumn("items", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitems)
            Me.columnkilos = New Global.System.Data.DataColumn("kilos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkilos)
            Me.columnexento = New Global.System.Data.DataColumn("exento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexento)
            Me.columnbaseiva_a = New Global.System.Data.DataColumn("baseiva_a", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva_a)
            Me.columnbaseiva_b = New Global.System.Data.DataColumn("baseiva_b", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva_b)
            Me.columnbaseiva_c = New Global.System.Data.DataColumn("baseiva_c", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva_c)
            Me.columnbaseiva = New Global.System.Data.DataColumn("baseiva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva)
            Me.columnimpiva = New Global.System.Data.DataColumn("impiva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpiva)
            Me.columnrenglon = New Global.System.Data.DataColumn("renglon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrenglon)
            Me.columnitem = New Global.System.Data.DataColumn("item", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitem)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columncomentario = New Global.System.Data.DataColumn("comentario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomentario)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columnmonto = New Global.System.Data.DataColumn("monto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonto)
            Me.columnunidad = New Global.System.Data.DataColumn("unidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunidad)
            Me.columncantidad = New Global.System.Data.DataColumn("cantidad", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad)
            Me.columnpeso = New Global.System.Data.DataColumn("peso", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso)
            Me.columncausa = New Global.System.Data.DataColumn("causa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncausa)
            Me.columnnomcausa = New Global.System.Data.DataColumn("nomcausa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomcausa)
            Me.columndes_art = New Global.System.Data.DataColumn("des_art", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndes_art)
            Me.columndes_pro = New Global.System.Data.DataColumn("des_pro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndes_pro)
            Me.columncostotot = New Global.System.Data.DataColumn("costotot", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncostotot)
            Me.columnestatus = New Global.System.Data.DataColumn("estatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnnumcom, Me.columncodpro}, true))
            Me.columnnumcom.AllowDBNull = false
            Me.columnnumcom.MaxLength = 15
            Me.columnemision.AllowDBNull = false
            Me.columncodpro.AllowDBNull = false
            Me.columncodpro.MaxLength = 15
            Me.columnnombre.MaxLength = 150
            Me.columngrupo.MaxLength = 50
            Me.columnsubgrupo.MaxLength = 50
            Me.columncategoriaprov.MaxLength = 50
            Me.columnunidadnegocioprov.MaxLength = 50
            Me.columntot_net.AllowDBNull = false
            Me.columndescuen.AllowDBNull = false
            Me.columnimp_iva.AllowDBNull = false
            Me.columntot_com.AllowDBNull = false
            Me.columnvence1.AllowDBNull = false
            Me.columnvence2.AllowDBNull = false
            Me.columnvence3.AllowDBNull = false
            Me.columnvence4.AllowDBNull = false
            Me.columnemisioniva.AllowDBNull = false
            Me.columnrif.MaxLength = 20
            Me.columnnit.MaxLength = 20
            Me.columndirfiscal.MaxLength = 150
            Me.columncomen.AllowDBNull = false
            Me.columncomen.MaxLength = 100
            Me.columnalmacen.AllowDBNull = false
            Me.columnalmacen.MaxLength = 100
            Me.columnreferencia.AllowDBNull = false
            Me.columnreferencia.MaxLength = 100
            Me.columnresponsable.AllowDBNull = false
            Me.columnresponsable.MaxLength = 100
            Me.columncondicionpago.AllowDBNull = false
            Me.columncondicionpago.MaxLength = 100
            Me.columnitems.AllowDBNull = false
            Me.columnkilos.AllowDBNull = false
            Me.columnexento.AllowDBNull = false
            Me.columnbaseiva_a.AllowDBNull = false
            Me.columnbaseiva_b.AllowDBNull = false
            Me.columnbaseiva_c.AllowDBNull = false
            Me.columnbaseiva.AllowDBNull = false
            Me.columnimpiva.AllowDBNull = false
            Me.columnrenglon.MaxLength = 5
            Me.columnitem.MaxLength = 15
            Me.columndescrip.MaxLength = 150
            Me.columncomentario.AllowDBNull = false
            Me.columncomentario.MaxLength = 100
            Me.columniva.MaxLength = 1
            Me.columnmonto.AllowDBNull = false
            Me.columnunidad.MaxLength = 3
            Me.columncausa.MaxLength = 5
            Me.columnnomcausa.MaxLength = 150
            Me.columndes_art.AllowDBNull = false
            Me.columndes_pro.AllowDBNull = false
            Me.columnestatus.MaxLength = 32
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtListadoComprasItemsRow() As dtListadoComprasItemsRow
            Return CType(Me.NewRow,dtListadoComprasItemsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtListadoComprasItemsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtListadoComprasItemsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtListadoComprasItemsRowChangedEvent) Is Nothing) Then
                RaiseEvent dtListadoComprasItemsRowChanged(Me, New dtListadoComprasItemsRowChangeEvent(CType(e.Row,dtListadoComprasItemsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtListadoComprasItemsRowChangingEvent) Is Nothing) Then
                RaiseEvent dtListadoComprasItemsRowChanging(Me, New dtListadoComprasItemsRowChangeEvent(CType(e.Row,dtListadoComprasItemsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtListadoComprasItemsRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtListadoComprasItemsRowDeleted(Me, New dtListadoComprasItemsRowChangeEvent(CType(e.Row,dtListadoComprasItemsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtListadoComprasItemsRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtListadoComprasItemsRowDeleting(Me, New dtListadoComprasItemsRowChangeEvent(CType(e.Row,dtListadoComprasItemsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtListadoComprasItemsRow(ByVal row As dtListadoComprasItemsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtListadoComprasItemsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtOrdenesDeCompraDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtOrdenesDeCompraRow)
        
        Private columnnumord As Global.System.Data.DataColumn
        
        Private columnemision As Global.System.Data.DataColumn
        
        Private columnentrega As Global.System.Data.DataColumn
        
        Private columncodpro As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnrif As Global.System.Data.DataColumn
        
        Private columnnit As Global.System.Data.DataColumn
        
        Private columndirfiscal As Global.System.Data.DataColumn
        
        Private columncomen As Global.System.Data.DataColumn
        
        Private columnalmacen As Global.System.Data.DataColumn
        
        Private columnreferencia As Global.System.Data.DataColumn
        
        Private columnresponsable As Global.System.Data.DataColumn
        
        Private columnnumcom As Global.System.Data.DataColumn
        
        Private columngrupo As Global.System.Data.DataColumn
        
        Private columnsubgrupo As Global.System.Data.DataColumn
        
        Private columncondicionpago As Global.System.Data.DataColumn
        
        Private columnitems As Global.System.Data.DataColumn
        
        Private columnkilos As Global.System.Data.DataColumn
        
        Private columntot_net As Global.System.Data.DataColumn
        
        Private columnexento As Global.System.Data.DataColumn
        
        Private columnbaseiva_a As Global.System.Data.DataColumn
        
        Private columnbaseiva_b As Global.System.Data.DataColumn
        
        Private columnbaseiva_c As Global.System.Data.DataColumn
        
        Private columnbaseiva As Global.System.Data.DataColumn
        
        Private columnimpiva As Global.System.Data.DataColumn
        
        Private columnimp_iva As Global.System.Data.DataColumn
        
        Private columntot_ord As Global.System.Data.DataColumn
        
        Private columnrenglon As Global.System.Data.DataColumn
        
        Private columnitem As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columncomentario As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columnmonto As Global.System.Data.DataColumn
        
        Private columnunidad As Global.System.Data.DataColumn
        
        Private columncantidad As Global.System.Data.DataColumn
        
        Private columnpeso As Global.System.Data.DataColumn
        
        Private columncausa As Global.System.Data.DataColumn
        
        Private columnnomcausa As Global.System.Data.DataColumn
        
        Private columnCOSTOU As Global.System.Data.DataColumn
        
        Private columndes_art As Global.System.Data.DataColumn
        
        Private columndes_pro As Global.System.Data.DataColumn
        
        Private columncostotot As Global.System.Data.DataColumn
        
        Private columnestatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtOrdenesDeCompra"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumord
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property emisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property entregaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentrega
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codproColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodpro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property rifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property dirfiscalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndirfiscal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property comenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property almacenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnalmacen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property referenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property responsableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnresponsable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property numcomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumcom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property grupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property subgrupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubgrupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property condicionpagoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncondicionpago
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property itemsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitems
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property kilosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkilos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tot_netColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntot_net
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property exentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseiva_aColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva_a
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseiva_bColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva_b
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseiva_cColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva_c
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property baseivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbaseiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property impivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimpiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property imp_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimp_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property tot_ordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntot_ord
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property renglonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrenglon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property itemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property comentarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomentario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property montoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property unidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property pesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property causaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncausa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nomcausaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomcausa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COSTOUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property des_artColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndes_art
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property des_proColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndes_pro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property costototColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncostotot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property estatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtOrdenesDeCompraRow
            Get
                Return CType(Me.Rows(index),dtOrdenesDeCompraRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtOrdenesDeCompraRowChanging As dtOrdenesDeCompraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtOrdenesDeCompraRowChanged As dtOrdenesDeCompraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtOrdenesDeCompraRowDeleting As dtOrdenesDeCompraRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtOrdenesDeCompraRowDeleted As dtOrdenesDeCompraRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtOrdenesDeCompraRow(ByVal row As dtOrdenesDeCompraRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtOrdenesDeCompraRow( _
                    ByVal numord As String,  _
                    ByVal emision As Date,  _
                    ByVal entrega As Date,  _
                    ByVal codpro As String,  _
                    ByVal nombre As String,  _
                    ByVal rif As String,  _
                    ByVal nit As String,  _
                    ByVal dirfiscal As String,  _
                    ByVal comen As String,  _
                    ByVal almacen As String,  _
                    ByVal referencia As String,  _
                    ByVal responsable As String,  _
                    ByVal numcom As String,  _
                    ByVal grupo As String,  _
                    ByVal subgrupo As String,  _
                    ByVal condicionpago As String,  _
                    ByVal items As Integer,  _
                    ByVal kilos As Double,  _
                    ByVal tot_net As Double,  _
                    ByVal exento As Double,  _
                    ByVal baseiva_a As Double,  _
                    ByVal baseiva_b As Double,  _
                    ByVal baseiva_c As Double,  _
                    ByVal baseiva As Double,  _
                    ByVal impiva As Double,  _
                    ByVal imp_iva As Double,  _
                    ByVal tot_ord As Double,  _
                    ByVal renglon As String,  _
                    ByVal item As String,  _
                    ByVal descrip As String,  _
                    ByVal comentario As String,  _
                    ByVal iva As String,  _
                    ByVal monto As Double,  _
                    ByVal unidad As String,  _
                    ByVal cantidad As Double,  _
                    ByVal peso As Double,  _
                    ByVal causa As String,  _
                    ByVal nomcausa As String,  _
                    ByVal COSTOU As Double,  _
                    ByVal des_art As Double,  _
                    ByVal des_pro As Double,  _
                    ByVal costotot As Double,  _
                    ByVal estatus As String) As dtOrdenesDeCompraRow
            Dim rowdtOrdenesDeCompraRow As dtOrdenesDeCompraRow = CType(Me.NewRow,dtOrdenesDeCompraRow)
            Dim columnValuesArray() As Object = New Object() {numord, emision, entrega, codpro, nombre, rif, nit, dirfiscal, comen, almacen, referencia, responsable, numcom, grupo, subgrupo, condicionpago, items, kilos, tot_net, exento, baseiva_a, baseiva_b, baseiva_c, baseiva, impiva, imp_iva, tot_ord, renglon, item, descrip, comentario, iva, monto, unidad, cantidad, peso, causa, nomcausa, COSTOU, des_art, des_pro, costotot, estatus}
            rowdtOrdenesDeCompraRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtOrdenesDeCompraRow)
            Return rowdtOrdenesDeCompraRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtOrdenesDeCompraDataTable = CType(MyBase.Clone,dtOrdenesDeCompraDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtOrdenesDeCompraDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnnumord = MyBase.Columns("numord")
            Me.columnemision = MyBase.Columns("emision")
            Me.columnentrega = MyBase.Columns("entrega")
            Me.columncodpro = MyBase.Columns("codpro")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnrif = MyBase.Columns("rif")
            Me.columnnit = MyBase.Columns("nit")
            Me.columndirfiscal = MyBase.Columns("dirfiscal")
            Me.columncomen = MyBase.Columns("comen")
            Me.columnalmacen = MyBase.Columns("almacen")
            Me.columnreferencia = MyBase.Columns("referencia")
            Me.columnresponsable = MyBase.Columns("responsable")
            Me.columnnumcom = MyBase.Columns("numcom")
            Me.columngrupo = MyBase.Columns("grupo")
            Me.columnsubgrupo = MyBase.Columns("subgrupo")
            Me.columncondicionpago = MyBase.Columns("condicionpago")
            Me.columnitems = MyBase.Columns("items")
            Me.columnkilos = MyBase.Columns("kilos")
            Me.columntot_net = MyBase.Columns("tot_net")
            Me.columnexento = MyBase.Columns("exento")
            Me.columnbaseiva_a = MyBase.Columns("baseiva_a")
            Me.columnbaseiva_b = MyBase.Columns("baseiva_b")
            Me.columnbaseiva_c = MyBase.Columns("baseiva_c")
            Me.columnbaseiva = MyBase.Columns("baseiva")
            Me.columnimpiva = MyBase.Columns("impiva")
            Me.columnimp_iva = MyBase.Columns("imp_iva")
            Me.columntot_ord = MyBase.Columns("tot_ord")
            Me.columnrenglon = MyBase.Columns("renglon")
            Me.columnitem = MyBase.Columns("item")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columncomentario = MyBase.Columns("comentario")
            Me.columniva = MyBase.Columns("iva")
            Me.columnmonto = MyBase.Columns("monto")
            Me.columnunidad = MyBase.Columns("unidad")
            Me.columncantidad = MyBase.Columns("cantidad")
            Me.columnpeso = MyBase.Columns("peso")
            Me.columncausa = MyBase.Columns("causa")
            Me.columnnomcausa = MyBase.Columns("nomcausa")
            Me.columnCOSTOU = MyBase.Columns("COSTOU")
            Me.columndes_art = MyBase.Columns("des_art")
            Me.columndes_pro = MyBase.Columns("des_pro")
            Me.columncostotot = MyBase.Columns("costotot")
            Me.columnestatus = MyBase.Columns("estatus")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnnumord = New Global.System.Data.DataColumn("numord", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumord)
            Me.columnemision = New Global.System.Data.DataColumn("emision", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemision)
            Me.columnentrega = New Global.System.Data.DataColumn("entrega", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentrega)
            Me.columncodpro = New Global.System.Data.DataColumn("codpro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodpro)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnrif = New Global.System.Data.DataColumn("rif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrif)
            Me.columnnit = New Global.System.Data.DataColumn("nit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnit)
            Me.columndirfiscal = New Global.System.Data.DataColumn("dirfiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndirfiscal)
            Me.columncomen = New Global.System.Data.DataColumn("comen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomen)
            Me.columnalmacen = New Global.System.Data.DataColumn("almacen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnalmacen)
            Me.columnreferencia = New Global.System.Data.DataColumn("referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreferencia)
            Me.columnresponsable = New Global.System.Data.DataColumn("responsable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnresponsable)
            Me.columnnumcom = New Global.System.Data.DataColumn("numcom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumcom)
            Me.columngrupo = New Global.System.Data.DataColumn("grupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngrupo)
            Me.columnsubgrupo = New Global.System.Data.DataColumn("subgrupo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubgrupo)
            Me.columncondicionpago = New Global.System.Data.DataColumn("condicionpago", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncondicionpago)
            Me.columnitems = New Global.System.Data.DataColumn("items", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitems)
            Me.columnkilos = New Global.System.Data.DataColumn("kilos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkilos)
            Me.columntot_net = New Global.System.Data.DataColumn("tot_net", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntot_net)
            Me.columnexento = New Global.System.Data.DataColumn("exento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexento)
            Me.columnbaseiva_a = New Global.System.Data.DataColumn("baseiva_a", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva_a)
            Me.columnbaseiva_b = New Global.System.Data.DataColumn("baseiva_b", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva_b)
            Me.columnbaseiva_c = New Global.System.Data.DataColumn("baseiva_c", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva_c)
            Me.columnbaseiva = New Global.System.Data.DataColumn("baseiva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbaseiva)
            Me.columnimpiva = New Global.System.Data.DataColumn("impiva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimpiva)
            Me.columnimp_iva = New Global.System.Data.DataColumn("imp_iva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimp_iva)
            Me.columntot_ord = New Global.System.Data.DataColumn("tot_ord", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntot_ord)
            Me.columnrenglon = New Global.System.Data.DataColumn("renglon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrenglon)
            Me.columnitem = New Global.System.Data.DataColumn("item", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitem)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columncomentario = New Global.System.Data.DataColumn("comentario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomentario)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columnmonto = New Global.System.Data.DataColumn("monto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonto)
            Me.columnunidad = New Global.System.Data.DataColumn("unidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunidad)
            Me.columncantidad = New Global.System.Data.DataColumn("cantidad", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad)
            Me.columnpeso = New Global.System.Data.DataColumn("peso", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeso)
            Me.columncausa = New Global.System.Data.DataColumn("causa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncausa)
            Me.columnnomcausa = New Global.System.Data.DataColumn("nomcausa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomcausa)
            Me.columnCOSTOU = New Global.System.Data.DataColumn("COSTOU", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOU)
            Me.columndes_art = New Global.System.Data.DataColumn("des_art", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndes_art)
            Me.columndes_pro = New Global.System.Data.DataColumn("des_pro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndes_pro)
            Me.columncostotot = New Global.System.Data.DataColumn("costotot", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncostotot)
            Me.columnestatus = New Global.System.Data.DataColumn("estatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestatus)
            Me.columnnumord.AllowDBNull = false
            Me.columnnumord.MaxLength = 30
            Me.columnemision.AllowDBNull = false
            Me.columnentrega.AllowDBNull = false
            Me.columncodpro.AllowDBNull = false
            Me.columncodpro.MaxLength = 15
            Me.columnnombre.MaxLength = 150
            Me.columnrif.MaxLength = 20
            Me.columnnit.MaxLength = 20
            Me.columndirfiscal.MaxLength = 150
            Me.columncomen.AllowDBNull = false
            Me.columncomen.MaxLength = 100
            Me.columnalmacen.AllowDBNull = false
            Me.columnalmacen.MaxLength = 100
            Me.columnreferencia.AllowDBNull = false
            Me.columnreferencia.MaxLength = 100
            Me.columnresponsable.AllowDBNull = false
            Me.columnresponsable.MaxLength = 100
            Me.columnnumcom.AllowDBNull = false
            Me.columnnumcom.MaxLength = 100
            Me.columngrupo.AllowDBNull = false
            Me.columngrupo.MaxLength = 100
            Me.columnsubgrupo.AllowDBNull = false
            Me.columnsubgrupo.MaxLength = 100
            Me.columncondicionpago.AllowDBNull = false
            Me.columncondicionpago.MaxLength = 37
            Me.columnitems.AllowDBNull = false
            Me.columnkilos.AllowDBNull = false
            Me.columntot_net.AllowDBNull = false
            Me.columnexento.AllowDBNull = false
            Me.columnbaseiva_a.AllowDBNull = false
            Me.columnbaseiva_b.AllowDBNull = false
            Me.columnbaseiva_c.AllowDBNull = false
            Me.columnbaseiva.AllowDBNull = false
            Me.columnimpiva.AllowDBNull = false
            Me.columnimp_iva.AllowDBNull = false
            Me.columntot_ord.AllowDBNull = false
            Me.columnrenglon.MaxLength = 5
            Me.columnitem.MaxLength = 15
            Me.columndescrip.MaxLength = 150
            Me.columniva.MaxLength = 1
            Me.columnmonto.AllowDBNull = false
            Me.columnunidad.MaxLength = 3
            Me.columncausa.MaxLength = 5
            Me.columnnomcausa.MaxLength = 150
            Me.columndes_art.AllowDBNull = false
            Me.columndes_pro.AllowDBNull = false
            Me.columnestatus.MaxLength = 32
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtOrdenesDeCompraRow() As dtOrdenesDeCompraRow
            Return CType(Me.NewRow,dtOrdenesDeCompraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtOrdenesDeCompraRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtOrdenesDeCompraRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtOrdenesDeCompraRowChangedEvent) Is Nothing) Then
                RaiseEvent dtOrdenesDeCompraRowChanged(Me, New dtOrdenesDeCompraRowChangeEvent(CType(e.Row,dtOrdenesDeCompraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtOrdenesDeCompraRowChangingEvent) Is Nothing) Then
                RaiseEvent dtOrdenesDeCompraRowChanging(Me, New dtOrdenesDeCompraRowChangeEvent(CType(e.Row,dtOrdenesDeCompraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtOrdenesDeCompraRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtOrdenesDeCompraRowDeleted(Me, New dtOrdenesDeCompraRowChangeEvent(CType(e.Row,dtOrdenesDeCompraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtOrdenesDeCompraRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtOrdenesDeCompraRowDeleting(Me, New dtOrdenesDeCompraRowChangeEvent(CType(e.Row,dtOrdenesDeCompraRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtOrdenesDeCompraRow(ByVal row As dtOrdenesDeCompraRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsCompras = New dsCompras()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtOrdenesDeCompraDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtComprobantePagoRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtComprobantePago As dtComprobantePagoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtComprobantePago = CType(Me.Table,dtComprobantePagoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property comproba() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.comprobaColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.comprobaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision() As Date
            Get
                Return CType(Me(Me.tabledtComprobantePago.emisionColumn),Date)
            End Get
            Set
                Me(Me.tabledtComprobantePago.emisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codpro() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.codproColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.codproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.nombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property refer() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.referColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.referColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nummov() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.nummovColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.nummovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipomov() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.tipomovColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.tipomovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property concepto() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.conceptoColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.conceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property saldos() As Decimal
            Get
                Return CType(Me(Me.tabledtComprobantePago.saldosColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtComprobantePago.saldosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property importe() As Double
            Get
                Return CType(Me(Me.tabledtComprobantePago.importeColumn),Double)
            End Get
            Set
                Me(Me.tabledtComprobantePago.importeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_emp() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.id_empColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.id_empColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo() As Long
            Get
                Return CType(Me(Me.tabledtComprobantePago.tipoColumn),Long)
            End Get
            Set
                Me(Me.tabledtComprobantePago.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emisiondoc() As Date
            Get
                Return CType(Me(Me.tabledtComprobantePago.emisiondocColumn),Date)
            End Get
            Set
                Me(Me.tabledtComprobantePago.emisiondocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property formapag() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.formapagColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.formapagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numpag() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.numpagColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.numpagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nompag() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.nompagColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.nompagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property benefic() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.beneficColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.beneficColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property origen() As String
            Get
                Return CType(Me(Me.tabledtComprobantePago.origenColumn),String)
            End Get
            Set
                Me(Me.tabledtComprobantePago.origenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property zona() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.zonaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zona' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.zonaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nomban() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.nombanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nomban' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.nombanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ctaban() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.ctabanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ctaban' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.ctabanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property formato() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.formatoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'formato' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.formatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property renglon() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.renglonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'renglon' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.renglonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codcon() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.codconColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codcon' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.codconColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property refercont() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.refercontColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'refercont' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.refercontColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property conceptocont() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.conceptocontColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'conceptocont' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.conceptocontColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property importecont() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtComprobantePago.importecontColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'importecont' in table 'dtComprobantePago' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtComprobantePago.importecontColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.nombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnombreNull()
            Me(Me.tabledtComprobantePago.nombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IszonaNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.zonaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetzonaNull()
            Me(Me.tabledtComprobantePago.zonaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnombanNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.nombanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnombanNull()
            Me(Me.tabledtComprobantePago.nombanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsctabanNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.ctabanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetctabanNull()
            Me(Me.tabledtComprobantePago.ctabanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsformatoNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.formatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetformatoNull()
            Me(Me.tabledtComprobantePago.formatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsrenglonNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.renglonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetrenglonNull()
            Me(Me.tabledtComprobantePago.renglonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscodconNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.codconColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcodconNull()
            Me(Me.tabledtComprobantePago.codconColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsrefercontNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.refercontColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetrefercontNull()
            Me(Me.tabledtComprobantePago.refercontColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsconceptocontNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.conceptocontColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetconceptocontNull()
            Me(Me.tabledtComprobantePago.conceptocontColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsimportecontNull() As Boolean
            Return Me.IsNull(Me.tabledtComprobantePago.importecontColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetimportecontNull()
            Me(Me.tabledtComprobantePago.importecontColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtListadoComprasRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtListadoCompras As dtListadoComprasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtListadoCompras = CType(Me.Table,dtListadoComprasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcom() As String
            Get
                Return CType(Me(Me.tabledtListadoCompras.numcomColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoCompras.numcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision() As Date
            Get
                Return CType(Me(Me.tabledtListadoCompras.emisionColumn),Date)
            End Get
            Set
                Me(Me.tabledtListadoCompras.emisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codpro() As String
            Get
                Return CType(Me(Me.tabledtListadoCompras.codproColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoCompras.codproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoCompras.nombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'dtListadoCompras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoCompras.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property grupo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoCompras.grupoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'grupo' in table 'dtListadoCompras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoCompras.grupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property subgrupo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoCompras.subgrupoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subgrupo' in table 'dtListadoCompras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoCompras.subgrupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoriaprov() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoCompras.categoriaprovColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'categoriaprov' in table 'dtListadoCompras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoCompras.categoriaprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property unidadnegocioprov() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoCompras.unidadnegocioprovColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unidadnegocioprov' in table 'dtListadoCompras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoCompras.unidadnegocioprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tot_net() As Double
            Get
                Return CType(Me(Me.tabledtListadoCompras.tot_netColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoCompras.tot_netColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property descuen() As Double
            Get
                Return CType(Me(Me.tabledtListadoCompras.descuenColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoCompras.descuenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property imp_iva() As Double
            Get
                Return CType(Me(Me.tabledtListadoCompras.imp_ivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoCompras.imp_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tot_com() As Double
            Get
                Return CType(Me(Me.tabledtListadoCompras.tot_comColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoCompras.tot_comColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoCompras.nombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnombreNull()
            Me(Me.tabledtListadoCompras.nombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsgrupoNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoCompras.grupoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetgrupoNull()
            Me(Me.tabledtListadoCompras.grupoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IssubgrupoNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoCompras.subgrupoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetsubgrupoNull()
            Me(Me.tabledtListadoCompras.subgrupoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscategoriaprovNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoCompras.categoriaprovColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcategoriaprovNull()
            Me(Me.tabledtListadoCompras.categoriaprovColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsunidadnegocioprovNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoCompras.unidadnegocioprovColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetunidadnegocioprovNull()
            Me(Me.tabledtListadoCompras.unidadnegocioprovColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtProveedorRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtProveedor As dtProveedorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtProveedor = CType(Me.Table,dtProveedorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codpro() As String
            Get
                Return CType(Me(Me.tabledtProveedor.codproColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.codproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre() As String
            Get
                Return CType(Me(Me.tabledtProveedor.nombreColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property asignado() As String
            Get
                Return CType(Me(Me.tabledtProveedor.asignadoColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.asignadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RIF() As String
            Get
                Return CType(Me(Me.tabledtProveedor.RIFColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.RIFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NIT() As String
            Get
                Return CType(Me(Me.tabledtProveedor.NITColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.NITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DIRFISCAL() As String
            Get
                Return CType(Me(Me.tabledtProveedor.DIRFISCALColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.DIRFISCALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dirprove() As String
            Get
                Return CType(Me(Me.tabledtProveedor.dirproveColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.dirproveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoriaprov() As String
            Get
                Return CType(Me(Me.tabledtProveedor.categoriaprovColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.categoriaprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property unidadnegocioprov() As String
            Get
                Return CType(Me(Me.tabledtProveedor.unidadnegocioprovColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.unidadnegocioprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EMAIL1() As String
            Get
                Return CType(Me(Me.tabledtProveedor.EMAIL1Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.EMAIL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EMAIL2() As String
            Get
                Return CType(Me(Me.tabledtProveedor.EMAIL2Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.EMAIL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EMAIL3() As String
            Get
                Return CType(Me(Me.tabledtProveedor.EMAIL3Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.EMAIL3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EMAIL4() As String
            Get
                Return CType(Me(Me.tabledtProveedor.EMAIL4Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.EMAIL4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property email5() As String
            Get
                Return CType(Me(Me.tabledtProveedor.email5Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.email5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property sitioweb() As String
            Get
                Return CType(Me(Me.tabledtProveedor.sitiowebColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.sitiowebColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEF1() As String
            Get
                Return CType(Me(Me.tabledtProveedor.TELEF1Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.TELEF1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TELEF2() As String
            Get
                Return CType(Me(Me.tabledtProveedor.TELEF2Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.TELEF2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telef3() As String
            Get
                Return CType(Me(Me.tabledtProveedor.telef3Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.telef3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fax() As String
            Get
                Return CType(Me(Me.tabledtProveedor.faxColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property gerente() As String
            Get
                Return CType(Me(Me.tabledtProveedor.gerenteColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.gerenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telger() As String
            Get
                Return CType(Me(Me.tabledtProveedor.telgerColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.telgerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property contacto() As String
            Get
                Return CType(Me(Me.tabledtProveedor.contactoColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.contactoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property telcon() As String
            Get
                Return CType(Me(Me.tabledtProveedor.telconColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.telconColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property limcredito() As Double
            Get
                Return CType(Me(Me.tabledtProveedor.limcreditoColumn),Double)
            End Get
            Set
                Me(Me.tabledtProveedor.limcreditoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property disponible() As Double
            Get
                Return CType(Me(Me.tabledtProveedor.disponibleColumn),Double)
            End Get
            Set
                Me(Me.tabledtProveedor.disponibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property desc1() As Double
            Get
                Return CType(Me(Me.tabledtProveedor.desc1Column),Double)
            End Get
            Set
                Me(Me.tabledtProveedor.desc1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property desc2() As Double
            Get
                Return CType(Me(Me.tabledtProveedor.desc2Column),Double)
            End Get
            Set
                Me(Me.tabledtProveedor.desc2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property desc3() As Double
            Get
                Return CType(Me(Me.tabledtProveedor.desc3Column),Double)
            End Get
            Set
                Me(Me.tabledtProveedor.desc3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dias2() As Integer
            Get
                Return CType(Me(Me.tabledtProveedor.dias2Column),Integer)
            End Get
            Set
                Me(Me.tabledtProveedor.dias2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dias3() As Integer
            Get
                Return CType(Me(Me.tabledtProveedor.dias3Column),Integer)
            End Get
            Set
                Me(Me.tabledtProveedor.dias3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property observacion() As String
            Get
                Return CType(Me(Me.tabledtProveedor.observacionColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.observacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property zona() As String
            Get
                Return CType(Me(Me.tabledtProveedor.zonaColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.zonaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property zonanombre() As String
            Get
                Return CType(Me(Me.tabledtProveedor.zonanombreColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.zonanombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cobrador() As String
            Get
                Return CType(Me(Me.tabledtProveedor.cobradorColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.cobradorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property vendedor() As String
            Get
                Return CType(Me(Me.tabledtProveedor.vendedorColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.vendedorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property saldo() As Double
            Get
                Return CType(Me(Me.tabledtProveedor.saldoColumn),Double)
            End Get
            Set
                Me(Me.tabledtProveedor.saldoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ultpago() As Double
            Get
                Return CType(Me(Me.tabledtProveedor.ultpagoColumn),Double)
            End Get
            Set
                Me(Me.tabledtProveedor.ultpagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fecultpago() As Date
            Get
                Return CType(Me(Me.tabledtProveedor.fecultpagoColumn),Date)
            End Get
            Set
                Me(Me.tabledtProveedor.fecultpagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property forultpago() As String
            Get
                Return CType(Me(Me.tabledtProveedor.forultpagoColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.forultpagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property regimeniva() As String
            Get
                Return CType(Me(Me.tabledtProveedor.regimenivaColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.regimenivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property formapago() As String
            Get
                Return CType(Me(Me.tabledtProveedor.formapagoColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.formapagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property banco() As String
            Get
                Return CType(Me(Me.tabledtProveedor.bancoColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.bancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ctabanco() As String
            Get
                Return CType(Me(Me.tabledtProveedor.ctabancoColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.ctabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property bancodeposito1() As String
            Get
                Return CType(Me(Me.tabledtProveedor.bancodeposito1Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.bancodeposito1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property bancodeposito2() As String
            Get
                Return CType(Me(Me.tabledtProveedor.bancodeposito2Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.bancodeposito2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ctabancodeposito1() As String
            Get
                Return CType(Me(Me.tabledtProveedor.ctabancodeposito1Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.ctabancodeposito1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ctabancodeposito2() As String
            Get
                Return CType(Me(Me.tabledtProveedor.ctabancodeposito2Column),String)
            End Get
            Set
                Me(Me.tabledtProveedor.ctabancodeposito2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ingreso() As Date
            Get
                Return CType(Me(Me.tabledtProveedor.ingresoColumn),Date)
            End Get
            Set
                Me(Me.tabledtProveedor.ingresoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codcon() As String
            Get
                Return CType(Me(Me.tabledtProveedor.codconColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.codconColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estatus() As String
            Get
                Return CType(Me(Me.tabledtProveedor.estatusColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.estatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo() As Integer
            Get
                Return CType(Me(Me.tabledtProveedor.tipoColumn),Integer)
            End Get
            Set
                Me(Me.tabledtProveedor.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_EMP() As String
            Get
                Return CType(Me(Me.tabledtProveedor.ID_EMPColumn),String)
            End Get
            Set
                Me(Me.tabledtProveedor.ID_EMPColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtMovimientosRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtMovimientos As dtMovimientosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtMovimientos = CType(Me.Table,dtMovimientosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codpro() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.codproColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.codproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtMovimientos.nombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'dtMovimientos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMovimientos.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property asignado() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.asignadoColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.asignadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ingreso() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtMovimientos.ingresoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ingreso' in table 'dtMovimientos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMovimientos.ingresoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property rif() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtMovimientos.rifColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rif' in table 'dtMovimientos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMovimientos.rifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property saldo() As Double
            Get
                Return CType(Me(Me.tabledtMovimientos.saldoColumn),Double)
            End Get
            Set
                Me(Me.tabledtMovimientos.saldoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nummov() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.nummovColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.nummovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipomov() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.tipomovColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.tipomovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision() As Date
            Get
                Return CType(Me(Me.tabledtMovimientos.emisionColumn),Date)
            End Get
            Set
                Me(Me.tabledtMovimientos.emisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property hora() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.horaColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.horaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property concepto() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.conceptoColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.conceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property debitos() As Double
            Get
                Return CType(Me(Me.tabledtMovimientos.debitosColumn),Double)
            End Get
            Set
                Me(Me.tabledtMovimientos.debitosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property creditos() As Double
            Get
                Return CType(Me(Me.tabledtMovimientos.creditosColumn),Double)
            End Get
            Set
                Me(Me.tabledtMovimientos.creditosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property vence() As Date
            Get
                Return CType(Me(Me.tabledtMovimientos.venceColumn),Date)
            End Get
            Set
                Me(Me.tabledtMovimientos.venceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property refer() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.referColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.referColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoriaprov() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.categoriaprovColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.categoriaprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property unidadnegocioprov() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.unidadnegocioprovColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.unidadnegocioprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property importe() As Double
            Get
                Return CType(Me(Me.tabledtMovimientos.importeColumn),Double)
            End Get
            Set
                Me(Me.tabledtMovimientos.importeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property origen() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.origenColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.origenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numorg() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.numorgColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.numorgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property comproba() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.comprobaColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.comprobaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property formapag() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.formapagColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.formapagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property lapso() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtMovimientos.lapsoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lapso' in table 'dtMovimientos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtMovimientos.lapsoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DE() As Long
            Get
                Return CType(Me(Me.tabledtMovimientos.DEColumn),Long)
            End Get
            Set
                Me(Me.tabledtMovimientos.DEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DV() As Long
            Get
                Return CType(Me(Me.tabledtMovimientos.DVColumn),Long)
            End Get
            Set
                Me(Me.tabledtMovimientos.DVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numpag() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.numpagColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.numpagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nompag() As String
            Get
                Return CType(Me(Me.tabledtMovimientos.nompagColumn),String)
            End Get
            Set
                Me(Me.tabledtMovimientos.nompagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tabledtMovimientos.nombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnombreNull()
            Me(Me.tabledtMovimientos.nombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsingresoNull() As Boolean
            Return Me.IsNull(Me.tabledtMovimientos.ingresoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetingresoNull()
            Me(Me.tabledtMovimientos.ingresoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsrifNull() As Boolean
            Return Me.IsNull(Me.tabledtMovimientos.rifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetrifNull()
            Me(Me.tabledtMovimientos.rifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IslapsoNull() As Boolean
            Return Me.IsNull(Me.tabledtMovimientos.lapsoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetlapsoNull()
            Me(Me.tabledtMovimientos.lapsoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtVencimientosRRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtVencimientosR As dtVencimientosRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtVencimientosR = CType(Me.Table,dtVencimientosRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CODPRO() As String
            Get
                Return CType(Me(Me.tabledtVencimientosR.CODPROColumn),String)
            End Get
            Set
                Me(Me.tabledtVencimientosR.CODPROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Return CType(Me(Me.tabledtVencimientosR.NOMBREColumn),String)
            End Get
            Set
                Me(Me.tabledtVencimientosR.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property saldo0() As Decimal
            Get
                Return CType(Me(Me.tabledtVencimientosR.saldo0Column),Decimal)
            End Get
            Set
                Me(Me.tabledtVencimientosR.saldo0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property saldo1() As Decimal
            Get
                Return CType(Me(Me.tabledtVencimientosR.saldo1Column),Decimal)
            End Get
            Set
                Me(Me.tabledtVencimientosR.saldo1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property saldo2() As Decimal
            Get
                Return CType(Me(Me.tabledtVencimientosR.saldo2Column),Decimal)
            End Get
            Set
                Me(Me.tabledtVencimientosR.saldo2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property saldo3() As Decimal
            Get
                Return CType(Me(Me.tabledtVencimientosR.saldo3Column),Decimal)
            End Get
            Set
                Me(Me.tabledtVencimientosR.saldo3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property saldo4() As Decimal
            Get
                Return CType(Me(Me.tabledtVencimientosR.saldo4Column),Decimal)
            End Get
            Set
                Me(Me.tabledtVencimientosR.saldo4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_EMP() As String
            Get
                Return CType(Me(Me.tabledtVencimientosR.ID_EMPColumn),String)
            End Get
            Set
                Me(Me.tabledtVencimientosR.ID_EMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo() As Integer
            Get
                Return CType(Me(Me.tabledtVencimientosR.tipoColumn),Integer)
            End Get
            Set
                Me(Me.tabledtVencimientosR.tipoColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtLibroIVARow
        Inherits Global.System.Data.DataRow
        
        Private tabledtLibroIVA As dtLibroIVADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtLibroIVA = CType(Me.Table,dtLibroIVADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision() As Date
            Get
                Return CType(Me(Me.tabledtLibroIVA.emisionColumn),Date)
            End Get
            Set
                Me(Me.tabledtLibroIVA.emisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property rif() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLibroIVA.rifColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rif' in table 'dtLibroIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLibroIVA.rifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nompro() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLibroIVA.nomproColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nompro' in table 'dtLibroIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLibroIVA.nomproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcom() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.numcomColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.numcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property num_control() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtLibroIVA.num_controlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'num_control' in table 'dtLibroIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLibroIVA.num_controlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numdebito() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.numdebitoColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.numdebitoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcredito() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.numcreditoColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.numcreditoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.tipoColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fac_afectada() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.fac_afectadaColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.fac_afectadaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property controladorregistro() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.controladorregistroColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.controladorregistroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tot_imp() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.tot_impColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.tot_impColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property imp_nogravado() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.imp_nogravadoColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.imp_nogravadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseivaimp() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.baseivaimpColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.baseivaimpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property porivaimp() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.porivaimpColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.porivaimpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property impivaimp() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.impivaimpColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.impivaimpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipoiva() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.tipoivaColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.tipoivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tot_com() As Double
            Get
                Return CType(Me(Me.tabledtLibroIVA.tot_comColumn),Double)
            End Get
            Set
                Me(Me.tabledtLibroIVA.tot_comColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Nogravado() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtLibroIVA.NogravadoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nogravado' in table 'dtLibroIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLibroIVA.NogravadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtLibroIVA.baseivaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'baseiva' in table 'dtLibroIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLibroIVA.baseivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property poriva() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtLibroIVA.porivaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'poriva' in table 'dtLibroIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLibroIVA.porivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property impiva() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtLibroIVA.impivaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'impiva' in table 'dtLibroIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtLibroIVA.impivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property retencion() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.retencionColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property num_retencion() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.num_retencionColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.num_retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fec_retencion() As Date
            Get
                Return CType(Me(Me.tabledtLibroIVA.fec_retencionColumn),Date)
            End Get
            Set
                Me(Me.tabledtLibroIVA.fec_retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision1() As Date
            Get
                Return CType(Me(Me.tabledtLibroIVA.emision1Column),Date)
            End Get
            Set
                Me(Me.tabledtLibroIVA.emision1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipoproveedor() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.tipoproveedorColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.tipoproveedorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property planillaimportacion() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.planillaimportacionColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.planillaimportacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property expedienteimportacion() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.expedienteimportacionColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.expedienteimportacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fec_retencion1() As Date
            Get
                Return CType(Me(Me.tabledtLibroIVA.fec_retencion1Column),Date)
            End Get
            Set
                Me(Me.tabledtLibroIVA.fec_retencion1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property retenciontercero() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.retencionterceroColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.retencionterceroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property anticipoiva() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.anticipoivaColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.anticipoivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numSerie() As String
            Get
                Return CType(Me(Me.tabledtLibroIVA.numSerieColumn),String)
            End Get
            Set
                Me(Me.tabledtLibroIVA.numSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nodeducible() As Decimal
            Get
                Return CType(Me(Me.tabledtLibroIVA.nodeducibleColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtLibroIVA.nodeducibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsrifNull() As Boolean
            Return Me.IsNull(Me.tabledtLibroIVA.rifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetrifNull()
            Me(Me.tabledtLibroIVA.rifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnomproNull() As Boolean
            Return Me.IsNull(Me.tabledtLibroIVA.nomproColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnomproNull()
            Me(Me.tabledtLibroIVA.nomproColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isnum_controlNull() As Boolean
            Return Me.IsNull(Me.tabledtLibroIVA.num_controlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setnum_controlNull()
            Me(Me.tabledtLibroIVA.num_controlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNogravadoNull() As Boolean
            Return Me.IsNull(Me.tabledtLibroIVA.NogravadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNogravadoNull()
            Me(Me.tabledtLibroIVA.NogravadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsbaseivaNull() As Boolean
            Return Me.IsNull(Me.tabledtLibroIVA.baseivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetbaseivaNull()
            Me(Me.tabledtLibroIVA.baseivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsporivaNull() As Boolean
            Return Me.IsNull(Me.tabledtLibroIVA.porivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetporivaNull()
            Me(Me.tabledtLibroIVA.porivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsimpivaNull() As Boolean
            Return Me.IsNull(Me.tabledtLibroIVA.impivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetimpivaNull()
            Me(Me.tabledtLibroIVA.impivaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtRetencionesISLRRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtRetencionesISLR As dtRetencionesISLRDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtRetencionesISLR = CType(Me.Table,dtRetencionesISLRDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcom() As String
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.numcomColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.numcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision() As Date
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.emisionColumn),Date)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.emisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codpro() As String
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.codproColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.codproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMPRO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesISLR.NOMPROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMPRO' in table 'dtRetencionesISLR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.NOMPROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dirfiscal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesISLR.dirfiscalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dirfiscal' in table 'dtRetencionesISLR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.dirfiscalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.tipoColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RIF() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesISLR.RIFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIF' in table 'dtRetencionesISLR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.RIFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcredito() As String
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.numcreditoColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.numcreditoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property concepto() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesISLR.conceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'concepto' in table 'dtRetencionesISLR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.conceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TOT_COM() As Double
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.TOT_COMColumn),Double)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.TOT_COMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property montoexento() As Decimal
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.montoexentoColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.montoexentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPOIVA() As String
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.TIPOIVAColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.TIPOIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property porislr() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesISLR.porislrColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'porislr' in table 'dtRetencionesISLR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.porislrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BASEimponible() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesISLR.BASEimponibleColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BASEimponible' in table 'dtRetencionesISLR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.BASEimponibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property imp_islr() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesISLR.imp_islrColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'imp_islr' in table 'dtRetencionesISLR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.imp_islrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property num_control() As String
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.num_controlColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.num_controlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property retencion() As Decimal
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.retencionColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property num_retencion() As String
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.num_retencionColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.num_retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fec_retencion() As Date
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.fec_retencionColumn),Date)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.fec_retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision1() As Date
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.emision1Column),Date)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.emision1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numSerie() As String
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.numSerieColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.numSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fec_retencion1() As Date
            Get
                Return CType(Me(Me.tabledtRetencionesISLR.fec_retencion1Column),Date)
            End Get
            Set
                Me(Me.tabledtRetencionesISLR.fec_retencion1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMPRONull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesISLR.NOMPROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMPRONull()
            Me(Me.tabledtRetencionesISLR.NOMPROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdirfiscalNull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesISLR.dirfiscalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdirfiscalNull()
            Me(Me.tabledtRetencionesISLR.dirfiscalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRIFNull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesISLR.RIFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRIFNull()
            Me(Me.tabledtRetencionesISLR.RIFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsconceptoNull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesISLR.conceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetconceptoNull()
            Me(Me.tabledtRetencionesISLR.conceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsporislrNull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesISLR.porislrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetporislrNull()
            Me(Me.tabledtRetencionesISLR.porislrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBASEimponibleNull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesISLR.BASEimponibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBASEimponibleNull()
            Me(Me.tabledtRetencionesISLR.BASEimponibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isimp_islrNull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesISLR.imp_islrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setimp_islrNull()
            Me(Me.tabledtRetencionesISLR.imp_islrColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtRetencionesIVARow
        Inherits Global.System.Data.DataRow
        
        Private tabledtRetencionesIVA As dtRetencionesIVADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtRetencionesIVA = CType(Me.Table,dtRetencionesIVADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcom() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.numcomColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.numcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision() As Date
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.emisionColumn),Date)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.emisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codpro() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.codproColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.codproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOMPRO() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesIVA.NOMPROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMPRO' in table 'dtRetencionesIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.NOMPROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dirfiscal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesIVA.dirfiscalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dirfiscal' in table 'dtRetencionesIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.dirfiscalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.tipoColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RIF() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtRetencionesIVA.RIFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIF' in table 'dtRetencionesIVA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.RIFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcredito() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.numcreditoColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.numcreditoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fac_afectada() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.fac_afectadaColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.fac_afectadaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TOT_COM() As Double
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.TOT_COMColumn),Double)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.TOT_COMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property montoexento() As Decimal
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.montoexentoColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.montoexentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TIPOIVA() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.TIPOIVAColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.TIPOIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PORIVA() As Double
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.PORIVAColumn),Double)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.PORIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BASEIVA() As Double
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.BASEIVAColumn),Double)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.BASEIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property imp_iva() As Double
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.imp_ivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.imp_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property num_control() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.num_controlColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.num_controlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property retencion() As Decimal
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.retencionColumn),Decimal)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property num_retencion() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.num_retencionColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.num_retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fec_retencion() As Date
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.fec_retencionColumn),Date)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.fec_retencionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ret_iva() As Double
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.ret_ivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.ret_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision1() As Date
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.emision1Column),Date)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.emision1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numdebito() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.numdebitoColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.numdebitoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fec_retencion1() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.fec_retencion1Column),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.fec_retencion1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numSerie() As String
            Get
                Return CType(Me(Me.tabledtRetencionesIVA.numSerieColumn),String)
            End Get
            Set
                Me(Me.tabledtRetencionesIVA.numSerieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOMPRONull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesIVA.NOMPROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOMPRONull()
            Me(Me.tabledtRetencionesIVA.NOMPROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdirfiscalNull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesIVA.dirfiscalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdirfiscalNull()
            Me(Me.tabledtRetencionesIVA.dirfiscalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRIFNull() As Boolean
            Return Me.IsNull(Me.tabledtRetencionesIVA.RIFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRIFNull()
            Me(Me.tabledtRetencionesIVA.RIFColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtGrupoSubGrupoRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtGrupoSubGrupo As dtGrupoSubGrupoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtGrupoSubGrupo = CType(Me.Table,dtGrupoSubGrupoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property grupo() As String
            Get
                Return CType(Me(Me.tabledtGrupoSubGrupo.grupoColumn),String)
            End Get
            Set
                Me(Me.tabledtGrupoSubGrupo.grupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property subgrupo() As String
            Get
                Return CType(Me(Me.tabledtGrupoSubGrupo.subgrupoColumn),String)
            End Get
            Set
                Me(Me.tabledtGrupoSubGrupo.subgrupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Return CType(Me(Me.tabledtGrupoSubGrupo.CODIGOColumn),String)
            End Get
            Set
                Me(Me.tabledtGrupoSubGrupo.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID_EMP() As String
            Get
                Return CType(Me(Me.tabledtGrupoSubGrupo.ID_EMPColumn),String)
            End Get
            Set
                Me(Me.tabledtGrupoSubGrupo.ID_EMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MODULO() As String
            Get
                Return CType(Me(Me.tabledtGrupoSubGrupo.MODULOColumn),String)
            End Get
            Set
                Me(Me.tabledtGrupoSubGrupo.MODULOColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtListadoComprasItemsRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtListadoComprasItems As dtListadoComprasItemsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtListadoComprasItems = CType(Me.Table,dtListadoComprasItemsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcom() As String
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.numcomColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.numcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision() As Date
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.emisionColumn),Date)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.emisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codpro() As String
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.codproColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.codproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.nombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property grupo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.grupoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'grupo' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.grupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property subgrupo() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.subgrupoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subgrupo' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.subgrupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property categoriaprov() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.categoriaprovColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'categoriaprov' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.categoriaprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property unidadnegocioprov() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.unidadnegocioprovColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unidadnegocioprov' in table 'dtListadoComprasItems' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.unidadnegocioprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tot_net() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.tot_netColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.tot_netColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property descuen() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.descuenColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.descuenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property imp_iva() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.imp_ivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.imp_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tot_com() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.tot_comColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.tot_comColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COSTOU() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.COSTOUColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOU' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.COSTOUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property vence1() As Date
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.vence1Column),Date)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.vence1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property vence2() As Date
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.vence2Column),Date)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.vence2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property vence3() As Date
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.vence3Column),Date)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.vence3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property vence4() As Date
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.vence4Column),Date)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.vence4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emisioniva() As Date
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.emisionivaColumn),Date)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.emisionivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property rif() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.rifColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rif' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.rifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nit() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.nitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nit' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.nitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dirfiscal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.dirfiscalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dirfiscal' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.dirfiscalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property comen() As String
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.comenColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.comenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property almacen() As String
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.almacenColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.almacenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property referencia() As String
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.referenciaColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.referenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property responsable() As String
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.responsableColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.responsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property condicionpago() As String
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.condicionpagoColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.condicionpagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property items() As Integer
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.itemsColumn),Integer)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.itemsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property kilos() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.kilosColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.kilosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property exento() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.exentoColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.exentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva_a() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.baseiva_aColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.baseiva_aColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva_b() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.baseiva_bColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.baseiva_bColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva_c() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.baseiva_cColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.baseiva_cColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.baseivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.baseivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property impiva() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.impivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.impivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property renglon() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.renglonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'renglon' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.renglonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property item() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.itemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'item' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.itemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property descrip() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.descripColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'descrip' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property comentario() As String
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.comentarioColumn),String)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.comentarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property iva() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.ivaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'iva' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property monto() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.montoColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.montoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property unidad() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.unidadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unidad' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.unidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cantidad() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.cantidadColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cantidad' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.cantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.pesoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'peso' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.pesoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property causa() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.causaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'causa' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.causaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nomcausa() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.nomcausaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nomcausa' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.nomcausaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property des_art() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.des_artColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.des_artColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property des_pro() As Double
            Get
                Return CType(Me(Me.tabledtListadoComprasItems.des_proColumn),Double)
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.des_proColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property costotot() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.costototColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'costotot' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.costototColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estatus() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtListadoComprasItems.estatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'estatus' in table 'dtListadoComprasItems' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtListadoComprasItems.estatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.nombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnombreNull()
            Me(Me.tabledtListadoComprasItems.nombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsgrupoNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.grupoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetgrupoNull()
            Me(Me.tabledtListadoComprasItems.grupoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IssubgrupoNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.subgrupoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetsubgrupoNull()
            Me(Me.tabledtListadoComprasItems.subgrupoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscategoriaprovNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.categoriaprovColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcategoriaprovNull()
            Me(Me.tabledtListadoComprasItems.categoriaprovColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsunidadnegocioprovNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.unidadnegocioprovColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetunidadnegocioprovNull()
            Me(Me.tabledtListadoComprasItems.unidadnegocioprovColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOSTOUNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.COSTOUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOSTOUNull()
            Me(Me.tabledtListadoComprasItems.COSTOUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsrifNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.rifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetrifNull()
            Me(Me.tabledtListadoComprasItems.rifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnitNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.nitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnitNull()
            Me(Me.tabledtListadoComprasItems.nitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdirfiscalNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.dirfiscalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdirfiscalNull()
            Me(Me.tabledtListadoComprasItems.dirfiscalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsrenglonNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.renglonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetrenglonNull()
            Me(Me.tabledtListadoComprasItems.renglonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsitemNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.itemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetitemNull()
            Me(Me.tabledtListadoComprasItems.itemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdescripNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.descripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdescripNull()
            Me(Me.tabledtListadoComprasItems.descripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsivaNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.ivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetivaNull()
            Me(Me.tabledtListadoComprasItems.ivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsunidadNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.unidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetunidadNull()
            Me(Me.tabledtListadoComprasItems.unidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscantidadNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.cantidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcantidadNull()
            Me(Me.tabledtListadoComprasItems.cantidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspesoNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.pesoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpesoNull()
            Me(Me.tabledtListadoComprasItems.pesoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscausaNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.causaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcausaNull()
            Me(Me.tabledtListadoComprasItems.causaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnomcausaNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.nomcausaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnomcausaNull()
            Me(Me.tabledtListadoComprasItems.nomcausaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscostototNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.costototColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcostototNull()
            Me(Me.tabledtListadoComprasItems.costototColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsestatusNull() As Boolean
            Return Me.IsNull(Me.tabledtListadoComprasItems.estatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetestatusNull()
            Me(Me.tabledtListadoComprasItems.estatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtOrdenesDeCompraRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtOrdenesDeCompra As dtOrdenesDeCompraDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtOrdenesDeCompra = CType(Me.Table,dtOrdenesDeCompraDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numord() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.numordColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.numordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property emision() As Date
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.emisionColumn),Date)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.emisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property entrega() As Date
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.entregaColumn),Date)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.entregaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codpro() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.codproColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.codproColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nombre() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.nombreColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nombre' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property rif() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.rifColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rif' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.rifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nit() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.nitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nit' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.nitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dirfiscal() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.dirfiscalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dirfiscal' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.dirfiscalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property comen() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.comenColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.comenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property almacen() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.almacenColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.almacenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property referencia() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.referenciaColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.referenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property responsable() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.responsableColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.responsableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property numcom() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.numcomColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.numcomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property grupo() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.grupoColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.grupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property subgrupo() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.subgrupoColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.subgrupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property condicionpago() As String
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.condicionpagoColumn),String)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.condicionpagoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property items() As Integer
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.itemsColumn),Integer)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.itemsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property kilos() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.kilosColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.kilosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tot_net() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.tot_netColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.tot_netColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property exento() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.exentoColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.exentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva_a() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.baseiva_aColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.baseiva_aColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva_b() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.baseiva_bColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.baseiva_bColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva_c() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.baseiva_cColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.baseiva_cColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property baseiva() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.baseivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.baseivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property impiva() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.impivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.impivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property imp_iva() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.imp_ivaColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.imp_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tot_ord() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.tot_ordColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.tot_ordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property renglon() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.renglonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'renglon' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.renglonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property item() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.itemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'item' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.itemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property descrip() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.descripColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'descrip' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property comentario() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.comentarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comentario' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.comentarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property iva() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.ivaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'iva' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property monto() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.montoColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.montoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property unidad() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.unidadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'unidad' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.unidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cantidad() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.cantidadColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cantidad' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.cantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property peso() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.pesoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'peso' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.pesoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property causa() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.causaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'causa' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.causaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nomcausa() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.nomcausaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nomcausa' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.nomcausaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COSTOU() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.COSTOUColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOU' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.COSTOUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property des_art() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.des_artColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.des_artColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property des_pro() As Double
            Get
                Return CType(Me(Me.tabledtOrdenesDeCompra.des_proColumn),Double)
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.des_proColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property costotot() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.costototColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'costotot' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.costototColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property estatus() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtOrdenesDeCompra.estatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'estatus' in table 'dtOrdenesDeCompra' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtOrdenesDeCompra.estatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnombreNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.nombreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnombreNull()
            Me(Me.tabledtOrdenesDeCompra.nombreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsrifNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.rifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetrifNull()
            Me(Me.tabledtOrdenesDeCompra.rifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnitNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.nitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnitNull()
            Me(Me.tabledtOrdenesDeCompra.nitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdirfiscalNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.dirfiscalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdirfiscalNull()
            Me(Me.tabledtOrdenesDeCompra.dirfiscalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsrenglonNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.renglonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetrenglonNull()
            Me(Me.tabledtOrdenesDeCompra.renglonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsitemNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.itemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetitemNull()
            Me(Me.tabledtOrdenesDeCompra.itemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdescripNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.descripColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdescripNull()
            Me(Me.tabledtOrdenesDeCompra.descripColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscomentarioNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.comentarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcomentarioNull()
            Me(Me.tabledtOrdenesDeCompra.comentarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsivaNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.ivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetivaNull()
            Me(Me.tabledtOrdenesDeCompra.ivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsunidadNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.unidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetunidadNull()
            Me(Me.tabledtOrdenesDeCompra.unidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscantidadNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.cantidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcantidadNull()
            Me(Me.tabledtOrdenesDeCompra.cantidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspesoNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.pesoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpesoNull()
            Me(Me.tabledtOrdenesDeCompra.pesoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscausaNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.causaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcausaNull()
            Me(Me.tabledtOrdenesDeCompra.causaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnomcausaNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.nomcausaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnomcausaNull()
            Me(Me.tabledtOrdenesDeCompra.nomcausaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOSTOUNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.COSTOUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOSTOUNull()
            Me(Me.tabledtOrdenesDeCompra.COSTOUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscostototNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.costototColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcostototNull()
            Me(Me.tabledtOrdenesDeCompra.costototColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsestatusNull() As Boolean
            Return Me.IsNull(Me.tabledtOrdenesDeCompra.estatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetestatusNull()
            Me(Me.tabledtOrdenesDeCompra.estatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtComprobantePagoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtComprobantePagoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtComprobantePagoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtComprobantePagoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtListadoComprasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtListadoComprasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtListadoComprasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtListadoComprasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtProveedorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtProveedorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtProveedorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtProveedorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtMovimientosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtMovimientosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtMovimientosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtMovimientosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtVencimientosRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtVencimientosRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtVencimientosRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtVencimientosRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtLibroIVARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtLibroIVARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtLibroIVARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtLibroIVARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtRetencionesISLRRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtRetencionesISLRRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtRetencionesISLRRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtRetencionesISLRRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtRetencionesIVARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtRetencionesIVARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtRetencionesIVARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtRetencionesIVARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtGrupoSubGrupoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtGrupoSubGrupoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtGrupoSubGrupoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtGrupoSubGrupoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtListadoComprasItemsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtListadoComprasItemsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtListadoComprasItemsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtListadoComprasItemsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtOrdenesDeCompraRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtOrdenesDeCompraRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtOrdenesDeCompraRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtOrdenesDeCompraRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsComprasTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtComprobantePagoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtComprobantePago"
            tableMapping.ColumnMappings.Add("comproba", "comproba")
            tableMapping.ColumnMappings.Add("emision", "emision")
            tableMapping.ColumnMappings.Add("codpro", "codpro")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("refer", "refer")
            tableMapping.ColumnMappings.Add("nummov", "nummov")
            tableMapping.ColumnMappings.Add("tipomov", "tipomov")
            tableMapping.ColumnMappings.Add("concepto", "concepto")
            tableMapping.ColumnMappings.Add("saldos", "saldos")
            tableMapping.ColumnMappings.Add("importe", "importe")
            tableMapping.ColumnMappings.Add("id_emp", "id_emp")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("emisiondoc", "emisiondoc")
            tableMapping.ColumnMappings.Add("formapag", "formapag")
            tableMapping.ColumnMappings.Add("numpag", "numpag")
            tableMapping.ColumnMappings.Add("nompag", "nompag")
            tableMapping.ColumnMappings.Add("benefic", "benefic")
            tableMapping.ColumnMappings.Add("origen", "origen")
            tableMapping.ColumnMappings.Add("zona", "zona")
            tableMapping.ColumnMappings.Add("nomban", "nomban")
            tableMapping.ColumnMappings.Add("ctaban", "ctaban")
            tableMapping.ColumnMappings.Add("formato", "formato")
            tableMapping.ColumnMappings.Add("renglon", "renglon")
            tableMapping.ColumnMappings.Add("codcon", "codcon")
            tableMapping.ColumnMappings.Add("refercont", "refercont")
            tableMapping.ColumnMappings.Add("conceptocont", "conceptocont")
            tableMapping.ColumnMappings.Add("importecont", "importecont")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT a.codpro, a.tipomov, a.nummov, a.emision, a.emision emisiondoc, a.refer, a"& _ 
                ".concepto, a.importe, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.formapag, a.numpag, a.nompag, a.benefic, a.origen, a.c"& _ 
                "omproba,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"b.nombre, b.zona, c.nomban, c.ctaban, c.formato , 0.00 saldos, a.id_"& _ 
                "emp, 1 tipo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"e.renglon, e.codcon, e.refer refercont, e.concepto conceptocont, "& _ 
                "e.importe importecont"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM jsprotrapag a "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        LEFT JOIN jsprocatpro b ON ("& _ 
                "a.codpro = b.codpro AND a.id_emp = b.id_emp) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        LEFT JOIN jsbancatban c O"& _ 
                "N (a.nompag = c.codban AND a.id_emp = c.id_emp) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        LEFT JOIN jsbanordpag "& _ 
                "e ON (a.comproba = e.comproba AND a.id_emp = e.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        WHERE "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "a.comproba = 'CA00000074' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        a.id_emp = '01' "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        ORDER BY a.num"& _ 
                "mov"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtComprobantePagoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtComprobantePagoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtComprobantePagoDataTable = New dsCompras.dtComprobantePagoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtListadoComprasTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtListadoCompras"
            tableMapping.ColumnMappings.Add("numcom", "numcom")
            tableMapping.ColumnMappings.Add("emision", "emision")
            tableMapping.ColumnMappings.Add("codpro", "codpro")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("grupo", "grupo")
            tableMapping.ColumnMappings.Add("subgrupo", "subgrupo")
            tableMapping.ColumnMappings.Add("categoriaprov", "categoriaprov")
            tableMapping.ColumnMappings.Add("unidadnegocioprov", "unidadnegocioprov")
            tableMapping.ColumnMappings.Add("tot_net", "tot_net")
            tableMapping.ColumnMappings.Add("descuen", "descuen")
            tableMapping.ColumnMappings.Add("imp_iva", "imp_iva")
            tableMapping.ColumnMappings.Add("tot_com", "tot_com")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select a.numcom, a.emision, a.codpro, b.nombre, c.descrip grupo, c.descrip subgru"& _ 
                "po,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"c.descrip categoriaprov, d.descrip unidadnegocioprov, a.tot_net, a.descuen,"& _ 
                " a.imp_iva,  a.tot_com"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from jsproenccom a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join jsprocatpro b on (a.codpro"& _ 
                " = b.codpro and a.id_emp = b.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join jsproliscat c on (b.categoria = "& _ 
                "c.codigo and b.id_emp = c.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join jsprolisuni d on (b.unidad = d.codi"& _ 
                "go and b.id_emp = d.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.emision >= '2006-01-01' AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.emision <= "& _ 
                "'2006-01-31' and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.id_emp ='01'"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtListadoComprasDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtListadoComprasDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtListadoComprasDataTable = New dsCompras.dtListadoComprasDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtProveedorTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtProveedor"
            tableMapping.ColumnMappings.Add("codpro", "codpro")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("asignado", "asignado")
            tableMapping.ColumnMappings.Add("RIF", "RIF")
            tableMapping.ColumnMappings.Add("NIT", "NIT")
            tableMapping.ColumnMappings.Add("DIRFISCAL", "DIRFISCAL")
            tableMapping.ColumnMappings.Add("dirprove", "dirprove")
            tableMapping.ColumnMappings.Add("categoriaprov", "categoriaprov")
            tableMapping.ColumnMappings.Add("unidadnegocioprov", "unidadnegocioprov")
            tableMapping.ColumnMappings.Add("EMAIL1", "EMAIL1")
            tableMapping.ColumnMappings.Add("EMAIL2", "EMAIL2")
            tableMapping.ColumnMappings.Add("EMAIL3", "EMAIL3")
            tableMapping.ColumnMappings.Add("EMAIL4", "EMAIL4")
            tableMapping.ColumnMappings.Add("email5", "email5")
            tableMapping.ColumnMappings.Add("sitioweb", "sitioweb")
            tableMapping.ColumnMappings.Add("TELEF1", "TELEF1")
            tableMapping.ColumnMappings.Add("TELEF2", "TELEF2")
            tableMapping.ColumnMappings.Add("telef3", "telef3")
            tableMapping.ColumnMappings.Add("fax", "fax")
            tableMapping.ColumnMappings.Add("gerente", "gerente")
            tableMapping.ColumnMappings.Add("telger", "telger")
            tableMapping.ColumnMappings.Add("contacto", "contacto")
            tableMapping.ColumnMappings.Add("telcon", "telcon")
            tableMapping.ColumnMappings.Add("limcredito", "limcredito")
            tableMapping.ColumnMappings.Add("disponible", "disponible")
            tableMapping.ColumnMappings.Add("desc1", "desc1")
            tableMapping.ColumnMappings.Add("desc2", "desc2")
            tableMapping.ColumnMappings.Add("desc3", "desc3")
            tableMapping.ColumnMappings.Add("dias2", "dias2")
            tableMapping.ColumnMappings.Add("dias3", "dias3")
            tableMapping.ColumnMappings.Add("observacion", "observacion")
            tableMapping.ColumnMappings.Add("zona", "zona")
            tableMapping.ColumnMappings.Add("zonanombre", "zonanombre")
            tableMapping.ColumnMappings.Add("cobrador", "cobrador")
            tableMapping.ColumnMappings.Add("vendedor", "vendedor")
            tableMapping.ColumnMappings.Add("saldo", "saldo")
            tableMapping.ColumnMappings.Add("ultpago", "ultpago")
            tableMapping.ColumnMappings.Add("fecultpago", "fecultpago")
            tableMapping.ColumnMappings.Add("forultpago", "forultpago")
            tableMapping.ColumnMappings.Add("regimeniva", "regimeniva")
            tableMapping.ColumnMappings.Add("formapago", "formapago")
            tableMapping.ColumnMappings.Add("banco", "banco")
            tableMapping.ColumnMappings.Add("ctabanco", "ctabanco")
            tableMapping.ColumnMappings.Add("bancodeposito1", "bancodeposito1")
            tableMapping.ColumnMappings.Add("bancodeposito2", "bancodeposito2")
            tableMapping.ColumnMappings.Add("ctabancodeposito1", "ctabancodeposito1")
            tableMapping.ColumnMappings.Add("ctabancodeposito2", "ctabancodeposito2")
            tableMapping.ColumnMappings.Add("ingreso", "ingreso")
            tableMapping.ColumnMappings.Add("codcon", "codcon")
            tableMapping.ColumnMappings.Add("estatus", "estatus")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("ID_EMP", "ID_EMP")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `jsprocatpro` WHERE ((`CODPRO` = @Original_codpro) AND (`NOMBRE` = @O"& _ 
                "riginal_nombre) AND (`ASIGNADO` = @Original_asignado) AND (`RIF` = @Original_RIF"& _ 
                ") AND (`NIT` = @Original_NIT) AND (`DIRFISCAL` = @Original_DIRFISCAL) AND (`DIRP"& _ 
                "ROVE` = @Original_dirprove) AND (`EMAIL1` = @Original_EMAIL1) AND (`EMAIL2` = @O"& _ 
                "riginal_EMAIL2) AND (`EMAIL3` = @Original_EMAIL3) AND (`EMAIL4` = @Original_EMAI"& _ 
                "L4) AND (`EMAIL5` = @Original_email5) AND (`SITIOWEB` = @Original_sitioweb) AND "& _ 
                "(`TELEF1` = @Original_TELEF1) AND (`TELEF2` = @Original_TELEF2) AND (`TELEF3` = "& _ 
                "@Original_telef3) AND (`FAX` = @Original_fax) AND (`GERENTE` = @Original_gerente"& _ 
                ") AND (`TELGER` = @Original_telger) AND (`CONTACTO` = @Original_contacto) AND (`"& _ 
                "TELCON` = @Original_telcon) AND (`LIMCREDITO` = @Original_limcredito) AND (`DISP"& _ 
                "ONIBLE` = @Original_disponible) AND (`DESC1` = @Original_desc1) AND (`DESC2` = @"& _ 
                "Original_desc2) AND (`DESC3` = @Original_desc3) AND (`DIAS2` = @Original_dias2) "& _ 
                "AND (`DIAS3` = @Original_dias3) AND (`OBSERVACION` = @Original_observacion) AND "& _ 
                "(`ZONA` = @Original_zona) AND (`COBRADOR` = @Original_cobrador) AND (`VENDEDOR` "& _ 
                "= @Original_vendedor) AND (`SALDO` = @Original_saldo) AND (`ULTPAGO` = @Original"& _ 
                "_ultpago) AND (`fecultpago` = @Original_fecultpago) AND (`FORULTPAGO` = @Origina"& _ 
                "l_forultpago) AND (`REGIMENIVA` = @Original_regimeniva) AND (`FORMAPAGO` = @Orig"& _ 
                "inal_formapago) AND (`BANCO` = @Original_banco) AND (`CTABANCO` = @Original_ctab"& _ 
                "anco) AND (`BANCODEPOSITO1` = @Original_bancodeposito1) AND (`BANCODEPOSITO2` = "& _ 
                "@Original_bancodeposito2) AND (`CTABANCODEPOSITO1` = @Original_ctabancodeposito1"& _ 
                ") AND (`CTABANCODEPOSITO2` = @Original_ctabancodeposito2) AND (`INGRESO` = @Orig"& _ 
                "inal_ingreso) AND (`CODCON` = @Original_codcon) AND (`ESTATUS` = @Original_estat"& _ 
                "us) AND (`tipo` = @Original_tipo) AND (`ID_EMP` = @Original_ID_EMP))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_codpro"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codpro"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_nombre"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_asignado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "asignado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_RIF"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RIF"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NIT"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NIT"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_DIRFISCAL"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "DIRFISCAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_dirprove"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dirprove"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EMAIL1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EMAIL2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EMAIL3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EMAIL4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL4"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_email5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "email5"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_sitioweb"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sitioweb"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TELEF1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TELEF1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TELEF2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TELEF2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_telef3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telef3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_fax"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fax"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_gerente"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "gerente"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_telger"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telger"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_contacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "contacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_telcon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telcon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_limcredito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "limcredito"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_disponible"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "disponible"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_desc1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_desc2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_desc3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_dias2"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "dias2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_dias3"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "dias3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_observacion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "observacion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_zona"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "zona"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_cobrador"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cobrador"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_vendedor"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "vendedor"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_saldo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ultpago"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_fecultpago"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_forultpago"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "forultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_regimeniva"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "regimeniva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_formapago"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "formapago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_banco"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "banco"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ctabanco"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabanco"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_bancodeposito1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "bancodeposito1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_bancodeposito2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "bancodeposito2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ctabancodeposito1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabancodeposito1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ctabancodeposito2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabancodeposito2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ingreso"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "ingreso"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_codcon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codcon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_estatus"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "estatus"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `jsprocatpro` SET `CODPRO` = @codpro, `NOMBRE` = @nombre, `ASIGNADO` = @as"& _ 
                "ignado, `RIF` = @RIF, `NIT` = @NIT, `DIRFISCAL` = @DIRFISCAL, `DIRPROVE` = @dirp"& _ 
                "rove, `EMAIL1` = @EMAIL1, `EMAIL2` = @EMAIL2, `EMAIL3` = @EMAIL3, `EMAIL4` = @EM"& _ 
                "AIL4, `EMAIL5` = @email5, `SITIOWEB` = @sitioweb, `TELEF1` = @TELEF1, `TELEF2` ="& _ 
                " @TELEF2, `TELEF3` = @telef3, `FAX` = @fax, `GERENTE` = @gerente, `TELGER` = @te"& _ 
                "lger, `CONTACTO` = @contacto, `TELCON` = @telcon, `LIMCREDITO` = @limcredito, `D"& _ 
                "ISPONIBLE` = @disponible, `DESC1` = @desc1, `DESC2` = @desc2, `DESC3` = @desc3, "& _ 
                "`DIAS2` = @dias2, `DIAS3` = @dias3, `OBSERVACION` = @observacion, `ZONA` = @zona"& _ 
                ", `COBRADOR` = @cobrador, `VENDEDOR` = @vendedor, `SALDO` = @saldo, `ULTPAGO` = "& _ 
                "@ultpago, `fecultpago` = @fecultpago, `FORULTPAGO` = @forultpago, `REGIMENIVA` ="& _ 
                " @regimeniva, `FORMAPAGO` = @formapago, `BANCO` = @banco, `CTABANCO` = @ctabanco"& _ 
                ", `BANCODEPOSITO1` = @bancodeposito1, `BANCODEPOSITO2` = @bancodeposito2, `CTABA"& _ 
                "NCODEPOSITO1` = @ctabancodeposito1, `CTABANCODEPOSITO2` = @ctabancodeposito2, `I"& _ 
                "NGRESO` = @ingreso, `CODCON` = @codcon, `ESTATUS` = @estatus, `tipo` = @tipo, `I"& _ 
                "D_EMP` = @ID_EMP WHERE ((`CODPRO` = @Original_codpro) AND (`NOMBRE` = @Original_"& _ 
                "nombre) AND (`ASIGNADO` = @Original_asignado) AND (`RIF` = @Original_RIF) AND (`"& _ 
                "NIT` = @Original_NIT) AND (`DIRFISCAL` = @Original_DIRFISCAL) AND (`DIRPROVE` = "& _ 
                "@Original_dirprove) AND (`EMAIL1` = @Original_EMAIL1) AND (`EMAIL2` = @Original_"& _ 
                "EMAIL2) AND (`EMAIL3` = @Original_EMAIL3) AND (`EMAIL4` = @Original_EMAIL4) AND "& _ 
                "(`EMAIL5` = @Original_email5) AND (`SITIOWEB` = @Original_sitioweb) AND (`TELEF1"& _ 
                "` = @Original_TELEF1) AND (`TELEF2` = @Original_TELEF2) AND (`TELEF3` = @Origina"& _ 
                "l_telef3) AND (`FAX` = @Original_fax) AND (`GERENTE` = @Original_gerente) AND (`"& _ 
                "TELGER` = @Original_telger) AND (`CONTACTO` = @Original_contacto) AND (`TELCON` "& _ 
                "= @Original_telcon) AND (`LIMCREDITO` = @Original_limcredito) AND (`DISPONIBLE` "& _ 
                "= @Original_disponible) AND (`DESC1` = @Original_desc1) AND (`DESC2` = @Original"& _ 
                "_desc2) AND (`DESC3` = @Original_desc3) AND (`DIAS2` = @Original_dias2) AND (`DI"& _ 
                "AS3` = @Original_dias3) AND (`OBSERVACION` = @Original_observacion) AND (`ZONA` "& _ 
                "= @Original_zona) AND (`COBRADOR` = @Original_cobrador) AND (`VENDEDOR` = @Origi"& _ 
                "nal_vendedor) AND (`SALDO` = @Original_saldo) AND (`ULTPAGO` = @Original_ultpago"& _ 
                ") AND (`fecultpago` = @Original_fecultpago) AND (`FORULTPAGO` = @Original_forult"& _ 
                "pago) AND (`REGIMENIVA` = @Original_regimeniva) AND (`FORMAPAGO` = @Original_for"& _ 
                "mapago) AND (`BANCO` = @Original_banco) AND (`CTABANCO` = @Original_ctabanco) AN"& _ 
                "D (`BANCODEPOSITO1` = @Original_bancodeposito1) AND (`BANCODEPOSITO2` = @Origina"& _ 
                "l_bancodeposito2) AND (`CTABANCODEPOSITO1` = @Original_ctabancodeposito1) AND (`"& _ 
                "CTABANCODEPOSITO2` = @Original_ctabancodeposito2) AND (`INGRESO` = @Original_ing"& _ 
                "reso) AND (`CODCON` = @Original_codcon) AND (`ESTATUS` = @Original_estatus) AND "& _ 
                "(`tipo` = @Original_tipo) AND (`ID_EMP` = @Original_ID_EMP))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@codpro"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codpro"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@nombre"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@asignado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "asignado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@RIF"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RIF"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NIT"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NIT"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@DIRFISCAL"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "DIRFISCAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@dirprove"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dirprove"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@EMAIL1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@EMAIL2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@EMAIL3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@EMAIL4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL4"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@email5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "email5"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@sitioweb"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sitioweb"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TELEF1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TELEF1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@TELEF2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TELEF2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@telef3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telef3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@fax"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fax"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@gerente"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "gerente"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@telger"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telger"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@contacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "contacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@telcon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telcon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@limcredito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "limcredito"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@disponible"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "disponible"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@desc1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@desc2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@desc3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@dias2"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "dias2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@dias3"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "dias3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@observacion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "observacion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@zona"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "zona"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@cobrador"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cobrador"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@vendedor"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "vendedor"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@saldo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ultpago"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@fecultpago"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@forultpago"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "forultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@regimeniva"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "regimeniva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@formapago"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "formapago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@banco"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "banco"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ctabanco"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabanco"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@bancodeposito1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "bancodeposito1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@bancodeposito2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "bancodeposito2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ctabancodeposito1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabancodeposito1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ctabancodeposito2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabancodeposito2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ingreso"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "ingreso"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@codcon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codcon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@estatus"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "estatus"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_codpro"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codpro"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_nombre"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_asignado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "asignado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_RIF"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "RIF"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NIT"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NIT"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_DIRFISCAL"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "DIRFISCAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_dirprove"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dirprove"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EMAIL1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EMAIL2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EMAIL3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_EMAIL4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "EMAIL4"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_email5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "email5"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_sitioweb"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sitioweb"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TELEF1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TELEF1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_TELEF2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TELEF2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_telef3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telef3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_fax"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fax"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_gerente"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "gerente"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_telger"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telger"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_contacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "contacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_telcon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telcon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_limcredito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "limcredito"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_disponible"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "disponible"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_desc1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_desc2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_desc3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "desc3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_dias2"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "dias2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_dias3"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "dias3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_observacion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "observacion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_zona"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "zona"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_cobrador"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cobrador"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_vendedor"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "vendedor"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_saldo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ultpago"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_fecultpago"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_forultpago"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "forultpago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_regimeniva"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "regimeniva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_formapago"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "formapago"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_banco"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "banco"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ctabanco"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabanco"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_bancodeposito1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "bancodeposito1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_bancodeposito2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "bancodeposito2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ctabancodeposito1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabancodeposito1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ctabancodeposito2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctabancodeposito2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ingreso"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "ingreso"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_codcon"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codcon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_estatus"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "estatus"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT a.codpro, a.nombre, a.asignado, a.RIF, a.NIT, a.DIRFISCAL, a.dirprove,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'X"& _ 
                "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' categoriaprov, 'XXXXXXXXXXXXX"& _ 
                "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' unidadnegocioprov,  a.EMAIL1, a.EMAIL2, a"& _ 
                ".EMAIL3, a.EMAIL4, email5, a.sitioweb, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.TELEF1, a.TELEF2, a.telef3,  a.fax, a"& _ 
                ".gerente, a.telger, a.contacto, a.telcon, a.limcredito, a.disponible, a.desc1, a"& _ 
                ".desc2, a.desc3, a.dias2, a.dias3, a.observacion, a.zona,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"'XXXXXXXXXXXXXXXXXX"& _ 
                "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' zonanombre, a.cobrador, a.vendedor, a.saldo, a"& _ 
                ".ultpago, a.fecultpago, a.forultpago, a.regimeniva, a.formapago, a.banco, a.ctab"& _ 
                "anco, a.bancodeposito1, a.bancodeposito2, a.ctabancodeposito1, a.ctabancodeposit"& _ 
                "o2, a.ingreso, a.codcon, a.estatus, a.tipo,  a.ID_EMP "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM jsprocatpro a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.id_emp = '01'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY a.codpro"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtProveedorDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtProveedorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtProveedorDataTable = New dsCompras.dtProveedorDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsCompras.dtProveedorDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsCompras) As Integer
            Return Me.Adapter.Update(dataSet, "dtProveedor")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_codpro As String,  _
                    ByVal Original_nombre As String,  _
                    ByVal Original_asignado As String,  _
                    ByVal Original_RIF As String,  _
                    ByVal Original_NIT As String,  _
                    ByVal Original_DIRFISCAL As String,  _
                    ByVal Original_dirprove As String,  _
                    ByVal Original_EMAIL1 As String,  _
                    ByVal Original_EMAIL2 As String,  _
                    ByVal Original_EMAIL3 As String,  _
                    ByVal Original_EMAIL4 As String,  _
                    ByVal Original_email5 As String,  _
                    ByVal Original_sitioweb As String,  _
                    ByVal Original_TELEF1 As String,  _
                    ByVal Original_TELEF2 As String,  _
                    ByVal Original_telef3 As String,  _
                    ByVal Original_fax As String,  _
                    ByVal Original_gerente As String,  _
                    ByVal Original_telger As String,  _
                    ByVal Original_contacto As String,  _
                    ByVal Original_telcon As String,  _
                    ByVal Original_limcredito As Double,  _
                    ByVal Original_disponible As Double,  _
                    ByVal Original_desc1 As Double,  _
                    ByVal Original_desc2 As Double,  _
                    ByVal Original_desc3 As Double,  _
                    ByVal Original_dias2 As Integer,  _
                    ByVal Original_dias3 As Integer,  _
                    ByVal Original_observacion As String,  _
                    ByVal Original_zona As String,  _
                    ByVal Original_cobrador As String,  _
                    ByVal Original_vendedor As String,  _
                    ByVal Original_saldo As Double,  _
                    ByVal Original_ultpago As Double,  _
                    ByVal Original_fecultpago As Date,  _
                    ByVal Original_forultpago As String,  _
                    ByVal Original_regimeniva As String,  _
                    ByVal Original_formapago As String,  _
                    ByVal Original_banco As String,  _
                    ByVal Original_ctabanco As String,  _
                    ByVal Original_bancodeposito1 As String,  _
                    ByVal Original_bancodeposito2 As String,  _
                    ByVal Original_ctabancodeposito1 As String,  _
                    ByVal Original_ctabancodeposito2 As String,  _
                    ByVal Original_ingreso As Date,  _
                    ByVal Original_codcon As String,  _
                    ByVal Original_estatus As String,  _
                    ByVal Original_tipo As Integer,  _
                    ByVal Original_ID_EMP As String) As Integer
            If (Original_codpro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codpro")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_codpro,String)
            End If
            If (Original_nombre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nombre")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_nombre,String)
            End If
            If (Original_asignado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_asignado")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_asignado,String)
            End If
            If (Original_RIF Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RIF")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_RIF,String)
            End If
            If (Original_NIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NIT")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_NIT,String)
            End If
            If (Original_DIRFISCAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DIRFISCAL")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_DIRFISCAL,String)
            End If
            If (Original_dirprove Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dirprove")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_dirprove,String)
            End If
            If (Original_EMAIL1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL1")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_EMAIL1,String)
            End If
            If (Original_EMAIL2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL2")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_EMAIL2,String)
            End If
            If (Original_EMAIL3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL3")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_EMAIL3,String)
            End If
            If (Original_EMAIL4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL4")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_EMAIL4,String)
            End If
            If (Original_email5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_email5")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_email5,String)
            End If
            If (Original_sitioweb Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_sitioweb")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_sitioweb,String)
            End If
            If (Original_TELEF1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TELEF1")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_TELEF1,String)
            End If
            If (Original_TELEF2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TELEF2")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_TELEF2,String)
            End If
            If (Original_telef3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_telef3")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_telef3,String)
            End If
            If (Original_fax Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fax")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_fax,String)
            End If
            If (Original_gerente Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gerente")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_gerente,String)
            End If
            If (Original_telger Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_telger")
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_telger,String)
            End If
            If (Original_contacto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_contacto")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_contacto,String)
            End If
            If (Original_telcon Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_telcon")
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_telcon,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_limcredito,Double)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_disponible,Double)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_desc1,Double)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_desc2,Double)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_desc3,Double)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_dias2,Integer)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_dias3,Integer)
            If (Original_observacion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_observacion")
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_observacion,String)
            End If
            If (Original_zona Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_zona")
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_zona,String)
            End If
            If (Original_cobrador Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cobrador")
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_cobrador,String)
            End If
            If (Original_vendedor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vendedor")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_vendedor,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_saldo,Double)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_ultpago,Double)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_fecultpago,Date)
            If (Original_forultpago Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_forultpago")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_forultpago,String)
            End If
            If (Original_regimeniva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_regimeniva")
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_regimeniva,String)
            End If
            If (Original_formapago Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_formapago")
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_formapago,String)
            End If
            If (Original_banco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_banco")
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_banco,String)
            End If
            If (Original_ctabanco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctabanco")
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_ctabanco,String)
            End If
            If (Original_bancodeposito1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_bancodeposito1")
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_bancodeposito1,String)
            End If
            If (Original_bancodeposito2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_bancodeposito2")
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_bancodeposito2,String)
            End If
            If (Original_ctabancodeposito1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctabancodeposito1")
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_ctabancodeposito1,String)
            End If
            If (Original_ctabancodeposito2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctabancodeposito2")
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_ctabancodeposito2,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_ingreso,Date)
            If (Original_codcon Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codcon")
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_codcon,String)
            End If
            If (Original_estatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estatus")
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_estatus,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_tipo,Integer)
            If (Original_ID_EMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ID_EMP")
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ID_EMP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal codpro As String,  _
                    ByVal nombre As String,  _
                    ByVal asignado As String,  _
                    ByVal RIF As String,  _
                    ByVal NIT As String,  _
                    ByVal DIRFISCAL As String,  _
                    ByVal dirprove As String,  _
                    ByVal EMAIL1 As String,  _
                    ByVal EMAIL2 As String,  _
                    ByVal EMAIL3 As String,  _
                    ByVal EMAIL4 As String,  _
                    ByVal email5 As String,  _
                    ByVal sitioweb As String,  _
                    ByVal TELEF1 As String,  _
                    ByVal TELEF2 As String,  _
                    ByVal telef3 As String,  _
                    ByVal fax As String,  _
                    ByVal gerente As String,  _
                    ByVal telger As String,  _
                    ByVal contacto As String,  _
                    ByVal telcon As String,  _
                    ByVal limcredito As Double,  _
                    ByVal disponible As Double,  _
                    ByVal desc1 As Double,  _
                    ByVal desc2 As Double,  _
                    ByVal desc3 As Double,  _
                    ByVal dias2 As Integer,  _
                    ByVal dias3 As Integer,  _
                    ByVal observacion As String,  _
                    ByVal zona As String,  _
                    ByVal cobrador As String,  _
                    ByVal vendedor As String,  _
                    ByVal saldo As Double,  _
                    ByVal ultpago As Double,  _
                    ByVal fecultpago As Date,  _
                    ByVal forultpago As String,  _
                    ByVal regimeniva As String,  _
                    ByVal formapago As String,  _
                    ByVal banco As String,  _
                    ByVal ctabanco As String,  _
                    ByVal bancodeposito1 As String,  _
                    ByVal bancodeposito2 As String,  _
                    ByVal ctabancodeposito1 As String,  _
                    ByVal ctabancodeposito2 As String,  _
                    ByVal ingreso As Date,  _
                    ByVal codcon As String,  _
                    ByVal estatus As String,  _
                    ByVal tipo As Integer,  _
                    ByVal ID_EMP As String,  _
                    ByVal Original_codpro As String,  _
                    ByVal Original_nombre As String,  _
                    ByVal Original_asignado As String,  _
                    ByVal Original_RIF As String,  _
                    ByVal Original_NIT As String,  _
                    ByVal Original_DIRFISCAL As String,  _
                    ByVal Original_dirprove As String,  _
                    ByVal Original_EMAIL1 As String,  _
                    ByVal Original_EMAIL2 As String,  _
                    ByVal Original_EMAIL3 As String,  _
                    ByVal Original_EMAIL4 As String,  _
                    ByVal Original_email5 As String,  _
                    ByVal Original_sitioweb As String,  _
                    ByVal Original_TELEF1 As String,  _
                    ByVal Original_TELEF2 As String,  _
                    ByVal Original_telef3 As String,  _
                    ByVal Original_fax As String,  _
                    ByVal Original_gerente As String,  _
                    ByVal Original_telger As String,  _
                    ByVal Original_contacto As String,  _
                    ByVal Original_telcon As String,  _
                    ByVal Original_limcredito As Double,  _
                    ByVal Original_disponible As Double,  _
                    ByVal Original_desc1 As Double,  _
                    ByVal Original_desc2 As Double,  _
                    ByVal Original_desc3 As Double,  _
                    ByVal Original_dias2 As Integer,  _
                    ByVal Original_dias3 As Integer,  _
                    ByVal Original_observacion As String,  _
                    ByVal Original_zona As String,  _
                    ByVal Original_cobrador As String,  _
                    ByVal Original_vendedor As String,  _
                    ByVal Original_saldo As Double,  _
                    ByVal Original_ultpago As Double,  _
                    ByVal Original_fecultpago As Date,  _
                    ByVal Original_forultpago As String,  _
                    ByVal Original_regimeniva As String,  _
                    ByVal Original_formapago As String,  _
                    ByVal Original_banco As String,  _
                    ByVal Original_ctabanco As String,  _
                    ByVal Original_bancodeposito1 As String,  _
                    ByVal Original_bancodeposito2 As String,  _
                    ByVal Original_ctabancodeposito1 As String,  _
                    ByVal Original_ctabancodeposito2 As String,  _
                    ByVal Original_ingreso As Date,  _
                    ByVal Original_codcon As String,  _
                    ByVal Original_estatus As String,  _
                    ByVal Original_tipo As Integer,  _
                    ByVal Original_ID_EMP As String) As Integer
            If (codpro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codpro")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(codpro,String)
            End If
            If (nombre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nombre")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(nombre,String)
            End If
            If (asignado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("asignado")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(asignado,String)
            End If
            If (RIF Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RIF")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(RIF,String)
            End If
            If (NIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NIT")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NIT,String)
            End If
            If (DIRFISCAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DIRFISCAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DIRFISCAL,String)
            End If
            If (dirprove Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dirprove")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(dirprove,String)
            End If
            If (EMAIL1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMAIL1")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(EMAIL1,String)
            End If
            If (EMAIL2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMAIL2")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(EMAIL2,String)
            End If
            If (EMAIL3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMAIL3")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(EMAIL3,String)
            End If
            If (EMAIL4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EMAIL4")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(EMAIL4,String)
            End If
            If (email5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("email5")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(email5,String)
            End If
            If (sitioweb Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sitioweb")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(sitioweb,String)
            End If
            If (TELEF1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TELEF1")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(TELEF1,String)
            End If
            If (TELEF2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TELEF2")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(TELEF2,String)
            End If
            If (telef3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("telef3")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(telef3,String)
            End If
            If (fax Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fax")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(fax,String)
            End If
            If (gerente Is Nothing) Then
                Throw New Global.System.ArgumentNullException("gerente")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(gerente,String)
            End If
            If (telger Is Nothing) Then
                Throw New Global.System.ArgumentNullException("telger")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(telger,String)
            End If
            If (contacto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contacto")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(contacto,String)
            End If
            If (telcon Is Nothing) Then
                Throw New Global.System.ArgumentNullException("telcon")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(telcon,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(limcredito,Double)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(disponible,Double)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(desc1,Double)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(desc2,Double)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(desc3,Double)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(dias2,Integer)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(dias3,Integer)
            If (observacion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("observacion")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(observacion,String)
            End If
            If (zona Is Nothing) Then
                Throw New Global.System.ArgumentNullException("zona")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(zona,String)
            End If
            If (cobrador Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cobrador")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(cobrador,String)
            End If
            If (vendedor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vendedor")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(vendedor,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(saldo,Double)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(ultpago,Double)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(fecultpago,Date)
            If (forultpago Is Nothing) Then
                Throw New Global.System.ArgumentNullException("forultpago")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(forultpago,String)
            End If
            If (regimeniva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("regimeniva")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(regimeniva,String)
            End If
            If (formapago Is Nothing) Then
                Throw New Global.System.ArgumentNullException("formapago")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(formapago,String)
            End If
            If (banco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("banco")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(banco,String)
            End If
            If (ctabanco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctabanco")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(ctabanco,String)
            End If
            If (bancodeposito1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("bancodeposito1")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(bancodeposito1,String)
            End If
            If (bancodeposito2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("bancodeposito2")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(bancodeposito2,String)
            End If
            If (ctabancodeposito1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctabancodeposito1")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(ctabancodeposito1,String)
            End If
            If (ctabancodeposito2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctabancodeposito2")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(ctabancodeposito2,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(ingreso,Date)
            If (codcon Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codcon")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(codcon,String)
            End If
            If (estatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estatus")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(estatus,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(tipo,Integer)
            If (ID_EMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID_EMP")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(ID_EMP,String)
            End If
            If (Original_codpro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codpro")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_codpro,String)
            End If
            If (Original_nombre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nombre")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_nombre,String)
            End If
            If (Original_asignado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_asignado")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_asignado,String)
            End If
            If (Original_RIF Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_RIF")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_RIF,String)
            End If
            If (Original_NIT Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NIT")
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_NIT,String)
            End If
            If (Original_DIRFISCAL Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DIRFISCAL")
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_DIRFISCAL,String)
            End If
            If (Original_dirprove Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dirprove")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_dirprove,String)
            End If
            If (Original_EMAIL1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL1")
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_EMAIL1,String)
            End If
            If (Original_EMAIL2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL2")
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_EMAIL2,String)
            End If
            If (Original_EMAIL3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL3")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_EMAIL3,String)
            End If
            If (Original_EMAIL4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_EMAIL4")
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_EMAIL4,String)
            End If
            If (Original_email5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_email5")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_email5,String)
            End If
            If (Original_sitioweb Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_sitioweb")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_sitioweb,String)
            End If
            If (Original_TELEF1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TELEF1")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_TELEF1,String)
            End If
            If (Original_TELEF2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TELEF2")
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_TELEF2,String)
            End If
            If (Original_telef3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_telef3")
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_telef3,String)
            End If
            If (Original_fax Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fax")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_fax,String)
            End If
            If (Original_gerente Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_gerente")
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_gerente,String)
            End If
            If (Original_telger Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_telger")
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_telger,String)
            End If
            If (Original_contacto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_contacto")
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_contacto,String)
            End If
            If (Original_telcon Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_telcon")
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_telcon,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_limcredito,Double)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_disponible,Double)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_desc1,Double)
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_desc2,Double)
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_desc3,Double)
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_dias2,Integer)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_dias3,Integer)
            If (Original_observacion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_observacion")
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_observacion,String)
            End If
            If (Original_zona Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_zona")
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_zona,String)
            End If
            If (Original_cobrador Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cobrador")
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_cobrador,String)
            End If
            If (Original_vendedor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_vendedor")
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_vendedor,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_saldo,Double)
            Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_ultpago,Double)
            Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_fecultpago,Date)
            If (Original_forultpago Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_forultpago")
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_forultpago,String)
            End If
            If (Original_regimeniva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_regimeniva")
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_regimeniva,String)
            End If
            If (Original_formapago Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_formapago")
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_formapago,String)
            End If
            If (Original_banco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_banco")
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_banco,String)
            End If
            If (Original_ctabanco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctabanco")
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_ctabanco,String)
            End If
            If (Original_bancodeposito1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_bancodeposito1")
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_bancodeposito1,String)
            End If
            If (Original_bancodeposito2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_bancodeposito2")
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_bancodeposito2,String)
            End If
            If (Original_ctabancodeposito1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctabancodeposito1")
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_ctabancodeposito1,String)
            End If
            If (Original_ctabancodeposito2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctabancodeposito2")
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_ctabancodeposito2,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_ingreso,Date)
            If (Original_codcon Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codcon")
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_codcon,String)
            End If
            If (Original_estatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estatus")
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_estatus,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_tipo,Integer)
            If (Original_ID_EMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ID_EMP")
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_ID_EMP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal nombre As String,  _
                    ByVal asignado As String,  _
                    ByVal RIF As String,  _
                    ByVal NIT As String,  _
                    ByVal DIRFISCAL As String,  _
                    ByVal dirprove As String,  _
                    ByVal EMAIL1 As String,  _
                    ByVal EMAIL2 As String,  _
                    ByVal EMAIL3 As String,  _
                    ByVal EMAIL4 As String,  _
                    ByVal email5 As String,  _
                    ByVal sitioweb As String,  _
                    ByVal TELEF1 As String,  _
                    ByVal TELEF2 As String,  _
                    ByVal telef3 As String,  _
                    ByVal fax As String,  _
                    ByVal gerente As String,  _
                    ByVal telger As String,  _
                    ByVal contacto As String,  _
                    ByVal telcon As String,  _
                    ByVal limcredito As Double,  _
                    ByVal disponible As Double,  _
                    ByVal desc1 As Double,  _
                    ByVal desc2 As Double,  _
                    ByVal desc3 As Double,  _
                    ByVal dias2 As Integer,  _
                    ByVal dias3 As Integer,  _
                    ByVal observacion As String,  _
                    ByVal zona As String,  _
                    ByVal cobrador As String,  _
                    ByVal vendedor As String,  _
                    ByVal saldo As Double,  _
                    ByVal ultpago As Double,  _
                    ByVal fecultpago As Date,  _
                    ByVal forultpago As String,  _
                    ByVal regimeniva As String,  _
                    ByVal formapago As String,  _
                    ByVal banco As String,  _
                    ByVal ctabanco As String,  _
                    ByVal bancodeposito1 As String,  _
                    ByVal bancodeposito2 As String,  _
                    ByVal ctabancodeposito1 As String,  _
                    ByVal ctabancodeposito2 As String,  _
                    ByVal ingreso As Date,  _
                    ByVal codcon As String,  _
                    ByVal estatus As String,  _
                    ByVal Original_codpro As String,  _
                    ByVal Original_nombre As String,  _
                    ByVal Original_asignado As String,  _
                    ByVal Original_RIF As String,  _
                    ByVal Original_NIT As String,  _
                    ByVal Original_DIRFISCAL As String,  _
                    ByVal Original_dirprove As String,  _
                    ByVal Original_EMAIL1 As String,  _
                    ByVal Original_EMAIL2 As String,  _
                    ByVal Original_EMAIL3 As String,  _
                    ByVal Original_EMAIL4 As String,  _
                    ByVal Original_email5 As String,  _
                    ByVal Original_sitioweb As String,  _
                    ByVal Original_TELEF1 As String,  _
                    ByVal Original_TELEF2 As String,  _
                    ByVal Original_telef3 As String,  _
                    ByVal Original_fax As String,  _
                    ByVal Original_gerente As String,  _
                    ByVal Original_telger As String,  _
                    ByVal Original_contacto As String,  _
                    ByVal Original_telcon As String,  _
                    ByVal Original_limcredito As Double,  _
                    ByVal Original_disponible As Double,  _
                    ByVal Original_desc1 As Double,  _
                    ByVal Original_desc2 As Double,  _
                    ByVal Original_desc3 As Double,  _
                    ByVal Original_dias2 As Integer,  _
                    ByVal Original_dias3 As Integer,  _
                    ByVal Original_observacion As String,  _
                    ByVal Original_zona As String,  _
                    ByVal Original_cobrador As String,  _
                    ByVal Original_vendedor As String,  _
                    ByVal Original_saldo As Double,  _
                    ByVal Original_ultpago As Double,  _
                    ByVal Original_fecultpago As Date,  _
                    ByVal Original_forultpago As String,  _
                    ByVal Original_regimeniva As String,  _
                    ByVal Original_formapago As String,  _
                    ByVal Original_banco As String,  _
                    ByVal Original_ctabanco As String,  _
                    ByVal Original_bancodeposito1 As String,  _
                    ByVal Original_bancodeposito2 As String,  _
                    ByVal Original_ctabancodeposito1 As String,  _
                    ByVal Original_ctabancodeposito2 As String,  _
                    ByVal Original_ingreso As Date,  _
                    ByVal Original_codcon As String,  _
                    ByVal Original_estatus As String,  _
                    ByVal Original_tipo As Integer,  _
                    ByVal Original_ID_EMP As String) As Integer
            Return Me.Update(Original_codpro, nombre, asignado, RIF, NIT, DIRFISCAL, dirprove, EMAIL1, EMAIL2, EMAIL3, EMAIL4, email5, sitioweb, TELEF1, TELEF2, telef3, fax, gerente, telger, contacto, telcon, limcredito, disponible, desc1, desc2, desc3, dias2, dias3, observacion, zona, cobrador, vendedor, saldo, ultpago, fecultpago, forultpago, regimeniva, formapago, banco, ctabanco, bancodeposito1, bancodeposito2, ctabancodeposito1, ctabancodeposito2, ingreso, codcon, estatus, Original_tipo, Original_ID_EMP, Original_codpro, Original_nombre, Original_asignado, Original_RIF, Original_NIT, Original_DIRFISCAL, Original_dirprove, Original_EMAIL1, Original_EMAIL2, Original_EMAIL3, Original_EMAIL4, Original_email5, Original_sitioweb, Original_TELEF1, Original_TELEF2, Original_telef3, Original_fax, Original_gerente, Original_telger, Original_contacto, Original_telcon, Original_limcredito, Original_disponible, Original_desc1, Original_desc2, Original_desc3, Original_dias2, Original_dias3, Original_observacion, Original_zona, Original_cobrador, Original_vendedor, Original_saldo, Original_ultpago, Original_fecultpago, Original_forultpago, Original_regimeniva, Original_formapago, Original_banco, Original_ctabanco, Original_bancodeposito1, Original_bancodeposito2, Original_ctabancodeposito1, Original_ctabancodeposito2, Original_ingreso, Original_codcon, Original_estatus, Original_tipo, Original_ID_EMP)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtMovimientosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtMovimientos"
            tableMapping.ColumnMappings.Add("codpro", "codpro")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("asignado", "asignado")
            tableMapping.ColumnMappings.Add("rif", "rif")
            tableMapping.ColumnMappings.Add("saldo", "saldo")
            tableMapping.ColumnMappings.Add("nummov", "nummov")
            tableMapping.ColumnMappings.Add("tipomov", "tipomov")
            tableMapping.ColumnMappings.Add("hora", "hora")
            tableMapping.ColumnMappings.Add("concepto", "concepto")
            tableMapping.ColumnMappings.Add("debitos", "debitos")
            tableMapping.ColumnMappings.Add("creditos", "creditos")
            tableMapping.ColumnMappings.Add("refer", "refer")
            tableMapping.ColumnMappings.Add("categoriaprov", "categoriaprov")
            tableMapping.ColumnMappings.Add("unidadnegocioprov", "unidadnegocioprov")
            tableMapping.ColumnMappings.Add("importe", "importe")
            tableMapping.ColumnMappings.Add("origen", "origen")
            tableMapping.ColumnMappings.Add("numorg", "numorg")
            tableMapping.ColumnMappings.Add("comproba", "comproba")
            tableMapping.ColumnMappings.Add("formapag", "formapag")
            tableMapping.ColumnMappings.Add("lapso", "lapso")
            tableMapping.ColumnMappings.Add("DE", "DE")
            tableMapping.ColumnMappings.Add("DV", "DV")
            tableMapping.ColumnMappings.Add("ingreso", "ingreso")
            tableMapping.ColumnMappings.Add("emision", "emision")
            tableMapping.ColumnMappings.Add("vence", "vence")
            tableMapping.ColumnMappings.Add("numpag", "numpag")
            tableMapping.ColumnMappings.Add("nompag", "nompag")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select a.codpro, b.nombre, 'xxxxxxxxxx' asignado, b.ingreso, b.rif, 'xxxxx' categ"& _ 
                "oriaprov, 'xxxxx' unidadnegocioprov, a.importe  saldo, 'xxxxxxxxxxxxxxx'  nummov"& _ 
                ", 'xx' tipomov, a.emision, a.hora, a.vence, a.refer, a.concepto, a.importe debit"& _ 
                "os, a.importe creditos, a.importe, a.origen , a.numorg,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.comproba, a.formapag,"& _ 
                " a.numpag, a.nompag, b.nombre lapso, 999 DE, 999 DV"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"from jsprotrapag a "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left j"& _ 
                "oin jsprocatpro b on (a.codpro=b.codpro and a.id_emp = b.id_emp) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.id_"& _ 
                "emp ='01' "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and a.historico = '0' "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and a.emision <= '2004-07-27' "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"group by a.c"& _ 
                "odpro"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"having round(saldo,0) <> 0 "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"order by a.codpro"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtMovimientosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtMovimientosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtMovimientosDataTable = New dsCompras.dtMovimientosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtVencimientosRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtVencimientosR"
            tableMapping.ColumnMappings.Add("CODPRO", "CODPRO")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("saldo0", "saldo0")
            tableMapping.ColumnMappings.Add("saldo1", "saldo1")
            tableMapping.ColumnMappings.Add("saldo2", "saldo2")
            tableMapping.ColumnMappings.Add("saldo3", "saldo3")
            tableMapping.ColumnMappings.Add("saldo4", "saldo4")
            tableMapping.ColumnMappings.Add("ID_EMP", "ID_EMP")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `jsprocatpro` WHERE ((`CODPRO` = @Original_CODPRO) AND (`NOMBRE` = @O"& _ 
                "riginal_NOMBRE) AND (`ID_EMP` = @Original_ID_EMP) AND (`tipo` = @Original_tipo))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_CODPRO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CODPRO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NOMBRE"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `jsprocatpro` SET `CODPRO` = @CODPRO, `NOMBRE` = @NOMBRE, `ID_EMP` = @ID_E"& _ 
                "MP, `tipo` = @tipo WHERE ((`CODPRO` = @Original_CODPRO) AND (`NOMBRE` = @Origina"& _ 
                "l_NOMBRE) AND (`ID_EMP` = @Original_ID_EMP) AND (`tipo` = @Original_tipo))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@CODPRO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CODPRO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@NOMBRE"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_CODPRO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CODPRO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_NOMBRE"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CODPRO, NOMBRE, 0.00 AS saldo0, 0.00 AS saldo1, 0.00 AS saldo2, 0.00 AS sa"& _ 
                "ldo3, 0.00 AS saldo4, ID_EMP, tipo FROM jsprocatpro a WHERE (ID_EMP = '01') GROU"& _ 
                "P BY CODPRO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtVencimientosRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtVencimientosRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtVencimientosRDataTable = New dsCompras.dtVencimientosRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsCompras.dtVencimientosRDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsCompras) As Integer
            Return Me.Adapter.Update(dataSet, "dtVencimientosR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtLibroIVATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtLibroIVA"
            tableMapping.ColumnMappings.Add("rif", "rif")
            tableMapping.ColumnMappings.Add("nompro", "nompro")
            tableMapping.ColumnMappings.Add("numcom", "numcom")
            tableMapping.ColumnMappings.Add("num_control", "num_control")
            tableMapping.ColumnMappings.Add("numdebito", "numdebito")
            tableMapping.ColumnMappings.Add("numcredito", "numcredito")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("fac_afectada", "fac_afectada")
            tableMapping.ColumnMappings.Add("controladorregistro", "controladorregistro")
            tableMapping.ColumnMappings.Add("tot_imp", "tot_imp")
            tableMapping.ColumnMappings.Add("imp_nogravado", "imp_nogravado")
            tableMapping.ColumnMappings.Add("baseivaimp", "baseivaimp")
            tableMapping.ColumnMappings.Add("porivaimp", "porivaimp")
            tableMapping.ColumnMappings.Add("impivaimp", "impivaimp")
            tableMapping.ColumnMappings.Add("tipoiva", "tipoiva")
            tableMapping.ColumnMappings.Add("tot_com", "tot_com")
            tableMapping.ColumnMappings.Add("Nogravado", "Nogravado")
            tableMapping.ColumnMappings.Add("baseiva", "baseiva")
            tableMapping.ColumnMappings.Add("poriva", "poriva")
            tableMapping.ColumnMappings.Add("impiva", "impiva")
            tableMapping.ColumnMappings.Add("retencion", "retencion")
            tableMapping.ColumnMappings.Add("num_retencion", "num_retencion")
            tableMapping.ColumnMappings.Add("emision", "emision1")
            tableMapping.ColumnMappings.Add("tipoproveedor", "tipoproveedor")
            tableMapping.ColumnMappings.Add("planillaimportacion", "planillaimportacion")
            tableMapping.ColumnMappings.Add("expedienteimportacion", "expedienteimportacion")
            tableMapping.ColumnMappings.Add("fec_retencion", "fec_retencion1")
            tableMapping.ColumnMappings.Add("retenciontercero", "retenciontercero")
            tableMapping.ColumnMappings.Add("anticipoiva", "anticipoiva")
            tableMapping.ColumnMappings.Add("numSerie", "numSerie")
            tableMapping.ColumnMappings.Add("nodeducible", "nodeducible")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT a.emisioniva emision, c.rif, c.nombre nompro, 'SR' tipoproveedor, a.numcom"& _ 
                ", a.numcom planillaimportacion, a.numcom expedienteimportacion,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            e.n"& _ 
                "um_control,'XXXXX' numSerie ,'' numdebito, '' numcredito, '01' tipo,  '' fac_afe"& _ 
                "ctada, '' controladorregistro, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            0.00 tot_imp, 0.00 imp_nogravado, 0"& _ 
                ".00 baseivaimp, 0.00 porivaimp, 0.00 impivaimp, 'A'  tipoiva, a.tot_com, 0.00 no"& _ 
                "deducible,  IF( ISNULL(d.baseiva), 0.00, d.baseiva) Nogravado,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            b."& _ 
                "baseiva, b.poriva, b.impiva, 0.00 retencion, a.numcom num_retencion, a.emisioniv"& _ 
                "a fec_retencion, 0.00 retenciontercero, 0.00 anticipoiva "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            FROM jspr"& _ 
                "oenccom a "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            LEFT JOIN jsproivacom b ON (a.numcom = b.numcom AND a.ej"& _ 
                "ercicio = b.ejercicio AND a.id_emp = b.id_emp AND b.tipoiva <> '' )"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                " LEFT JOIN jsprocatpro c ON (a.codpro = c.codpro AND a.id_emp = c.id_emp) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "        LEFT JOIN jsproivacom d ON (a.numcom = d.numcom AND a.id_emp = d.id_emp "& _ 
                "AND d.tipoiva = '' ) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            LEFT JOIN jsconnumcon e ON (a.numcom = e.numd"& _ 
                "oc AND e.num_control <> '' AND a.id_emp = e.id_emp AND e.org = 'COM' AND e.orige"& _ 
                "n = 'COM') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            WHERE "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            (e.num_control <> '' OR NOT e.num_c"& _ 
                "ontrol IS NULL ) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            a.emisioniva >= '2010-01-01' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "  a.emisioniva <= '2010-01-31' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            a.ejercicio = '' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "    a.id_emp = '01'"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtLibroIVADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtLibroIVADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtLibroIVADataTable = New dsCompras.dtLibroIVADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtRetencionesISLRTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtRetencionesISLR"
            tableMapping.ColumnMappings.Add("numcom", "numcom")
            tableMapping.ColumnMappings.Add("codpro", "codpro")
            tableMapping.ColumnMappings.Add("NOMPRO", "NOMPRO")
            tableMapping.ColumnMappings.Add("dirfiscal", "dirfiscal")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("RIF", "RIF")
            tableMapping.ColumnMappings.Add("numcredito", "numcredito")
            tableMapping.ColumnMappings.Add("concepto", "concepto")
            tableMapping.ColumnMappings.Add("TOT_COM", "TOT_COM")
            tableMapping.ColumnMappings.Add("montoexento", "montoexento")
            tableMapping.ColumnMappings.Add("TIPOIVA", "TIPOIVA")
            tableMapping.ColumnMappings.Add("porislr", "porislr")
            tableMapping.ColumnMappings.Add("BASEimponible", "BASEimponible")
            tableMapping.ColumnMappings.Add("imp_islr", "imp_islr")
            tableMapping.ColumnMappings.Add("num_control", "num_control")
            tableMapping.ColumnMappings.Add("retencion", "retencion")
            tableMapping.ColumnMappings.Add("num_retencion", "num_retencion")
            tableMapping.ColumnMappings.Add("emision", "emision1")
            tableMapping.ColumnMappings.Add("numSerie", "numSerie")
            tableMapping.ColumnMappings.Add("fec_retencion", "fec_retencion1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT a.numcom , a.emision, a.codpro, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"c.NOMBRE as NOMPRO, c.dirfiscal, 'XX' ti"& _ 
                "po,  c.RIF, 'XXXXX' numSerie,  'xxxxxxxxxxxx'  numcredito, e.concepto, a.TOT_COM"& _ 
                ", 0.00 montoexento, b.TIPOIVA, e.interes porislr, e.capital BASEimponible, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"e.i"& _ 
                "mporte imp_islr, a.numcom num_control, 0.00 retencion, 'xx' num_retencion, a.emi"& _ 
                "sion fec_retencion"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM jsproenccom a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"inner join  jsproivacom b  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on (a.numco"& _ 
                "m = b.numcom and a.ejercicio = b.ejercicio and a.id_emp = b.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join j"& _ 
                "sprocatpro c "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on ( c.codpro = a.codpro And c.id_emp = a.id_emp)  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join js"& _ 
                "proivacom d "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on (a.numcom=d.numcom and a.id_emp=d.id_emp and d.tipoiva = '')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"l"& _ 
                "eft join jsprotrapag e on (a.numcom = e.nummov and a.id_emp = e.id_emp and e.tip"& _ 
                "omov = 'NC' and substring(e.refer,1,5) = 'ISLR-'  ) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.EMISION >= '20"& _ 
                "05-08-01' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.EMISION <= '2005-08-31' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.ID_EMP = '01'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"order by 2,1,8 "& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtRetencionesISLRDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtRetencionesISLRDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtRetencionesISLRDataTable = New dsCompras.dtRetencionesISLRDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtRetencionesIVATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtRetencionesIVA"
            tableMapping.ColumnMappings.Add("numcom", "numcom")
            tableMapping.ColumnMappings.Add("codpro", "codpro")
            tableMapping.ColumnMappings.Add("NOMPRO", "NOMPRO")
            tableMapping.ColumnMappings.Add("dirfiscal", "dirfiscal")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("RIF", "RIF")
            tableMapping.ColumnMappings.Add("numcredito", "numcredito")
            tableMapping.ColumnMappings.Add("fac_afectada", "fac_afectada")
            tableMapping.ColumnMappings.Add("TOT_COM", "TOT_COM")
            tableMapping.ColumnMappings.Add("montoexento", "montoexento")
            tableMapping.ColumnMappings.Add("TIPOIVA", "TIPOIVA")
            tableMapping.ColumnMappings.Add("PORIVA", "PORIVA")
            tableMapping.ColumnMappings.Add("BASEIVA", "BASEIVA")
            tableMapping.ColumnMappings.Add("imp_iva", "imp_iva")
            tableMapping.ColumnMappings.Add("num_control", "num_control")
            tableMapping.ColumnMappings.Add("retencion", "retencion")
            tableMapping.ColumnMappings.Add("num_retencion", "num_retencion")
            tableMapping.ColumnMappings.Add("ret_iva", "ret_iva")
            tableMapping.ColumnMappings.Add("emision", "emision1")
            tableMapping.ColumnMappings.Add("numdebito", "numdebito")
            tableMapping.ColumnMappings.Add("fec_retencion", "fec_retencion1")
            tableMapping.ColumnMappings.Add("numSerie", "numSerie")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT a.numcom , a.emision, a.codpro, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"c.NOMBRE as NOMPRO, c.dirfiscal, 'XX' ti"& _ 
                "po,  c.RIF, 'xxxxx' numSerie,  'xxxxxxxxxxxx'  numdebito,  'xxxxxxxxxxxx'  numcr"& _ 
                "edito,  'xxxxxxxxxxxxxxx' fac_afectada, a.TOT_COM, 0.00 montoexento, b.TIPOIVA, "& _ 
                "b.PORIVA, b.BASEIVA BASEIVA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"b.IMPIVA imp_iva, a.numcom num_control, 0.00 rete"& _ 
                "ncion, 'xx' num_retencion, '2007-01-17'  fec_retencion, a.ret_iva"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM jsproenc"& _ 
                "com a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"inner join  jsproivacom b  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on (a.numcom = b.numcom and a.ejercicio = b."& _ 
                "ejercicio and a.id_emp = b.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join jsprocatpro c "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on ( c.codpro = a."& _ 
                "codpro And c.id_emp = a.id_emp)  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"left join jsproivacom d "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"on (a.numcom=d.numc"& _ 
                "om and a.id_emp=d.id_emp and d.tipoiva = '')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.EMISION >= '2005-08-01' "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.EMISION <= '2005-08-31' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.ID_EMP = '01'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"order by 2,1,8 "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtRetencionesIVADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtRetencionesIVADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtRetencionesIVADataTable = New dsCompras.dtRetencionesIVADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtGrupoSubGrupoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtGrupoSubGrupo"
            tableMapping.ColumnMappings.Add("grupo", "grupo")
            tableMapping.ColumnMappings.Add("subgrupo", "subgrupo")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("ID_EMP", "ID_EMP")
            tableMapping.ColumnMappings.Add("MODULO", "MODULO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `jsconctatab` WHERE ((`DESCRIP` = @Original_grupo) AND (`DESCRIP` = @"& _ 
                "Original_subgrupo) AND (`CODIGO` = @Original_CODIGO) AND (`ID_EMP` = @Original_I"& _ 
                "D_EMP) AND (`MODULO` = @Original_MODULO))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_grupo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "grupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_subgrupo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "subgrupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_CODIGO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CODIGO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_MODULO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "MODULO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `jsconctatab` (`DESCRIP`, `DESCRIP`, `CODIGO`, `ID_EMP`, `MODULO`) VA"& _ 
                "LUES (@grupo, @subgrupo, @CODIGO, @ID_EMP, @MODULO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@grupo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "grupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@subgrupo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "subgrupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@CODIGO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CODIGO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@MODULO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "MODULO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `jsconctatab` SET `DESCRIP` = @grupo, `DESCRIP` = @subgrupo, `CODIGO` = @C"& _ 
                "ODIGO, `ID_EMP` = @ID_EMP, `MODULO` = @MODULO WHERE ((`DESCRIP` = @Original_grup"& _ 
                "o) AND (`DESCRIP` = @Original_subgrupo) AND (`CODIGO` = @Original_CODIGO) AND (`"& _ 
                "ID_EMP` = @Original_ID_EMP) AND (`MODULO` = @Original_MODULO))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@grupo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "grupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@subgrupo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "subgrupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@CODIGO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CODIGO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@MODULO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "MODULO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Current
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_grupo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "grupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_subgrupo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "subgrupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_CODIGO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "CODIGO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_ID_EMP"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "ID_EMP"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter()
            param.ParameterName = "@Original_MODULO"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "MODULO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DESCRIP AS grupo, DESCRIP AS subgrupo, CODIGO, ID_EMP, MODULO FROM jsconct"& _ 
                "atab WHERE (MODULO = '00001') AND (ID_EMP = '01')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtGrupoSubGrupoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtGrupoSubGrupoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtGrupoSubGrupoDataTable = New dsCompras.dtGrupoSubGrupoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsCompras.dtGrupoSubGrupoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsCompras) As Integer
            Return Me.Adapter.Update(dataSet, "dtGrupoSubGrupo")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_grupo As String, ByVal Original_subgrupo As String, ByVal Original_CODIGO As String, ByVal Original_ID_EMP As String, ByVal Original_MODULO As String) As Integer
            If (Original_grupo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_grupo")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_grupo,String)
            End If
            If (Original_subgrupo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_subgrupo")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_subgrupo,String)
            End If
            If (Original_CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODIGO")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODIGO,String)
            End If
            If (Original_ID_EMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ID_EMP")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_ID_EMP,String)
            End If
            If (Original_MODULO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MODULO")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_MODULO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal grupo As String, ByVal subgrupo As String, ByVal CODIGO As String, ByVal ID_EMP As String, ByVal MODULO As String) As Integer
            If (grupo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("grupo")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(grupo,String)
            End If
            If (subgrupo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("subgrupo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(subgrupo,String)
            End If
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODIGO,String)
            End If
            If (ID_EMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID_EMP")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ID_EMP,String)
            End If
            If (MODULO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODULO")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(MODULO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal grupo As String, ByVal subgrupo As String, ByVal CODIGO As String, ByVal ID_EMP As String, ByVal MODULO As String, ByVal Original_grupo As String, ByVal Original_subgrupo As String, ByVal Original_CODIGO As String, ByVal Original_ID_EMP As String, ByVal Original_MODULO As String) As Integer
            If (grupo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("grupo")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(grupo,String)
            End If
            If (subgrupo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("subgrupo")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(subgrupo,String)
            End If
            If (CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODIGO,String)
            End If
            If (ID_EMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ID_EMP")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ID_EMP,String)
            End If
            If (MODULO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MODULO")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(MODULO,String)
            End If
            If (Original_grupo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_grupo")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_grupo,String)
            End If
            If (Original_subgrupo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_subgrupo")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_subgrupo,String)
            End If
            If (Original_CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_CODIGO,String)
            End If
            If (Original_ID_EMP Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ID_EMP")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ID_EMP,String)
            End If
            If (Original_MODULO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MODULO")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_MODULO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal grupo As String, ByVal subgrupo As String, ByVal Original_grupo As String, ByVal Original_subgrupo As String, ByVal Original_CODIGO As String, ByVal Original_ID_EMP As String, ByVal Original_MODULO As String) As Integer
            Return Me.Update(grupo, subgrupo, Original_CODIGO, Original_ID_EMP, Original_MODULO, Original_grupo, Original_subgrupo, Original_CODIGO, Original_ID_EMP, Original_MODULO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtListadoComprasItemsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtListadoComprasItems"
            tableMapping.ColumnMappings.Add("numcom", "numcom")
            tableMapping.ColumnMappings.Add("emision", "emision")
            tableMapping.ColumnMappings.Add("codpro", "codpro")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("grupo", "grupo")
            tableMapping.ColumnMappings.Add("subgrupo", "subgrupo")
            tableMapping.ColumnMappings.Add("categoriaprov", "categoriaprov")
            tableMapping.ColumnMappings.Add("unidadnegocioprov", "unidadnegocioprov")
            tableMapping.ColumnMappings.Add("tot_net", "tot_net")
            tableMapping.ColumnMappings.Add("descuen", "descuen")
            tableMapping.ColumnMappings.Add("imp_iva", "imp_iva")
            tableMapping.ColumnMappings.Add("tot_com", "tot_com")
            tableMapping.ColumnMappings.Add("COSTOU", "COSTOU")
            tableMapping.ColumnMappings.Add("vence1", "vence1")
            tableMapping.ColumnMappings.Add("vence2", "vence2")
            tableMapping.ColumnMappings.Add("vence3", "vence3")
            tableMapping.ColumnMappings.Add("vence4", "vence4")
            tableMapping.ColumnMappings.Add("emisioniva", "emisioniva")
            tableMapping.ColumnMappings.Add("rif", "rif")
            tableMapping.ColumnMappings.Add("nit", "nit")
            tableMapping.ColumnMappings.Add("dirfiscal", "dirfiscal")
            tableMapping.ColumnMappings.Add("comen", "comen")
            tableMapping.ColumnMappings.Add("almacen", "almacen")
            tableMapping.ColumnMappings.Add("referencia", "referencia")
            tableMapping.ColumnMappings.Add("responsable", "responsable")
            tableMapping.ColumnMappings.Add("condicionpago", "condicionpago")
            tableMapping.ColumnMappings.Add("items", "items")
            tableMapping.ColumnMappings.Add("kilos", "kilos")
            tableMapping.ColumnMappings.Add("exento", "exento")
            tableMapping.ColumnMappings.Add("baseiva_a", "baseiva_a")
            tableMapping.ColumnMappings.Add("baseiva_b", "baseiva_b")
            tableMapping.ColumnMappings.Add("baseiva_c", "baseiva_c")
            tableMapping.ColumnMappings.Add("baseiva", "baseiva")
            tableMapping.ColumnMappings.Add("impiva", "impiva")
            tableMapping.ColumnMappings.Add("renglon", "renglon")
            tableMapping.ColumnMappings.Add("item", "item")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("comentario", "comentario")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("monto", "monto")
            tableMapping.ColumnMappings.Add("unidad", "unidad")
            tableMapping.ColumnMappings.Add("cantidad", "cantidad")
            tableMapping.ColumnMappings.Add("peso", "peso")
            tableMapping.ColumnMappings.Add("causa", "causa")
            tableMapping.ColumnMappings.Add("nomcausa", "nomcausa")
            tableMapping.ColumnMappings.Add("des_art", "des_art")
            tableMapping.ColumnMappings.Add("des_pro", "des_pro")
            tableMapping.ColumnMappings.Add("costotot", "costotot")
            tableMapping.ColumnMappings.Add("estatus", "estatus")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT a.numcom, a.emision, a.vence1, a.vence2, a.vence3, a.vence4,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.emisioni"& _ 
                "va, a.codpro, b.nombre, b.rif, b.nit, b.dirfiscal, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"c.descrip grupo, c.descrip "& _ 
                "subgrupo, a.comen, a.comen almacen, a.comen referencia, a.comen responsable, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a"& _ 
                ".comen condicionpago, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"c.descrip categoriaprov, d.descrip unidadnegocioprov, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "a.items, a.tot_net kilos,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.tot_net, a.descuen, a.imp_iva exento, a.imp_iva bas"& _ 
                "eiva_a, a.imp_iva baseiva_b, a.imp_iva baseiva_c,  a.imp_iva baseiva, a.imp_iva "& _ 
                "impiva,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.imp_iva, a.tot_com,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"f.renglon, f.item, f.descrip, a.comen comentar"& _ 
                "io,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            f.iva, a.imp_iva monto,  f.unidad, f.cantidad, f.peso, f.reng"& _ 
                "lon causa, f.descrip nomcausa, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            f.COSTOU, a.imp_iva des_art, a.imp_"& _ 
                "iva des_pro,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            f.costotot, ELT(f.estatus+1,'','Mercancia no sujeta "& _ 
                "a Descuentos','Bonificaciones') estatus  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM jsproenccom a"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN jsproca"& _ 
                "tpro b ON (a.codpro = b.codpro AND a.id_emp = b.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN jsproliscat c"& _ 
                " ON (b.categoria = c.codigo AND b.id_emp = c.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN jsprolisuni d ON"& _ 
                " (b.unidad = d.codigo AND b.id_emp = d.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN jsprorencom f ON (a.nu"& _ 
                "mcom = f.numcom AND a.codpro = f.codpro AND a.id_emp = f.id_emp)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.emisi"& _ 
                "on >= '2006-01-01' AND"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.emision <= '2006-01-31' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.id_emp ='01'          "& _ 
                "  "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtListadoComprasItemsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtListadoComprasItemsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtListadoComprasItemsDataTable = New dsCompras.dtListadoComprasItemsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dtOrdenesDeCompraTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtOrdenesDeCompra"
            tableMapping.ColumnMappings.Add("numord", "numord")
            tableMapping.ColumnMappings.Add("emision", "emision")
            tableMapping.ColumnMappings.Add("entrega", "entrega")
            tableMapping.ColumnMappings.Add("codpro", "codpro")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("rif", "rif")
            tableMapping.ColumnMappings.Add("nit", "nit")
            tableMapping.ColumnMappings.Add("dirfiscal", "dirfiscal")
            tableMapping.ColumnMappings.Add("comen", "comen")
            tableMapping.ColumnMappings.Add("almacen", "almacen")
            tableMapping.ColumnMappings.Add("referencia", "referencia")
            tableMapping.ColumnMappings.Add("responsable", "responsable")
            tableMapping.ColumnMappings.Add("numcom", "numcom")
            tableMapping.ColumnMappings.Add("grupo", "grupo")
            tableMapping.ColumnMappings.Add("subgrupo", "subgrupo")
            tableMapping.ColumnMappings.Add("condicionpago", "condicionpago")
            tableMapping.ColumnMappings.Add("items", "items")
            tableMapping.ColumnMappings.Add("kilos", "kilos")
            tableMapping.ColumnMappings.Add("tot_net", "tot_net")
            tableMapping.ColumnMappings.Add("exento", "exento")
            tableMapping.ColumnMappings.Add("baseiva_a", "baseiva_a")
            tableMapping.ColumnMappings.Add("baseiva_b", "baseiva_b")
            tableMapping.ColumnMappings.Add("baseiva_c", "baseiva_c")
            tableMapping.ColumnMappings.Add("baseiva", "baseiva")
            tableMapping.ColumnMappings.Add("impiva", "impiva")
            tableMapping.ColumnMappings.Add("imp_iva", "imp_iva")
            tableMapping.ColumnMappings.Add("tot_ord", "tot_ord")
            tableMapping.ColumnMappings.Add("renglon", "renglon")
            tableMapping.ColumnMappings.Add("item", "item")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("comentario", "comentario")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("monto", "monto")
            tableMapping.ColumnMappings.Add("unidad", "unidad")
            tableMapping.ColumnMappings.Add("cantidad", "cantidad")
            tableMapping.ColumnMappings.Add("peso", "peso")
            tableMapping.ColumnMappings.Add("causa", "causa")
            tableMapping.ColumnMappings.Add("nomcausa", "nomcausa")
            tableMapping.ColumnMappings.Add("COSTOU", "COSTOU")
            tableMapping.ColumnMappings.Add("des_art", "des_art")
            tableMapping.ColumnMappings.Add("des_pro", "des_pro")
            tableMapping.ColumnMappings.Add("costotot", "costotot")
            tableMapping.ColumnMappings.Add("estatus", "estatus")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.Datum.My.MySettings.Default.ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT a.numord, a.emision, a.entrega, a.codpro, c.nombre, c.rif, c.nit, c.dirfis"& _ 
                "cal, a.comen,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" a.comen almacen, a.comen referencia, a.comen responsable, a.come"& _ 
                "n numcom, a.comen grupo, a.comen subgrupo, 'CREDITO CON VENCIMIENTO AL 2012-12-2"& _ 
                "1' condicionpago, a.items, a.tot_net kilos,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            a.tot_net, a.imp_iva ex"& _ 
                "ento, a.imp_iva baseiva_a, a.imp_iva baseiva_b, a.imp_iva baseiva_c,  a.imp_iva "& _ 
                "baseiva, a.imp_iva impiva,  a.imp_iva imp_iva, a.tot_ord,  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            b.rengl"& _ 
                "on, b.item, b.descrip, e.comentario,  b.iva, a.imp_iva monto,  b.unidad, b.canti"& _ 
                "dad, b.peso, b.renglon causa, b.descrip nomcausa, b.COSTOU, a.imp_iva des_art, a"& _ 
                ".imp_iva des_pro,  b.costotot, ELT(b.estatus+1,'','Mercancia no sujeta a Descuen"& _ 
                "tos','Bonificaciones') estatus  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            FROM jsproencord a  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "LEFT JOIN jsprorenord b ON (a.NUMORD = b.NUMORD AND a.codpro = b.codpro AND a.id"& _ 
                "_emp = b.id_emp)  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            LEFT JOIN jsvenrencom e ON (b.NUMORD = e.numdoc "& _ 
                "AND b.id_emp = e.id_emp AND b.renglon = e.renglon AND e.origen = 'ORD')  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "       LEFT JOIN jsprocatpro c ON (a.codpro = c.codpro AND a.id_emp = c.id_emp) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            WHERE "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            a.numord = 'OC00000001' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            a"& _ 
                ".id_emp = '01' "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            ORDER BY b.estatus, b.renglon "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsCompras.dtOrdenesDeCompraDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsCompras.dtOrdenesDeCompraDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsCompras.dtOrdenesDeCompraDataTable = New dsCompras.dtOrdenesDeCompraDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _dtProveedorTableAdapter As dtProveedorTableAdapter
        
        Private _dtVencimientosRTableAdapter As dtVencimientosRTableAdapter
        
        Private _dtGrupoSubGrupoTableAdapter As dtGrupoSubGrupoTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property dtProveedorTableAdapter() As dtProveedorTableAdapter
            Get
                Return Me._dtProveedorTableAdapter
            End Get
            Set
                Me._dtProveedorTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property dtVencimientosRTableAdapter() As dtVencimientosRTableAdapter
            Get
                Return Me._dtVencimientosRTableAdapter
            End Get
            Set
                Me._dtVencimientosRTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property dtGrupoSubGrupoTableAdapter() As dtGrupoSubGrupoTableAdapter
            Get
                Return Me._dtGrupoSubGrupoTableAdapter
            End Get
            Set
                Me._dtGrupoSubGrupoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._dtProveedorTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dtProveedorTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dtProveedorTableAdapter.Connection
                End If
                If ((Not (Me._dtVencimientosRTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dtVencimientosRTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dtVencimientosRTableAdapter.Connection
                End If
                If ((Not (Me._dtGrupoSubGrupoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dtGrupoSubGrupoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dtGrupoSubGrupoTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._dtProveedorTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._dtVencimientosRTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._dtGrupoSubGrupoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsCompras, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dtProveedorTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.dtProveedor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dtProveedorTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dtVencimientosRTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.dtVencimientosR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dtVencimientosRTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dtGrupoSubGrupoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.dtGrupoSubGrupo.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dtGrupoSubGrupoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsCompras, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dtProveedorTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.dtProveedor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dtProveedorTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dtVencimientosRTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.dtVencimientosR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dtVencimientosRTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dtGrupoSubGrupoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.dtGrupoSubGrupo.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dtGrupoSubGrupoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsCompras, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._dtGrupoSubGrupoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.dtGrupoSubGrupo.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dtGrupoSubGrupoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._dtVencimientosRTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.dtVencimientosR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dtVencimientosRTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._dtProveedorTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.dtProveedor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dtProveedorTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsCompras) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._dtProveedorTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dtProveedorTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._dtVencimientosRTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dtVencimientosRTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._dtGrupoSubGrupoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dtGrupoSubGrupoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._dtProveedorTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dtProveedorTableAdapter, Me._dtProveedorTableAdapter.Connection)
                    Me._dtProveedorTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._dtProveedorTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._dtProveedorTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dtProveedorTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dtProveedorTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._dtVencimientosRTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dtVencimientosRTableAdapter, Me._dtVencimientosRTableAdapter.Connection)
                    Me._dtVencimientosRTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._dtVencimientosRTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._dtVencimientosRTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dtVencimientosRTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dtVencimientosRTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._dtGrupoSubGrupoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dtGrupoSubGrupoTableAdapter, Me._dtGrupoSubGrupoTableAdapter.Connection)
                    Me._dtGrupoSubGrupoTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._dtGrupoSubGrupoTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._dtGrupoSubGrupoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dtGrupoSubGrupoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dtGrupoSubGrupoTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._dtProveedorTableAdapter) Is Nothing) Then
                    Me._dtProveedorTableAdapter.Connection = CType(revertConnections(Me._dtProveedorTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._dtProveedorTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._dtVencimientosRTableAdapter) Is Nothing) Then
                    Me._dtVencimientosRTableAdapter.Connection = CType(revertConnections(Me._dtVencimientosRTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._dtVencimientosRTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._dtGrupoSubGrupoTableAdapter) Is Nothing) Then
                    Me._dtGrupoSubGrupoTableAdapter.Connection = CType(revertConnections(Me._dtGrupoSubGrupoTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._dtGrupoSubGrupoTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
